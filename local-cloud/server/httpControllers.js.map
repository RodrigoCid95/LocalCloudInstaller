{
  "version": 3,
  "sources": ["../../controllers/index.ts", "../../node_modules/px.io/injectables/controllers.js", "../../node_modules/px.io/injectables/controllers.http.js", "../../controllers/apis/middlewares/dev-mode.ts", "../../controllers/middlewares/dev-mode.ts", "../../controllers/middlewares/session.ts", "../../controllers/middlewares/tokens.ts", "../../controllers/middlewares/csp.ts", "../../controllers/app.ts", "../../controllers/middlewares/file.ts", "../../controllers/file.ts", "../../controllers/shared.ts", "../../controllers/launch.ts", "../../controllers/apis/middlewares/permissions.ts", "../../controllers/apis/apps.ts", "../../controllers/apis/middlewares/session.ts", "../../libraries/classes/Encrypt.ts", "../../controllers/apis/middlewares/encrypt.ts", "../../libraries/classes/APIList.ts", "../../controllers/apis/auth.ts", "../../controllers/apis/fs.ts", "../../controllers/apis/permissions.ts", "../../controllers/apis/profile.ts", "../../controllers/apis/recycle-bin.ts", "../../controllers/apis/shared.ts", "../../controllers/apis/sources.ts", "../../controllers/apis/storages.ts", "../../controllers/apis/users.ts", "../../controllers/apis/index.ts"],
  "sourcesContent": ["import { devMode } from './middlewares/dev-mode'\nimport { verifySession, verifyNotSession } from './middlewares/session'\nimport { tokens } from './middlewares/tokens'\nimport { CSP } from './middlewares/csp'\n\ndeclare const Model: PXIO.ModelDecorator\ndeclare const On: PXIOHTTP.OnDecorator\ndeclare const BeforeMiddleware: PXIOHTTP.BeforeMiddlewareDecorator\ndeclare const METHODS: PXIOHTTP.METHODS\nconst { GET } = METHODS\n\nexport class IndexController {\n  @Model('UsersModel') public usersModel: Models<'UsersModel'>\n  @Model('DevModeModel') public devModeModel: Models<'DevModeModel'>\n  @On(GET, '/')\n  @BeforeMiddleware([devMode, CSP, tokens, verifySession])\n  public dashboard(_: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): void {\n    if (this.devModeModel.devMode.enable) {\n      res.render('os/index', { title: 'LocalCloud - Dev Mode', description: 'LocalCloud - Modo de desarrollo', devMode: true })\n    } else {\n      res.render('os/index', { title: 'LocalCloud - Dashboard', description: 'LocalCloud - Dashboard' })\n    }\n  }\n  @On(GET, '/login')\n  @BeforeMiddleware([devMode, CSP, tokens, verifyNotSession])\n  public login(_: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): void {\n    res.render('os/index', { title: 'LocalCloud - Iniciar sesi\u00F3n', description: 'LocalCloud - Iniciar sesi\u00F3n' })\n  }\n}\n\nexport * from './app'\nexport * from './file'\nexport * from './shared'\nexport * from './launch'\nexport * from './apis'", "const modlsPath = './modls.js'\nexport const models = require(modlsPath).models\nexport function Model(model) {\n  return (target, propertyKey) => {\n    Object.defineProperty(target, propertyKey, {\n      get() {\n        return models.get(model)\n      }\n    })\n  }\n}", "export function Namespace(namespace, mws = {}) {\n  return function (constructor) {\n    constructor.$namespace = namespace\n    if (mws.before) {\n      constructor.$beforeMiddlewares = mws.before\n    }\n    if (mws.after) {\n      constructor.$afterMiddlewares = mws.after\n    }\n    return constructor\n  }\n}\nconst registerRoute = (target, propertyKey, descriptor) => {\n  if (!target.hasOwnProperty('$routes')) {\n    target.$routes = {}\n  }\n  if (!target.$routes.hasOwnProperty(propertyKey)) {\n    target.$routes[propertyKey] = {\n      methods: [],\n      path: '',\n      method: descriptor?.value,\n      middlewares: {\n        after: [],\n        before: []\n      }\n    }\n  } else {\n    target.$routes[propertyKey].method = descriptor?.value\n  }\n}\nexport function AfterMiddleware(mws) {\n  return (target, propertyKey, descriptor) => {\n    registerRoute(target, propertyKey, descriptor)\n    for (let mw of mws) {\n      if (typeof mw === 'string') {\n        if (!target.hasOwnProperty(mw)) {\n          console.error(`\\n${target.name}: El middleware ${mw} no est\u00E1 declarado!`)\n          return descriptor\n        }\n        mw = target[mw]\n      }\n      target.$routes[propertyKey].middlewares.after.push(mw)\n    }\n    if (descriptor) {\n      return descriptor\n    }\n  }\n}\nexport function BeforeMiddleware(mws) {\n  return (target, propertyKey, descriptor) => {\n    registerRoute(target, propertyKey, descriptor)\n    for (let mw of mws) {\n      if (typeof mw === 'string') {\n        if (!target.hasOwnProperty(mw)) {\n          console.error(`\\n${target.name}: El middleware ${mw} no est\u00E1 declarado!`)\n          if (descriptor) {\n            return descriptor\n          }\n        }\n        mw = target[mw]\n      }\n      target.$routes[propertyKey].middlewares.before.push(mw)\n    }\n    if (descriptor) {\n      return descriptor\n    }\n  }\n}\nexport function On(methods, path) {\n  return (target, propertyKey, descriptor) => {\n    registerRoute(target, propertyKey, descriptor)\n    target.$routes[propertyKey].methods = Array.isArray(methods) ? methods : [methods]\n    target.$routes[propertyKey].path = path\n    return descriptor\n  }\n}\nexport function View(path, args = {}) {\n  return (target, propertyKey) => {\n    let value = undefined\n    On('get', path)(target, propertyKey, {\n      value: ({ body, params, query, session }, res) => {\n        res.render(value, { body, params, query, session, ...args })\n      }\n    })\n    return {\n      set(val) {\n        if (value === undefined) {\n          value = val\n        }\n      },\n      get() {\n        return value\n      }\n    }\n  }\n}\nexport const METHODS = {\n  GET: 'get',\n  POST: 'post',\n  PUT: 'put',\n  DELETE: 'delete',\n  ALL: ''\n}", "export function verifyDevMode(): Models<'DevModeModel'> | boolean {\n  const _this: any = this\n  const devModeModel = _this?.devModeModel as Models<'DevModeModel'>\n  if (devModeModel?.devMode.enable) {\n    return devModeModel\n  }\n  return false\n}", "import { verifyDevMode } from \"controllers/apis/middlewares/dev-mode\"\n\nexport function devMode(req: PXIOHTTP.Request, res: PXIOHTTP.Response, next: PXIOHTTP.Next) {\n  const model = verifyDevMode.bind(this)()\n  if (model) {\n    if (req.path !== '/') {\n      res.redirect('/')\n    } else {\n      next()\n    }\n  } else {\n    next()\n  }\n}", "import { verifyDevMode } from \"controllers/apis/middlewares/dev-mode\"\n\nexport async function verifySession(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response, next: PXIOHTTP.Next): Promise<void> {\n  if (req.session.user) {\n    next()\n  } else {\n    const model: Models<'DevModeModel'> | boolean = verifyDevMode.bind(this)()\n    if (typeof model !== 'boolean') {\n      req.session.user = model.getUser()\n      req.session.apps = await model.getApps(req.session.user?.uid || NaN)\n      next()\n      return\n    }\n    if (req.originalUrl === '/') {\n      res.redirect('/login')\n    } else {\n      res.redirect(`/login?dest=${req.originalUrl}`)\n    }\n  }\n}\nexport const verifyNotSession: PXIOHTTP.Middleware = (req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response, next: PXIOHTTP.Next): void => {\n  if (!req.session.user) {\n    next()\n  } else {\n    if (req.query.dest) {\n      res.redirect(req.query.dest as string)\n    } else {\n      res.redirect('/')\n    }\n  }\n}", "import { v4 } from 'uuid'\nimport { verifyDevMode } from 'controllers/apis/middlewares/dev-mode'\n\nexport function tokens(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response, next: PXIOHTTP.Next): void {\n  const model = verifyDevMode.bind(this)()\n  if (model) {\n    next()\n    return\n  }\n  if (!req.session.key) {\n    req.session.key = v4()\n  }\n  if (!req.session.token) {\n    req.session.token = v4()\n  }\n  next()\n}", "export const CSP: PXIOHTTP.Middleware = (_: PXIOHTTP.Request, res: PXIOHTTP.Response, next: PXIOHTTP.Next) => {\n  res.setHeader('Content-Security-Policy', `default-src 'self'; script-src 'self' 'unsafe-inline'; style-src-elem 'self' 'unsafe-inline';`)\n  next()\n}", "import path from 'node:path'\nimport { devMode } from './middlewares/dev-mode'\nimport { verifySession } from './middlewares/session'\n\ndeclare const Namespace: PXIOHTTP.NamespaceDecorator\ndeclare const Model: PXIO.ModelDecorator\ndeclare const On: PXIOHTTP.OnDecorator\ndeclare const METHODS: PXIOHTTP.METHODS\n\nexport const verifyApp = (req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response, next: PXIOHTTP.Next) => {\n  const { packagename } = req.params\n  if (req.session?.apps && req.session?.apps[packagename]) {\n    const app = req.session.apps[packagename]\n    if (app) {\n      const directives = {\n        'default-src': [\"'self'\"],\n        'script-src': [\"'self'\", \"'unsafe-inline'\"],\n        'style-src-elem': [\"'self'\", \"'unsafe-inline'\"],\n        'img-src': [\"'self'\", 'data:'],\n        'font-src': [\"'self'\", 'data:']\n      }\n      const setDirective = (directive: string, value: string) => {\n        if (!directives[directive]) {\n          directives[directive] = [\"'self'\"]\n        }\n        if (!directives[directive].includes(value)) {\n          directives[directive].push(value)\n        }\n      }\n      const secureSources = app.secureSources.filter(item => item.active)\n      for (const item of secureSources) {\n        if (item.type === 'image') {\n          setDirective('img-src', item.source)\n          continue\n        }\n        if (item.type === 'media') {\n          setDirective('media-src', item.source)\n          continue\n        }\n        if (item.type === 'object') {\n          setDirective('object-src', item.source)\n          continue\n        }\n        if (item.type === 'script') {\n          setDirective('script-src', item.source)\n          continue\n        }\n        if (item.type === 'style') {\n          setDirective('style-src', item.source)\n          continue\n        }\n        if (item.type === 'worker') {\n          setDirective('worker-src', item.source)\n          continue\n        }\n        if (item.type === 'font') {\n          setDirective('font-src', item.source)\n          continue\n        }\n        if (item.type === 'connect') {\n          setDirective('connect-src', item.source)\n          continue\n        }\n      }\n      res.setHeader(\n        'Content-Security-Policy',\n        Object.entries(directives)\n          .map(([directive, value]) => `${directive} ${value.join(' ')}`)\n          .join('; ')\n      )\n      next()\n    } else {\n      res.redirect('/')\n    }\n  } else {\n    res.redirect('/')\n  }\n}\n\n@Namespace('/app', { before: [devMode, verifySession, verifyApp] })\nexport class AppController {\n  @Model('UsersModel') public usersModel: Models<'UsersModel'>\n  @Model('DevModeModel') public devModeModel: Models<'DevModeModel'>\n  @Model('AppsModel') private appsModel: Models<'AppsModel'>\n  @On(METHODS.GET, '/:packagename')\n  public app(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response) {\n    const app = (req.session as LocalCloud.SessionData).apps[req.params.packagename]\n    if (app.useTemplate) {\n      res.render(\n        `apps/${req.params.packagename.replace(/\\./g, '-')}`,\n        {\n          title: app.title,\n          description: app.description,\n          package_name: req.params.packagename\n        }\n      )\n    } else {\n      res.render(\n        'os/app',\n        {\n          title: app.title,\n          description: app.description,\n          package_name: req.params.packagename\n        }\n      )\n    }\n  }\n  @On(METHODS.GET, '/:packagename/*')\n  public source(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response) {\n    const appPath = this.appsModel.paths.getApp(req.params.packagename)\n    const pathSource = path.join(appPath, ...req.params[0].split('/'))\n    res.sendFile(pathSource, error => {\n      if (error) {\n        res.status(404).end()\n      }\n    })\n  }\n}", "import fs from 'node:fs'\n\nexport const responseFile: PXIOHTTP.Middleware = (req: PXIOHTTP.Request, res: PXIOHTTP.Response): void => {\n  const { path, file } = req.body\n  if (typeof path === 'boolean' || !file) {\n    res.status(404).json({\n      code: 'not-found',\n      message: 'La ruta que indicaste no existe.'\n    })\n    return\n  }\n  const query = Object.keys(req.query)\n  if (req.headers['sec-fetch-dest'] === 'empty' || query.includes('download')) {\n    let fileInfo: FileSystem.ItemInfo | undefined = undefined\n    if (Array.isArray(file)) {\n      fileInfo = file[0]\n    }\n    if (typeof file === 'object' && !Array.isArray(file)) {\n      fileInfo = file\n    }\n    if (fileInfo) {\n      res.setHeader('Content-Length', fileInfo.size)\n      res.setHeader('Content-Disposition', `attachment; filename=\"${fileInfo.name}\"`)\n    }\n    const fileStream = fs.createReadStream(path)\n    fileStream.pipe(res)\n  } else {\n    res.sendFile(path)\n  }\n}", "import { verifySession } from './middlewares/session'\nimport { responseFile } from './middlewares/file'\nimport { CSP } from './middlewares/csp'\n\ndeclare const Namespace: PXIOHTTP.NamespaceDecorator\ndeclare const Model: PXIO.ModelDecorator\ndeclare const On: PXIOHTTP.OnDecorator\ndeclare const AfterMiddleware: PXIOHTTP.AfterMiddlewareDecorator\ndeclare const METHODS: PXIOHTTP.METHODS\n\nconst { GET } = METHODS\n\n@Namespace('/file', { before: [verifySession, CSP] })\nexport class FileController {\n  @Model('DevModeModel') public devModeModel: Models<'DevModeModel'>\n  @Model('FileSystemModel') private fsModel: Models<'FileSystemModel'>\n  @On(GET, '/shared/*')\n  @AfterMiddleware([responseFile])\n  public sharedFile(req: PXIOHTTP.Request, _: PXIOHTTP.Response, next: PXIOHTTP.Next): void {\n    const path = this.fsModel.resolveSharedFile(req.params[0].split('/'))\n    const file = this.fsModel.resolveFileOrDirectory(path)\n    req.body = { path, file }\n    next()\n  }\n  @On(GET, '/user/*')\n  @AfterMiddleware([responseFile])\n  public userFile(req: PXIOHTTP.Request<LocalCloud.SessionData>, _: PXIOHTTP.Response, next: PXIOHTTP.Next): void {\n    const path = this.fsModel.resolveUserFile(req.session.user?.name || '', req.params[0].split('/'))\n    const file = this.fsModel.resolveFileOrDirectory(path)\n    req.body = { path, file }\n    next()\n  }\n}", "import { responseFile } from \"./middlewares/file\"\n\ndeclare const Namespace: PXIOHTTP.NamespaceDecorator\ndeclare const Model: PXIO.ModelDecorator\ndeclare const On: PXIOHTTP.OnDecorator\ndeclare const METHODS: PXIOHTTP.METHODS\ndeclare const AfterMiddleware: PXIOHTTP.AfterMiddlewareDecorator\n\n@Namespace('/shared')\nexport class SharedController {\n  @Model('SharedModel') private sharedModel: Models<'SharedModel'>\n  @Model('FileSystemModel') private fsModel: Models<'FileSystemModel'>\n  @On(METHODS.GET, '/:id')\n  @AfterMiddleware([responseFile])\n  public async shared(req: PXIOHTTP.Request, res: PXIOHTTP.Response, next: PXIOHTTP.Next) {\n    const { id } = req.params\n    const [result] = await this.sharedModel.find({ id })\n    if (result) {\n      const { path, uid: uuid } = result\n      const base = path.shift()\n      let p: string | boolean = ''\n      let file: boolean | FileSystem.ItemInfo | FileSystem.ItemInfo[]\n      if (base === 'shared') {\n        p = this.fsModel.resolveSharedFile(path)\n        file = this.fsModel.resolveFileOrDirectory(p)\n      } else {\n        p = this.fsModel.resolveUserFile(uuid, path)\n        file = this.fsModel.resolveFileOrDirectory(p)\n      }\n      req.body = { path: p, file }\n      next()\n    } else {\n      res.status(404).end()\n    }\n  }\n}", "import { CSP } from './middlewares/csp'\nimport { verifySession } from './middlewares/session'\n\ndeclare const Namespace: PXIOHTTP.NamespaceDecorator\ndeclare const Model: PXIO.ModelDecorator\ndeclare const On: PXIOHTTP.OnDecorator\ndeclare const AfterMiddleware: PXIOHTTP.AfterMiddlewareDecorator\ndeclare const METHODS: PXIOHTTP.METHODS\n\nconst { GET } = METHODS\n\n@Namespace('/launch', { before: [verifySession, CSP] })\nexport class LaunchController {\n  @Model('DevModeModel') public devModeModel: Models<'DevModeModel'>\n  @Model('FileSystemModel') private fsModel: Models<'FileSystemModel'>\n  public responseFile(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): void {\n    const path = req.body\n    if (typeof path === 'boolean') {\n      res.status(404).json({\n        code: 'not-found',\n        message: 'La ruta que indicaste no existe.'\n      })\n      return\n    }\n    const { app: queryApp = '' } = req.query\n    const segments = req.url.split('/').filter(segment => segment !== '')\n    const name = segments[segments.length - 1]\n    const nameSegments = name.split('.')\n    const ext = nameSegments[nameSegments.length - 1]\n    const { apps = {} } = req.session\n    const keys = Object.keys(apps)\n    const possibleApps: string[] = []\n    for (const package_name of keys) {\n      const app = apps[package_name]\n      if (app?.extensions?.includes(ext) || package_name === queryApp) {\n        possibleApps.push(package_name)\n      }\n    }\n    if (possibleApps.length > 0) {\n      res.redirect(`/app/${possibleApps[0]}?open=${req.url}`)\n      return\n    }\n    res.redirect(`/file${req.url.split('?')[0]}`)\n  }\n  @On(GET, '/shared/*')\n  @AfterMiddleware(['responseFile'])\n  public sharedFile(req: PXIOHTTP.Request, _: PXIOHTTP.Response, next: PXIOHTTP.Next): void {\n    req.body = this.fsModel.resolveSharedFile(req.params[0].split('/'))\n    next()\n  }\n  @On(GET, '/user/*')\n  @AfterMiddleware(['responseFile'])\n  public userFile(req: PXIOHTTP.Request<LocalCloud.SessionData>, _: PXIOHTTP.Response, next: PXIOHTTP.Next): void {\n    req.body = this.fsModel.resolveUserFile(req.session.user?.name || '', req.params[0].split('/'))\n    next()\n  }\n}", "import { verifyDevMode } from \"./dev-mode\"\n\nconst DENIED_ERROR = {\n  code: 'access-denied',\n  message: 'No tienes permiso para hacer esto!'\n}\n\nexport const getOrigin = (referer: string): Origin => {\n  const { pathname } = new URL(referer)\n  if (pathname === '/') {\n    return 1\n  }\n  if (/^\\/app\\/.+$/.test(pathname)) {\n    const segments = pathname.split('/')\n    return segments[2]\n  }\n  return 0\n}\n\nexport function verifyPermission(permission: APIPermission | string) {\n  let apiPermission: APIPermission\n  if (typeof permission === 'string') {\n    apiPermission = {\n      name: permission as any,\n      public: false,\n      freeForDashboard: false\n    }\n  } else {\n    apiPermission = permission\n  }\n  return async function (req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response, next: PXIOHTTP.Next): Promise<void> {\n    if (verifyDevMode.bind(this)()) {\n      next()\n      return\n    }\n    if (req.headers.referer === undefined) {\n      res.status(403).json(DENIED_ERROR)\n      return\n    }\n    if (req.headers.token === undefined) {\n      res.status(403).json(DENIED_ERROR)\n      return\n    }\n    const origin = getOrigin(req.headers.referer)\n    if (typeof origin === 'string') {\n      const { permissions } = (req.session.apps as LocalCloud.SessionApps)[origin]\n      const appPermission: Permissions.Permission | undefined = permissions.filter(item => item.api === apiPermission.name)[0]\n      if (appPermission?.active) {\n        next()\n        return\n      }\n    } else {\n      if (origin === 0 && apiPermission.public) {\n        next()\n        return\n      }\n      if (origin === 1 && apiPermission.freeForDashboard) {\n        next()\n        return\n      }\n    }\n    res.status(403).json(DENIED_ERROR)\n  }\n}\n\ntype Origin = 0 | 1 | string\n\ndeclare global {\n  interface APIPermission {\n    name: Uppercase<string>\n    public: boolean\n    freeForDashboard: boolean\n  }\n  interface APIPermissionList {\n    [name: string]: string | APIPermission\n  }\n}", "import fileUpload, { type UploadedFile } from 'express-fileupload'\nimport { verifySession } from './middlewares/session'\nimport { verifyPermission } from './middlewares/permissions'\nimport { decryptRequest } from './middlewares/encrypt'\nimport { APPS } from 'libraries/classes/APIList'\n\ndeclare const Namespace: PXIOHTTP.NamespaceDecorator\ndeclare const Model: PXIO.ModelDecorator\ndeclare const On: PXIOHTTP.OnDecorator\ndeclare const BeforeMiddleware: PXIOHTTP.BeforeMiddlewareDecorator\ndeclare const METHODS: PXIOHTTP.METHODS\nconst { GET, PUT, DELETE } = METHODS\n\n@Namespace('api/apps', { before: [verifySession, decryptRequest] })\nexport class AppsAPIController {\n  @Model('DevModeModel') public devModeModel: Models<'DevModeModel'>\n  @Model('UsersModel') public usersModel: Models<'UsersModel'>\n  @Model('AppsModel') public appsModel: Models<'AppsModel'>\n  @On(GET, '/')\n  @BeforeMiddleware([verifyPermission(APPS.APPS)])\n  public async apps(_: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): Promise<void> {\n    const results = await this.appsModel.getApps()\n    res.json(results.map(({ package_name, title, description, author, extensions, useStorage }) => ({ package_name, title, description, author, extensions, useStorage })))\n  }\n  @On(GET, '/:uid')\n  @BeforeMiddleware([verifyPermission(APPS.APPS_BY_UID)])\n  public async appsByUID(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): Promise<void> {\n    const user = this.usersModel.getUserByUID(Number(req.params.uid || 'NaN'))\n    if (!user) {\n      res.status(400).json({\n        code: 'user-not-exist',\n        message: 'El usuario no existe.'\n      })\n      return\n    }\n    const results = await this.appsModel.getAppsByUID(user.uid)\n    res.json(results.map(({ package_name, title, description, author, extensions, useStorage }) => ({ package_name, title, description, author, extensions, useStorage })))\n  }\n  @On(PUT, '/')\n  @BeforeMiddleware([verifyPermission(APPS.INSTALL), fileUpload()])\n  public async install(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): Promise<void> {\n    const package_zip: UploadedFile | undefined = req.files?.package_zip as any\n    const update = req.body.update !== undefined\n    if (package_zip) {\n      let package_name: string[] | string = package_zip.name.split('.')\n      package_name.pop()\n      package_name = package_name.join('.')\n      const { appsModel } = (this as AppsAPIController)\n      const result = await appsModel.getAppByPackageName(package_name)\n      if (update && !result) {\n        res.status(400).json({\n          code: 'app-not-exist',\n          message: `La aplicaci\u00F3n ${package_name} no est\u00E1 instalada.`\n        })\n        return\n      }\n      if (!update && result) {\n        res.status(400).json({\n          code: 'app-already-exist',\n          message: `La aplicaci\u00F3n ${package_name} ya est\u00E1 instalada.`\n        })\n        return\n      }\n      const reslt = await this.appsModel.install(package_name, package_zip.data, update)\n      res.json(reslt)\n    } else {\n      res.status(400).json({\n        code: 'fields-required',\n        message: 'No hay ning\u00FAn archivo adjunto.'\n      })\n    }\n  }\n  @On(DELETE, '/:package_name')\n  @BeforeMiddleware([verifyPermission(APPS.UNINSTALL)])\n  public async unInstall(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): Promise<void> {\n    const { package_name } = req.params\n    const app = await this.appsModel.getAppByPackageName(package_name)\n    if (app) {\n      await this.appsModel.uninstall(package_name)\n      res.json(true)\n    }\n  }\n}", "import { verifyDevMode } from \"./dev-mode\"\n\nconst REQUIRED_LOGIN = {\n  code: 'required-login',\n  message: 'Inicio de sesi\u00F3n requerido.'\n}\n\nexport async function verifySession(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response, next: PXIOHTTP.Next): Promise<void> {\n  if (req.session.user) {\n    next()\n  } else {\n    const model: Models<'DevModeModel'> | boolean = verifyDevMode.bind(this)()\n    if (typeof model !== 'boolean') {\n      req.session.user = model.getUser()\n      req.session.apps = await model.getApps(req.session.user?.uid || NaN)\n      next()\n      return\n    }\n    res.status(401).json(REQUIRED_LOGIN)\n  }\n}", "import crypto from 'node:crypto'\nimport { createHash, timingSafeEqual, randomInt } from \"node:crypto\"\nimport { Buffer } from \"node:buffer\"\n\ninterface IConf {\n  id: HashType\n  saltString: string\n  rounds: number\n  specifyRounds: boolean\n}\n\nenum HashType {\n  \"sha256\" = 5,\n  \"sha512\" = 6,\n}\n\ninterface IShuffleMap {\n  sha256: number[]\n  sha512: number[]\n}\n\nconst dictionary =\n  \"./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\n// prettier-ignore\nconst shuffleMap: IShuffleMap = {\n  sha256: [\n    20, 10, 0,\n    11, 1, 21,\n    2, 22, 12,\n    23, 13, 3,\n    14, 4, 24,\n    5, 25, 15,\n    26, 16, 6,\n    17, 7, 27,\n    8, 28, 18,\n    29, 19, 9,\n    30, 31\n  ],\n  sha512: [\n    42, 21, 0,\n    1, 43, 22,\n    23, 2, 44,\n    45, 24, 3,\n    4, 46, 25,\n    26, 5, 47,\n    48, 27, 6,\n    7, 49, 28,\n    29, 8, 50,\n    51, 30, 9,\n    10, 52, 31,\n    32, 11, 53,\n    54, 33, 12,\n    13, 55, 34,\n    35, 14, 56,\n    57, 36, 15,\n    16, 58, 37,\n    38, 17, 59,\n    60, 39, 18,\n    19, 61, 40,\n    41, 20, 62,\n    63,\n  ]\n};\nconst roundsDefault = 5000\n\n/**\n * Generate a random string\n * @param length Length of salt\n */\nfunction getRandomString(length: number): string {\n  var result = \"\"\n  for (let i = 0; i < length; i++) {\n    result += dictionary[randomInt(0, dictionary.length - 1)]\n  }\n  return result\n}\n\n/**\n * Normalize salt for use with hash, for example: \"$6$rounds=1234&saltsalt\" or \"$6$saltsalt\"\n * @param conf The separate parts of id, rounds, specifyRounds, and saltString\n */\nfunction normalizeSalt(conf: IConf): string {\n  const parts = [\"\", conf.id]\n  if (conf.specifyRounds || conf.rounds !== roundsDefault) {\n    parts.push(`rounds=${conf.rounds}`)\n  }\n  parts.push(conf.saltString)\n  return parts.join(\"$\")\n}\n\n/**\n * Parse salt into pieces, performs sanity checks, and returns proper\n * defaults for missing values\n * @param salt Standard salt, \"$6$rounds=1234$saltsalt\", \"$6$saltsalt\", \"$6\", \"$6$rounds=1234\", \"$6$\"\n */\nfunction parseSalt(salt?: string): IConf {\n  const roundsMin = 1000\n  const roundsMax = 999999999\n\n  const conf: IConf = {\n    id: HashType.sha512,\n    saltString: getRandomString(16),\n    rounds: roundsDefault,\n    specifyRounds: false,\n  }\n\n  if (salt) {\n    const parts = salt.split(\"$\")\n    conf.id = Number(parts[1])\n\n    if (conf.id !== HashType.sha256 && conf.id !== HashType.sha512) {\n      throw new Error(\"Only sha256 and sha512 is supported by this library\")\n    }\n\n    if (parts.length < 2 || parts.length > 4) {\n      throw new Error(\"Invalid salt string\")\n    }\n\n    if (parts.length > 2) {\n      const rounds = parts[2].match(/^rounds=(\\d*)$/)\n\n      if (rounds) {\n        // number of rounds has been specified\n        conf.rounds = Number(rounds[1])\n        conf.specifyRounds = true\n\n        if (parts[3] || parts[3] === \"\") {\n          conf.saltString = parts[3]\n        }\n      } else {\n        // default number of rounds has already been set\n        conf.saltString = parts[2]\n      }\n    }\n  }\n\n  // sanity-check rounds\n  conf.rounds =\n    conf.rounds < roundsMin\n      ? roundsMin\n      : conf.rounds > roundsMax\n        ? /* istanbul ignore next */\n        (conf.rounds = roundsMax)\n        : conf.rounds\n\n  // sanity-check saltString\n  conf.saltString = conf.saltString.substring(0, 16)\n\n  if (conf.saltString.match(\"[^./0-9A-Za-z]\")) {\n    throw new Error(\"Invalid salt string\")\n  }\n\n  return conf\n}\n\n/**\n * Steps 1-12 in the spec\n * @param plaintext\n * @param conf\n */\nfunction generateDigestA(plaintext: string, conf: IConf): Buffer {\n  const digestSize = conf.id === HashType.sha256 ? 32 : 64\n\n  // steps 1-8\n  const hashA = createHash(HashType[conf.id])\n  hashA.update(plaintext)\n  hashA.update(conf.saltString)\n\n  const hashB = createHash(HashType[conf.id])\n  hashB.update(plaintext)\n  hashB.update(conf.saltString)\n  hashB.update(plaintext)\n  const digestB = hashB.digest()\n\n  // step 9\n  const plaintextByteLength = Buffer.byteLength(plaintext)\n  for (\n    let offset = 0;\n    offset + digestSize < plaintextByteLength;\n    offset += digestSize\n  ) {\n    hashA.update(digestB)\n  }\n\n  // step 10\n  const remainder = plaintextByteLength % digestSize\n  hashA.update(digestB.slice(0, remainder))\n\n  // step 11\n  plaintextByteLength\n    .toString(2)\n    .split(\"\")\n    .reverse()\n    .forEach((num) => {\n      hashA.update(num === \"0\" ? plaintext : digestB)\n    })\n\n  // step 12\n  return hashA.digest()\n}\n\nfunction generateHash(plaintext: string, conf: IConf): string {\n  const digestSize = conf.id === HashType.sha256 ? 32 : 64\n  const hashType = HashType[conf.id]\n\n  // steps 1-12\n  const digestA = generateDigestA(plaintext, conf)\n\n  // steps 13-15\n  const plaintextByteLength = Buffer.byteLength(plaintext)\n  const hashDP = createHash(hashType)\n  for (let i = 0; i < plaintextByteLength; i++) {\n    hashDP.update(plaintext)\n  }\n  const digestDP = hashDP.digest()\n\n  // step 16a\n  const p = Buffer.alloc(plaintextByteLength)\n  for (\n    let offset = 0;\n    offset + digestSize < plaintextByteLength;\n    offset += digestSize\n  ) {\n    p.set(digestDP, offset)\n  }\n\n  // step 16b\n  const remainder = plaintextByteLength % digestSize\n  p.set(digestDP.slice(0, remainder), plaintextByteLength - remainder)\n\n  // step 17-19\n  const hashDS = createHash(hashType)\n  const step18 = 16 + digestA[0]\n  for (let i = 0; i < step18; i++) {\n    hashDS.update(conf.saltString)\n  }\n  const digestDS = hashDS.digest()\n\n  // step 20\n  const s = Buffer.alloc(conf.saltString.length)\n\n  // step 20a\n  // Isn't this step redundant? The salt string doesn't have 32 or 64 bytes. It's truncated to 16 characters\n  const saltByteLength = Buffer.byteLength(conf.saltString)\n  for (\n    let offset = 0;\n    offset + digestSize < saltByteLength;\n    offset += digestSize\n  ) {\n    /* istanbul ignore next */\n    s.set(digestDS, offset)\n  }\n\n  // step 20b\n  const saltRemainder = saltByteLength % digestSize\n  s.set(digestDS.slice(0, saltRemainder), saltByteLength - saltRemainder)\n\n  // step 21\n  const rounds = Array(conf.rounds).fill(0)\n  const digestC: Buffer = rounds.reduce((acc, curr, idx) => {\n    const hashC = createHash(hashType)\n\n    // steps b-c\n    if (idx % 2 === 0) {\n      hashC.update(acc)\n    } else {\n      hashC.update(p)\n    }\n\n    // step d\n    if (idx % 3 !== 0) {\n      hashC.update(s)\n    }\n\n    // step e\n    if (idx % 7 !== 0) {\n      hashC.update(p)\n    }\n\n    // steps f-g\n    if (idx % 2 !== 0) {\n      hashC.update(acc)\n    } else {\n      hashC.update(p)\n    }\n\n    return hashC.digest()\n  }, digestA)\n\n  // step 22\n  return base64Encode(digestC, (<any>shuffleMap)[hashType])\n}\n\nfunction base64Encode(digest: Buffer, shuffleMap: number[]): string {\n  let hash = \"\"\n  for (let idx = 0; idx < digest.length; idx += 3) {\n    const buf = Buffer.alloc(3)\n    buf[0] = digest[shuffleMap[idx]]\n    buf[1] = digest[shuffleMap[idx + 1]]\n    buf[2] = digest[shuffleMap[idx + 2]]\n\n    hash += bufferToBase64(buf)\n  }\n\n  // adjust hash length by stripping trailing zeroes induced by base64-encoding\n  return hash.slice(0, digest.length === 32 ? -1 : -2)\n}\n\n/**\n * Encode buffer to base64 using our dictionary\n * @param buf Buffer of bytes to be encoded\n */\nfunction bufferToBase64(buf: Buffer): string {\n  const first = buf[0] & parseInt(\"00111111\", 2)\n  const second =\n    ((buf[0] & parseInt(\"11000000\", 2)) >>> 6) |\n    ((buf[1] & parseInt(\"00001111\", 2)) << 2)\n  const third =\n    ((buf[1] & parseInt(\"11110000\", 2)) >>> 4) |\n    ((buf[2] & parseInt(\"00000011\", 2)) << 4)\n  const fourth = (buf[2] & parseInt(\"11111100\", 2)) >>> 2\n  return (\n    dictionary.charAt(first) +\n    dictionary.charAt(second) +\n    dictionary.charAt(third) +\n    dictionary.charAt(fourth)\n  )\n}\n\nexport class Encrypt implements Encrypting.Class {\n  createHash(plaintext: string, salt?: string | undefined): string {\n    const conf = parseSalt(salt)\n    const hash = generateHash(plaintext, conf)\n    return normalizeSalt(conf) + \"$\" + hash\n  }\n  verifyHash(plaintext: string, hash: string): boolean {\n    const salt = hash.slice(0, hash.lastIndexOf(\"$\"))\n    const computedHash = this.createHash(plaintext, salt)\n    return timingSafeEqual(\n      Buffer.from(computedHash, \"utf8\"),\n      Buffer.from(hash, \"utf8\"),\n    )\n  }\n  private encoder: TextEncoder = new TextEncoder()\n  private decoder: TextDecoder = new TextDecoder()\n  private generateKey(key: string): Promise<crypto.webcrypto.CryptoKey> {\n    return crypto.subtle.importKey('raw', this.encoder.encode(key.slice(0, 16)), { name: 'AES-GCM', length: 256 }, false, ['encrypt', 'decrypt'])\n  }\n  public async encrypt(key: string, data: string): Promise<string> {\n    const newKey: CryptoKey = await this.generateKey(key)\n    const iv: Uint8Array = crypto.getRandomValues(new Uint8Array(12))\n    const encrypted = new Uint8Array(await crypto.subtle.encrypt({ name: 'AES-GCM', iv }, newKey, this.encoder.encode(data)))\n    const combined = new Uint8Array(iv.length + encrypted.length)\n    combined.set(iv)\n    combined.set(encrypted, iv.length)\n    let result: string = ''\n    for (let i: number = 0; i < combined.length; i++) {\n      result += combined[i].toString(16).padStart(2, '0')\n    }\n    return result\n  }\n  public async decrypt(key: string, strEncrypted: string): Promise<string> {\n    const newKey: CryptoKey = await this.generateKey(key)\n    let uint8Array = new Uint8Array(strEncrypted.length / 2)\n    for (let i: number = 0; i < strEncrypted.length; i += 2) {\n      uint8Array[i / 2] = parseInt(strEncrypted.substr(i, 2), 16)\n    }\n    const iv: Uint8Array = uint8Array.slice(0, 12)\n    const data: Uint8Array = uint8Array.slice(12, uint8Array.length)\n    const decrypted: ArrayBuffer = await crypto.subtle.decrypt({ name: \"AES-GCM\", iv }, newKey, data)\n    return this.decoder.decode(decrypted)\n  }\n}", "import { Encrypt } from 'libraries/classes/Encrypt'\nimport { verifyDevMode } from './dev-mode'\n\nconst encrypt: Encrypt = new Encrypt()\n\nconst isJSON = (text: string): boolean => /^[\\],:{}\\s]*$/.test(text.replace(/\\\\[\"\\\\\\/bfnrtu]/g, '@').replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))\nconst DENIED_ERROR = {\n  code: 'access-denied',\n  message: 'No tienes permiso para hacer esto!'\n}\n\nexport async function decryptRequest(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response, next: PXIOHTTP.Next): Promise<void> {\n  if (verifyDevMode.bind(this)()) {\n    next()\n    return\n  }\n  let nextError: any = undefined\n  if (req.session.key && typeof req.body === 'string') {\n    try {\n      const result = await encrypt.decrypt(req.session.key, req.body)\n      if (isJSON(result)) {\n        req.body = JSON.parse(result)\n      } else {\n        req.body = result\n      }\n    } catch (error) {\n      nextError = DENIED_ERROR\n    }\n  }\n  next(nextError)\n}", "export const APPS = {\n  APPS: 'APP_LIST',\n  APPS_BY_UID: 'APP_LIST_BY_UID',\n  INSTALL: 'INSTALL_APP',\n  UNINSTALL: 'UNINSTALL_APP'\n}\nexport const AUTH: APIPermissionList = {\n  INDEX: {\n    name: 'AUTH_STATUS',\n    public: true,\n    freeForDashboard: true\n  },\n  LOGIN: {\n    name: 'AUTH_LOGIN',\n    public: true,\n    freeForDashboard: false\n  },\n  LOGOUT: {\n    name: 'AUTH_LOGOUT',\n    public: true,\n    freeForDashboard: true\n  }\n}\nexport const FS = {\n  SHARED_DRIVE: 'ACCESS_SHARED_FILE_LIST',\n  USER_DRIVE: 'ACCESS_USER_FILE_LIST',\n  MKDIR_SHARED_DRIVE: 'CREATE_SHARED_DIR',\n  MKDIR_USER_DRIVE: 'CREATE_USER_DIR',\n  UPLOAD_SHARED_DRIVE: 'UPLOAD_SHARED_FILE',\n  UPLOAD_USER_DRIVE: 'UPLOAD_USER_FILE',\n  RM_SHARED_DRIVE: 'REMOVE_SHARED_FILES_AND_DIRECTORIES',\n  RM_USER_DRIVE: 'REMOVE_USER_FILES_AND_DIRECTORIES',\n  COPY: 'COPY_FILES_AND_DIRECTORIES',\n  MOVE: 'MOVE_FILES_AND_DIRECTORIES',\n  RENAME: 'RENAME_FILES_AND_DIRECTORIES'\n}\nexport const PERMISSIONS = {\n  FIND: 'PERMISSION_LIST',\n  ENABLE: 'ENABLE_PERMISSION',\n  DISABLE: 'DISABLE_PERMISSION'\n}\nexport const PROFILE: APIPermissionList = {\n  INDEX: {\n    name: 'PROFILE_INFO',\n    public: false,\n    freeForDashboard: true\n  },\n  APPS: {\n    name: 'PROFILE_APP_LIST',\n    public: false,\n    freeForDashboard: true\n  },\n  READ_CONFIG: {\n    name: 'PROFILE_READ_CONFIG',\n    public: false,\n    freeForDashboard: true\n  },\n  WRITE_CONFIG: {\n    name: 'PROFILE_WRITE_CONFIG',\n    public: false,\n    freeForDashboard: true\n  },\n  UPDATE: {\n    name: 'UPDATE_PROFILE_INFO',\n    public: false,\n    freeForDashboard: true\n  },\n  UPDATE_PASSWORD: {\n    name: 'UPDATE_PASSWORD',\n    public: false,\n    freeForDashboard: true\n  }\n}\nexport const RECYCLE_BIN = {\n  LIST: 'LIST_RECYCLE_BIN',\n  CREATE: 'ADD_ITEMS_TO_RECYCLE_BIN',\n  RESTORE: 'RESTORE_ITEMS_TO_RECYCLE_BIN',\n  DELETE: 'DELETE_ITEMS_TO_RECYCLE_BIN',\n  CLEAN: 'CLEAN_RECYCLE_BIN'\n}\nexport const SHARED = {\n  INDEX: 'SHARED_LIST',\n  CREATE: 'SHARED_CREATE',\n  DELETE: 'SHARED_DELETE'\n}\nexport const SOURCES = {\n  FIND: 'SOURCE_LIST',\n  ENABLE: 'ENABLE_SOURCE',\n  DISABLE: 'DISABLE_SOURCE'\n}\nexport const USERS = {\n  INDEX: 'USER_LIST',\n  USER: 'USER_INFO',\n  CREATE: 'CREATE_USER',\n  UPDATE: 'UPDATE_USER_INFO',\n  DELETE: 'DELETE_USER',\n  ASSIGN_APP: 'ASSIGN_APP_TO_USER',\n  UNASSIGN_APP: 'UNASSIGN_APP_TO_USER'\n}\nexport const STORE = {\n  STORAGE: 'STORAGE'\n}", "import { v4 } from 'uuid'\nimport { decryptRequest } from './middlewares/encrypt'\nimport { verifyPermission } from './middlewares/permissions'\nimport { AUTH } from 'libraries/classes/APIList'\n\ndeclare const Namespace: PXIOHTTP.NamespaceDecorator\ndeclare const Model: PXIO.ModelDecorator\ndeclare const On: PXIOHTTP.OnDecorator\ndeclare const BeforeMiddleware: PXIOHTTP.BeforeMiddlewareDecorator\ndeclare const METHODS: PXIOHTTP.METHODS\nconst { GET, POST, DELETE } = METHODS\n\n@Namespace('api/auth')\nexport class AuthAPIController {\n  @Model('UsersModel') private usersModel: Models<'UsersModel'>\n  @Model('AppsModel') private appsModel: Models<'AppsModel'>\n  @Model('DevModeModel') private devModeModel: Models<'DevModeModel'>\n  @Model('SourcesModel') private sourcesModel: Models<'SourcesModel'>\n  @Model('PermissionsModel') private permissionsModel: Models<'PermissionsModel'>\n  @On(GET, '/')\n  @BeforeMiddleware([verifyPermission(AUTH.INDEX)])\n  public async index(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): Promise<void> {\n    if (req.session.user || this.devModeModel.devMode.enable) {\n      res.json(true)\n    } else {\n      res.json(false)\n    }\n  }\n  @On(POST, '/')\n  @BeforeMiddleware([verifyPermission(AUTH.LOGIN), decryptRequest])\n  public async login(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): Promise<void> {\n    const { userName, password } = req.body\n    const user = this.usersModel.getUser(userName)\n    if (user) {\n      if (this.usersModel.verifyPassword(userName, password)) {\n        delete (user as any).password_hash\n        req.session.user = user\n        req.session.apps = {}\n        const apps = await this.appsModel.getAppsByUID(user.uid)\n        for (const app of apps) {\n          const { package_name } = app\n          const secureSources = await this.sourcesModel.find({ package_name })\n          const permissions = await this.permissionsModel.find({ package_name })\n          const sessionApp: LocalCloud.SessionApp = {\n            ...app,\n            secureSources,\n            permissions,\n            token: v4(),\n            useTemplate: (app as any).useTemplate\n          }\n          req.session.apps[app.package_name] = sessionApp\n        }\n        res.json({ ok: true })\n      } else {\n        res.status(400).json({ ok: false, code: 'incorrect-password', message: 'La contrase\u00F1a es incorrecta!' })\n      }\n    } else {\n      res.status(400).json({ ok: false, code: 'user-not-found', message: `El usuario \"${userName}\" no existe!` })\n    }\n  }\n  @On(DELETE, '/')\n  @BeforeMiddleware([verifyPermission(AUTH.LOGOUT)])\n  public logout(req: PXIOHTTP.Request, res: PXIOHTTP.Response): void {\n    req.session.destroy((): void => {\n      res.json(true)\n    })\n  }\n}", "import { verifySession } from './middlewares/session'\nimport { decryptRequest } from './middlewares/encrypt'\nimport { verifyPermission } from './middlewares/permissions'\nimport fileUpload from 'express-fileupload'\nimport { FS } from 'libraries/classes/APIList'\n\ndeclare const Namespace: PXIOHTTP.NamespaceDecorator\ndeclare const Model: PXIO.ModelDecorator\ndeclare const On: PXIOHTTP.OnDecorator\ndeclare const BeforeMiddleware: PXIOHTTP.BeforeMiddlewareDecorator\ndeclare const AfterMiddleware: PXIOHTTP.AfterMiddlewareDecorator\ndeclare const METHODS: PXIOHTTP.METHODS\n\nconst { POST, PUT, DELETE } = METHODS\n\n@Namespace('/api/fs', { before: [verifySession, decryptRequest, fileUpload()] })\nexport class FileSystemAPIController {\n  @Model('DevModeModel') public devModeModel: Models<'DevModeModel'>\n  @Model('FileSystemModel') private fsModel: Models<'FileSystemModel'>\n  public filter(req: PXIOHTTP.Request, res: PXIOHTTP.Response): void {\n    let items: FileSystem.ItemInfo[] = (req as any).result\n    if (!req.query.showHidden) {\n      items = items.filter(item => !/^\\./.test(item.name))\n    }\n    let containsFiles = true\n    if (req.query.onlyDirs) {\n      containsFiles = false\n      items = items.filter(item => !item.isFile)\n    }\n    if (req.query.onlyFiles) {\n      items = items.filter(item => item.isFile)\n    }\n    if (containsFiles && req.query.ext) {\n      const exts = (req.query.ext as string).split(',')\n      items = items.filter(item => {\n        let pass = false\n        if (item.isFile) {\n          for (const ext of exts) {\n            if (item.name.endsWith(`.${ext}`)) {\n              pass = true\n              break\n            }\n          }\n        }\n        return pass || (req.query.includeDirs && !item.isFile)\n      })\n    }\n    res.json(items)\n  }\n  @On(POST, '/shared/list')\n  @BeforeMiddleware([verifyPermission(FS.SHARED_DRIVE)])\n  @AfterMiddleware(['filter'])\n  public sharedDrive(req: PXIOHTTP.Request, res: PXIOHTTP.Response, next: PXIOHTTP.Next) {\n    const { path = [] } = req.body\n    const result = this.fsModel.lsSharedDirectory(path)\n    if (typeof result === 'boolean') {\n      res.status(404).json({\n        code: 'not-found',\n        message: 'La ruta que indicaste no existe.'\n      })\n      return\n    }\n    (req as any).result = result\n    next()\n  }\n  @On(POST, '/user/list')\n  @BeforeMiddleware([verifyPermission(FS.USER_DRIVE)])\n  @AfterMiddleware(['filter'])\n  public userDrive(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response, next: PXIOHTTP.Next) {\n    const { path = [] } = req.body\n    const result = this.fsModel.lsUserDirectory(req.session.user?.name || '', path)\n    if (typeof result === 'boolean') {\n      res.status(404).json({\n        code: 'not-found',\n        message: 'La ruta que indicaste no existe.'\n      })\n      return\n    }\n    (req as any).result = result\n    next()\n  }\n  @On(POST, '/shared')\n  @BeforeMiddleware([verifyPermission(FS.MKDIR_SHARED_DRIVE)])\n  public async mkdirSharedDrive(req: PXIOHTTP.Request, res: PXIOHTTP.Response): Promise<void> {\n    const { path = [] } = req.body\n    await this.fsModel.mkdirToShared(path)\n    res.json(true)\n  }\n  @On(POST, '/user')\n  @BeforeMiddleware([verifyPermission(FS.MKDIR_USER_DRIVE)])\n  public async mkdirUserDrive(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): Promise<void> {\n    const { path = [] } = req.body\n    await this.fsModel.mkdirToUser(req.session.user?.name || '', path)\n    res.json(true)\n  }\n  @On(PUT, '/shared')\n  @BeforeMiddleware([verifyPermission(FS.UPLOAD_SHARED_DRIVE)])\n  public async uploadSharedDrive(req: PXIOHTTP.Request, res: PXIOHTTP.Response): Promise<void> {\n    let { path = '' } = req.body\n    path = path.split('|')\n    const { files } = req\n    if (!files) {\n      res.status(400).json({\n        code: 'fields-required',\n        message: 'Faltan campos!'\n      })\n      return\n    }\n    const entries = Object.entries(files)\n    for (const [name, value] of entries) {\n      await this.fsModel.writeToShared([...path, name], (value as fileUpload.UploadedFile).data)\n    }\n    res.json(true)\n  }\n  @On(PUT, '/user')\n  @BeforeMiddleware([verifyPermission(FS.UPLOAD_USER_DRIVE)])\n  public async uploadUserDrive(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): Promise<void> {\n    let { path = '' } = req.body\n    path = path.split('|')\n    const { files } = req\n    if (!files) {\n      res.status(400).json({\n        code: 'fields-required',\n        message: 'Faltan campos!'\n      })\n      return\n    }\n    const entries = Object.entries(files)\n    for (const [name, value] of entries) {\n      await this.fsModel.writeToUser(req.session.user?.name || '', [...path, name], (value as fileUpload.UploadedFile).data)\n    }\n    res.json(true)\n  }\n  @On(DELETE, '/shared')\n  @BeforeMiddleware([verifyPermission(FS.RM_SHARED_DRIVE)])\n  public rmSharedDrive(req: PXIOHTTP.Request, res: PXIOHTTP.Response) {\n    const { path = [] } = req.body\n    this.fsModel.rmToShared(path)\n    res.json(true)\n  }\n  @On(DELETE, '/user')\n  @BeforeMiddleware([verifyPermission(FS.RM_USER_DRIVE)])\n  public rmUserDrive(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response) {\n    const { path = [] } = req.body\n    this.fsModel.rmToUser(req.session.user?.name || '', path)\n    res.json(true)\n  }\n  @On(POST, '/copy')\n  @BeforeMiddleware([verifyPermission(FS.COPY)])\n  public async copy(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): Promise<void> {\n    const { origin, dest } = req.body\n    if ((!origin || !dest) && (!Array.isArray(origin) || !Array.isArray(dest))) {\n      res.status(400).json({\n        code: 'fields-required',\n        message: 'Faltan campos!'\n      })\n      return\n    }\n    await this.fsModel.copy(req.session.user?.name || '', origin, dest)\n    res.json(true)\n  }\n  @On(POST, '/move')\n  @BeforeMiddleware([verifyPermission(FS.MOVE)])\n  public async move(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): Promise<void> {\n    const { origin, dest } = req.body\n    if ((!origin || !dest) && (!Array.isArray(origin) || !Array.isArray(dest))) {\n      res.status(400).json({\n        code: 'fields-required',\n        message: 'Faltan campos!'\n      })\n      return\n    }\n    await this.fsModel.copy(req.session.user?.name || '', origin, dest, true)\n    res.json(true)\n  }\n  @On(POST, '/rename')\n  @BeforeMiddleware([verifyPermission(FS.RENAME)])\n  public rename(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response) {\n    const { path, newName } = req.body\n    if (!Array.isArray(path) || typeof newName !== 'string') {\n      res.status(400).json({\n        code: 'fields-required',\n        message: 'Faltan campos!'\n      })\n      return\n    }\n    this.fsModel.rename(req.session.user?.name || '', path, newName)\n    res.json(true)\n  }\n}", "import { verifySession } from \"./middlewares/session\"\nimport { verifyPermission } from \"./middlewares/permissions\"\nimport { PERMISSIONS } from 'libraries/classes/APIList'\n\ndeclare const Namespace: PXIOHTTP.NamespaceDecorator\ndeclare const Model: PXIO.ModelDecorator\ndeclare const On: PXIOHTTP.OnDecorator\ndeclare const BeforeMiddleware: PXIOHTTP.BeforeMiddlewareDecorator\ndeclare const METHODS: PXIOHTTP.METHODS\n\nconst { GET, POST, DELETE } = METHODS\n\n@Namespace('api/permissions', { before: [verifySession] })\nexport class PermissionsAPIController {\n  @Model('DevModeModel') public devModeModel: Models<'DevModeModel'>\n  @Model('PermissionsModel') permissionModel: Models<'PermissionsModel'>\n  @On(GET, '/')\n  @BeforeMiddleware([verifyPermission(PERMISSIONS.FIND)])\n  public async find(req: PXIOHTTP.Request, res: PXIOHTTP.Response): Promise<void> {\n    const { package_name, api, active } = req.query\n    const query: Partial<Permissions.Result> = {}\n    if (package_name) {\n      query['package_name'] = package_name.toString()\n    }\n    if (api) {\n      query['api'] = api.toString()\n    }\n    if (active !== undefined) {\n      query['active'] = active === 'true'\n    }\n    const results = await this.permissionModel.find(query)\n    res.json(results)\n  }\n  @On(POST, '/:id')\n  @BeforeMiddleware([verifyPermission(PERMISSIONS.ENABLE)])\n  public async enable(req: PXIOHTTP.Request, res: PXIOHTTP.Response): Promise<void> {\n    const { id } = req.params\n    await this.permissionModel.setActive(id as unknown as number, true)\n    res.json(true)\n  }\n  @On(DELETE, '/:id')\n  @BeforeMiddleware([verifyPermission(PERMISSIONS.DISABLE)])\n  public async disable(req: PXIOHTTP.Request, res: PXIOHTTP.Response): Promise<void> {\n    const { id } = req.params\n    await this.permissionModel.setActive(id as unknown as number, false)\n    res.json(true)\n  }\n}", "import { verifySession } from './middlewares/session'\nimport { verifyPermission } from './middlewares/permissions'\nimport { decryptRequest } from './middlewares/encrypt'\nimport { PROFILE } from 'libraries/classes/APIList'\n\ndeclare const Namespace: PXIOHTTP.NamespaceDecorator\ndeclare const Model: PXIO.ModelDecorator\ndeclare const On: PXIOHTTP.OnDecorator\ndeclare const BeforeMiddleware: PXIOHTTP.BeforeMiddlewareDecorator\ndeclare const METHODS: PXIOHTTP.METHODS\n\nconst { GET, POST, PUT } = METHODS\n\n@Namespace('api/profile', { before: [verifySession] })\nexport class ProfileAPIController {\n  @Model('DevModeModel') public devModeModel: Models<'DevModeModel'>\n  @Model('AppsModel') private appsModel: Models<'AppsModel'>\n  @Model('UsersModel') private usersModel: Models<'UsersModel'>\n  @On(GET, '/')\n  @BeforeMiddleware([verifyPermission(PROFILE.INDEX)])\n  public index(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): void {\n    res.json(req.session.user)\n  }\n  @On(GET, '/apps')\n  @BeforeMiddleware([verifyPermission(PROFILE.APPS)])\n  public async apps(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): Promise<void> {\n    const results = await this.appsModel.getAppsByUID(req.session.user?.uid || NaN)\n    const apps: Partial<Apps.App>[] = results.map(app => ({\n      package_name: app.package_name,\n      title: app.title,\n      description: app.description,\n      author: app.author\n    }))\n    res.json(apps.map(({ package_name, title, description, author, extensions, useStorage }) => ({ package_name, title, description, author, extensions, useStorage })))\n  }\n  @On(GET, '/config')\n  @BeforeMiddleware([verifyPermission(PROFILE.READ_CONFIG)])\n  public getConfig(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): void {\n    const { name } = req.session.user as Users.User\n    const config = this.usersModel.getUserConfig(name)\n    res.json(config)\n  }\n  @On(POST, '/')\n  @BeforeMiddleware([verifyPermission(PROFILE.UPDATE), decryptRequest])\n  public async update(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): Promise<void> {\n    if (req.session.user) {\n      const { user_name, full_name, email, phone } = req.body\n      if (user_name) {\n        const result = this.usersModel.getUser(user_name)\n        if (result) {\n          res.json({\n            code: 'user-already-exists',\n            message: `El usuario ${user_name} ya existe!`\n          })\n          return\n        }\n      }\n      await this.usersModel.updateUser(\n        req.session.user.name,\n        { full_name, email, phone }\n      )\n      if (full_name) {\n        req.session.user.full_name = full_name\n      }\n      if (email) {\n        req.session.user.email = email\n      }\n      if (phone) {\n        req.session.user.phone = phone\n      }\n    }\n    res.json(true)\n  }\n  @On(POST, '/config')\n  @BeforeMiddleware([verifyPermission(PROFILE.WRITE_CONFIG), decryptRequest])\n  public async setConfig(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): Promise<void> {\n    const { name } = req.session.user as Users.User\n    const { config } = req.body\n    if (config) {\n      this.usersModel.setUserConfig(name, config)\n      res.json(true)\n    } else {\n      res.status(400).json({\n        code: 'fields-required',\n        message: 'Faltan campos!'\n      })\n    }\n  }\n  @On(PUT, '/')\n  @BeforeMiddleware([verifyPermission(PROFILE.UPDATE_PASSWORD), decryptRequest])\n  public async updatePassword(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): Promise<void> {\n    const { current_password, new_password } = req.body\n    if (!current_password || !new_password) {\n      res.status(400).json({\n        code: 'fields-required',\n        message: 'Faltan campos!'\n      })\n      return\n    }\n    if (this.usersModel.verifyPassword(req.session.user?.name || '', current_password)) {\n      await this.usersModel.updatePassword(req.session.user?.name || '', new_password)\n      res.json({ ok: true })\n    } else {\n      res.status(400).json({ ok: false, message: 'La contrase\u00F1a es incorrecta!' })\n    }\n  }\n}", "import { verifySession } from './middlewares/session'\nimport { decryptRequest } from './middlewares/encrypt'\nimport { verifyPermission } from './middlewares/permissions'\nimport { RECYCLE_BIN } from 'libraries/classes/APIList'\n\ndeclare const Namespace: PXIOHTTP.NamespaceDecorator\ndeclare const Model: PXIO.ModelDecorator\ndeclare const On: PXIOHTTP.OnDecorator\ndeclare const BeforeMiddleware: PXIOHTTP.BeforeMiddlewareDecorator\ndeclare const METHODS: PXIOHTTP.METHODS\n\nconst { GET, POST, PUT, DELETE } = METHODS\n\n@Namespace('/api/recycle-bin', { before: [verifySession, decryptRequest] })\nexport class RecycleBinController {\n  @Model('DevModeModel') public devModeModel: Models<'DevModeModel'>\n  @Model('FileSystemModel') private fsModel: Models<'FileSystemModel'>\n  @Model('RecycleBinModel') private recycleBinModel: Models<'RecycleBinModel'>\n  @On(GET, '/')\n  @BeforeMiddleware([verifyPermission(RECYCLE_BIN.LIST)])\n  public async list(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response) {\n    const results = await this.recycleBinModel.findByUID(req.session.user?.uid || NaN)\n    res.json(results)\n  }\n  @On(POST, '/')\n  @BeforeMiddleware([verifyPermission(RECYCLE_BIN.CREATE)])\n  public async create(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response) {\n    if (!req.body.path || !Array.isArray(req.body.path) || req.body.path?.length < 2) {\n      res.status(403).json({\n        code: 'bad-request',\n        message: 'La ruta no es v\u00E1lida.'\n      })\n      return\n    }\n    const path = req.body.path || []\n    const result = this.fsModel.resolvePath(req.session.user?.name || '', path, true)\n    if (typeof result === 'boolean') {\n      res.status(404).json({\n        code: 'not-found',\n        message: 'La ruta que indicaste no existe.'\n      })\n      return\n    }\n    await this.recycleBinModel.moveToRecycleBin(req.session.user as Users.User, result, path)\n    res.json(true)\n  }\n  @On(PUT, '/:id')\n  @BeforeMiddleware([verifyPermission(RECYCLE_BIN.RESTORE)])\n  public async restore(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response) {\n    const { id } = req.params\n    const result = await this.recycleBinModel.findByID(id)\n    if (!result) {\n      res.json(true)\n      return\n    }\n    const path = this.fsModel.resolvePath(req.session.user?.name || '', result.path, false) as string\n    await this.recycleBinModel.restore(req.session.user?.name || '', result.id, path)\n    res.json(true)\n  }\n  @On(DELETE, '/:id')\n  @BeforeMiddleware([verifyPermission(RECYCLE_BIN.DELETE)])\n  public async delete(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response) {\n    await this.recycleBinModel.delete(req.session.user as Users.User, req.params.id)\n    res.json(true)\n  }\n  @On(DELETE, '/')\n  @BeforeMiddleware([verifyPermission(RECYCLE_BIN.CLEAN)])\n  public async clean(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response) {\n    await this.recycleBinModel.clean(req.session.user as Users.User)\n    res.json(true)\n  }\n}", "import { v4 } from 'uuid'\nimport { verifySession } from './middlewares/session'\nimport { decryptRequest } from './middlewares/encrypt'\nimport { verifyPermission } from './middlewares/permissions'\nimport { SHARED } from 'libraries/classes/APIList'\n\ndeclare const Namespace: PXIOHTTP.NamespaceDecorator\ndeclare const Model: PXIO.ModelDecorator\ndeclare const On: PXIOHTTP.OnDecorator\ndeclare const METHODS: PXIOHTTP.METHODS\ndeclare const BeforeMiddleware: PXIOHTTP.BeforeMiddlewareDecorator\n\nconst { GET, POST, DELETE } = METHODS\n\n@Namespace('/api/shared', { before: [verifySession, decryptRequest] })\nexport class SharedAPIController {\n  @Model('DevModeModel') public devModeModel: Models<'DevModeModel'>\n  @Model('SharedModel') private sharedModel: Models<'SharedModel'>\n  @On(GET, '/')\n  @BeforeMiddleware([verifyPermission(SHARED.INDEX)])\n  public async index(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): Promise<void> {\n    const results = await this.sharedModel.find({ uid: req.session.user?.name })\n    res.json(results)\n  }\n  @On(POST, '/')\n  @BeforeMiddleware([verifyPermission(SHARED.CREATE)])\n  public async create(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): Promise<void> {\n    const { path } = req.body as unknown as Partial<Shared.New>\n    if (!path) {\n      res.status(400).json({\n        code: 'fields-required',\n        message: 'Faltan campos!'\n      })\n      return\n    }\n    const uuid = req.session.user?.name || ''\n    const [result] = await this.sharedModel.find({ uid: uuid, path })\n    if (result) {\n      res.json(result)\n    } else {\n      const newShared: Shared.Shared = { id: v4(), uid: uuid, path }\n      await this.sharedModel.create(newShared)\n      res.json(newShared)\n    }\n  }\n  @On(DELETE, '/:id')\n  @BeforeMiddleware([verifyPermission(SHARED.DELETE)])\n  public async delete(req: PXIOHTTP.Request, res: PXIOHTTP.Response): Promise<void> {\n    const { id } = req.params\n    await this.sharedModel.delete(id)\n    res.json(true)\n  }\n}", "import { verifySession } from './middlewares/session'\nimport { verifyPermission } from \"./middlewares/permissions\"\nimport { SOURCES } from 'libraries/classes/APIList'\n\ndeclare const Namespace: PXIOHTTP.NamespaceDecorator\ndeclare const Model: PXIO.ModelDecorator\ndeclare const On: PXIOHTTP.OnDecorator\ndeclare const BeforeMiddleware: PXIOHTTP.BeforeMiddlewareDecorator\ndeclare const METHODS: PXIOHTTP.METHODS\n\nconst { GET, POST, DELETE } = METHODS\n\n@Namespace('api/sources', { before: [verifySession] })\nexport class SecureSourcesAPIController {\n  @Model('DevModeModel') public devModeModel: Models<'DevModeModel'>\n  @Model('SourcesModel') sourcesModel: Models<'SourcesModel'>\n  @On(GET, '/')\n  @BeforeMiddleware([verifyPermission(SOURCES.FIND)])\n  public async find(req: PXIOHTTP.Request, res: PXIOHTTP.Response) {\n    const { package_name, type, active } = req.query\n    const query: Partial<SecureSources.Source> = {}\n    if (package_name) {\n      query['package_name'] = package_name.toString()\n    }\n    if (type) {\n      const t = type.toString() as string\n      if (['image', 'media', 'object', 'script', 'style', 'worker', 'font', 'connect'].includes(t)) {\n        query['type'] = (t as SecureSources.Source['type'])\n      }\n    }\n    if (active !== undefined) {\n      query['active'] = active === 'true'\n    }\n    const results = await this.sourcesModel.find(query)\n    res.json(results)\n  }\n  @On(POST, '/:id')\n  @BeforeMiddleware([verifyPermission(SOURCES.ENABLE)])\n  public async enable(req: PXIOHTTP.Request, res: PXIOHTTP.Response): Promise<void> {\n    const { id } = req.params\n    await this.sourcesModel.setActive(id as unknown as number, true)\n    res.json(true)\n  }\n  @On(DELETE, '/:id')\n  @BeforeMiddleware([verifyPermission(SOURCES.DISABLE)])\n  public async disable(req: PXIOHTTP.Request, res: PXIOHTTP.Response): Promise<void> {\n    const { id } = req.params\n    await this.sourcesModel.setActive(id as unknown as number, false)\n    res.json(true)\n  }\n}", "import { verifySession } from \"./middlewares/session\"\nimport { getOrigin } from './middlewares/permissions'\n\ndeclare const Namespace: PXIOHTTP.NamespaceDecorator\ndeclare const Model: PXIO.ModelDecorator\ndeclare const On: PXIOHTTP.OnDecorator\ndeclare const BeforeMiddleware: PXIOHTTP.BeforeMiddlewareDecorator\ndeclare const METHODS: PXIOHTTP.METHODS\n\nconst { GET, PUT } = METHODS\n\nfunction verifyPermission(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response, next: PXIOHTTP.Next) {\n  const devModel: Models<'DevModeModel'> = (this as StoragesAPIController).devModeModel\n  if (devModel.devMode.enable) {\n    next()\n  } else {\n    const origin = getOrigin(req.headers.referer || '')\n    const apps: LocalCloud.SessionApps = req.session.apps as LocalCloud.SessionApps\n    if (apps[origin]?.useStorage) {\n      next()\n    } else {\n      res.status(404).end()\n    }\n  }\n}\n\nconst filterPath = (isGlobal: boolean) => function (req: PXIOHTTP.Request<LocalCloud.SessionData>, _: PXIOHTTP.Response, next: PXIOHTTP.Next) {\n  const devModel: Models<'DevModeModel'> = (this as StoragesAPIController).devModeModel\n  const storageModel: Models<'StorageModel'> = (this as StoragesAPIController).storageModel\n  if (devModel.devMode.enable) {\n    if (isGlobal) {\n      (req as any).storagePath = storageModel.resolveTempGlobalItem(req.params.name)\n    } else {\n      (req as any).storagePath = storageModel.resolveTempUserItem(req.params.name)\n    }\n  } else {\n    const origin = getOrigin(req.headers.referer || '')\n    if (typeof origin === 'string') {\n      if (isGlobal) {\n        (req as any).storagePath = storageModel.resolveGlobalItem(origin, req.params.name)\n      } else {\n        (req as any).storagePath = storageModel.resolveUserItem(origin, req.session.user?.name || '', req.params.name)\n      }\n    }\n  }\n  next()\n}\n\n@Namespace('/api/storage', { before: [verifySession, verifyPermission] })\nexport class StoragesAPIController {\n  @Model('DevModeModel') public devModeModel: Models<'DevModeModel'>\n  @Model('StorageModel') public storageModel: Models<'StorageModel'>\n  @On(GET, '/:name')\n  @BeforeMiddleware([filterPath(true)])\n  public globalStore(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response) {\n    if (typeof (req as any).storagePath === 'string') {\n      const contentStorage = this.storageModel.loadStorage((req as any).storagePath)\n      res.json(contentStorage)\n    } else {\n      res.json(null)\n    }\n  }\n  @On(GET, '/user/:name')\n  @BeforeMiddleware([filterPath(false)])\n  public userStore(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response) {\n    if (typeof (req as any).storagePath === 'string') {\n      const contentStorage = this.storageModel.loadStorage((req as any).storagePath)\n      res.json(contentStorage)\n    } else {\n      res.json(null)\n    }\n  }\n  @On(PUT, '/:name')\n  @BeforeMiddleware([filterPath(true)])\n  public setGlobalStore(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response) {\n    const content = req.body.content || null\n    this.storageModel.writeContent((req as any).storagePath, content)\n    res.json(true)\n  }\n  @On(PUT, '/user/:name')\n  @BeforeMiddleware([filterPath(false)])\n  public setUserStore(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response) {\n    const content = req.body.content || null\n    this.storageModel.writeContent((req as any).storagePath, content)\n    res.json(true)\n  }\n}\n", "import { verifySession } from './middlewares/session'\nimport { verifyPermission } from './middlewares/permissions'\nimport { decryptRequest } from './middlewares/encrypt'\nimport { USERS } from 'libraries/classes/APIList'\n\ndeclare const Namespace: PXIOHTTP.NamespaceDecorator\ndeclare const Model: PXIO.ModelDecorator\ndeclare const On: PXIOHTTP.OnDecorator\ndeclare const BeforeMiddleware: PXIOHTTP.BeforeMiddlewareDecorator\ndeclare const METHODS: PXIOHTTP.METHODS\n\nconst { GET, POST, PUT, DELETE } = METHODS\n\n@Namespace('/api/users', { before: [verifySession] })\nexport class UsersAPIController {\n  @Model('UsersModel') public usersModel: Models<'UsersModel'>\n  @Model('DevModeModel') public devModeModel: Models<'DevModeModel'>\n  @On(GET, '/')\n  @BeforeMiddleware([verifyPermission(USERS.INDEX)])\n  public index(_: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): void {\n    const results = this.usersModel.getUsers()\n    res.json(results)\n  }\n  @On(GET, '/:uid')\n  @BeforeMiddleware([verifyPermission(USERS.USER)])\n  public user(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): void {\n    const user = this.usersModel.getUserByUID(Number(req.params.uid))\n    if (user) {\n      res.json(user)\n    } else {\n      res.json(null)\n    }\n  }\n  @On(POST, '/')\n  @BeforeMiddleware([verifyPermission(USERS.CREATE), decryptRequest])\n  public async create(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): Promise<void> {\n    const { email, full_name, phone, name, password } = req.body\n    if (!name || !password) {\n      res.status(400).json({\n        code: 'fields-required',\n        message: 'Faltan campos!'\n      })\n      return\n    }\n    const result = this.usersModel.getUser(name)\n    if (result) {\n      res.status(400).json({\n        code: 'user-already-exists',\n        message: `El usuario ${name} ya existe!`\n      })\n      return\n    }\n    await this.usersModel.createUser({\n      name,\n      full_name,\n      email,\n      phone,\n      password\n    })\n    res.json(true)\n  }\n  @On(PUT, '/:uid')\n  @BeforeMiddleware([verifyPermission(USERS.UPDATE), decryptRequest])\n  public async update(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): Promise<void> {\n    const { full_name, email, phone } = req.body\n    const result = this.usersModel.getUserByUID(Number(req.params.uid))\n    if (!result) {\n      res.status(400).json({\n        code: 'user-not-exist',\n        message: 'El usuario no existe.'\n      })\n      return\n    }\n    await this.usersModel.updateUser(result.name, { full_name, email, phone })\n    res.json(true)\n  }\n  @On(DELETE, '/:uid')\n  @BeforeMiddleware([verifyPermission(USERS.DELETE)])\n  public async delete(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): Promise<void> {\n    const user = this.usersModel.getUserByUID(Number(req.params.uid))\n    if (user) {\n      await this.usersModel.deleteUser(user.name)\n    }\n    res.json(true)\n  }\n  @On(POST, '/assign-app')\n  @BeforeMiddleware([verifyPermission(USERS.ASSIGN_APP), decryptRequest])\n  public async assignApp(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): Promise<void> {\n    const { uid, package_name } = req.body\n    if (!uid || !package_name) {\n      res.status(400).json({\n        code: 'fields-required',\n        message: 'Faltan campos!'\n      })\n      return\n    }\n    const result = this.usersModel.getUserByUID(Number(uid))\n    if (!result) {\n      res.status(400).json({\n        code: 'user-not-exist',\n        message: 'El usuario no existe.'\n      })\n      return\n    }\n    await this.usersModel.assignApp(result.uid, package_name)\n    res.json(true)\n  }\n  @On(POST, '/unassign-app')\n  @BeforeMiddleware([verifyPermission(USERS.UNASSIGN_APP), decryptRequest])\n  public async unassignApp(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response): Promise<void> {\n    const { uid, package_name } = req.body\n    if (!uid || !package_name) {\n      res.status(400).json({\n        code: 'fields-required',\n        message: 'Faltan campos!'\n      })\n      return\n    }\n    const result = this.usersModel.getUserByUID(Number(uid))\n    if (!result) {\n      res.status(400).json({\n        code: 'user-not-exist',\n        message: 'El usuario no existe.'\n      })\n      return\n    }\n    await this.usersModel.unassignApp(result.uid, package_name)\n    res.json(true)\n  }\n}", "import { getOrigin } from './middlewares/permissions'\n\ndeclare const Namespace: PXIOHTTP.NamespaceDecorator\ndeclare const Model: PXIO.ModelDecorator\ndeclare const On: PXIOHTTP.OnDecorator\ndeclare const METHODS: PXIOHTTP.METHODS\n\n@Namespace('/api')\nexport class APIController {\n  @Model('DevModeModel') public devModeModel: Models<'DevModeModel'>\n  @Model('BuilderModel') public builderModel: Models<'BuilderModel'>\n  @On(METHODS.GET, '/connector.js')\n  public connector(req: PXIOHTTP.Request<LocalCloud.SessionData>, res: PXIOHTTP.Response) {\n    res.set('Content-Type', 'text/javascript')\n    if (this.devModeModel.devMode.enable) {\n      res.send(this.builderModel.build())\n      return\n    }\n    let token = req.session.token || ''\n    const key = req.session.key || ''\n    const { referer } = req.headers\n    if (referer) {\n      const origin = getOrigin(referer)\n      if (typeof origin === 'string' && req.session.apps) {\n        const apis = req.session.apps[origin].permissions\n          .filter(permission => permission.active)\n          .map(permission => permission.api)\n        if (req.session.apps[origin].useStorage) {\n          apis.push('STORAGE')\n        }\n        res.send(this.builderModel.build({ token, key, apis }))\n      } else {\n        if (origin === 0) {\n          res.send(this.builderModel.build({token, key, apis: this.builderModel.publicAPIList}))\n        }\n        if (origin === 1) {\n          res.send(this.builderModel.build({token, key, apis: this.builderModel.dashAPIList}))\n        }\n      }\n    } else {\n      res.status(404).end()\n    }\n  }\n}\n\nexport * from './apps'\nexport * from './auth'\nexport * from './fs'\nexport * from './permissions'\nexport * from './profile'\nexport * from './recycle-bin'\nexport * from './shared'\nexport * from './sources'\nexport * from './storages'\nexport * from './users'"],
  "mappings": "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",
  "names": ["path", "path", "path", "fs", "path", "path", "GET", "path", "verifySession", "import_node_crypto", "HashType", "shuffleMap", "crypto", "DENIED_ERROR", "GET", "fileUpload", "verifySession", "import_uuid", "GET", "DELETE", "import_express_fileupload", "POST", "PUT", "DELETE", "path", "verifySession", "fileUpload", "GET", "POST", "DELETE", "verifySession", "GET", "POST", "PUT", "verifySession", "GET", "POST", "PUT", "DELETE", "path", "verifySession", "import_uuid", "GET", "POST", "DELETE", "path", "verifySession", "GET", "POST", "DELETE", "verifySession", "GET", "PUT", "verifyPermission", "verifySession", "GET", "POST", "PUT", "DELETE", "verifySession", "GET"]
}
