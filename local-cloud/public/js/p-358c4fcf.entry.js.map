{"version":3,"names":["isYearDisabled","refYear","minParts","maxParts","year","isDayDisabled","refParts","dayValues","day","undefined","includes","isBefore","isAfter","getCalendarDayState","locale","activeParts","todayParts","activePartsArray","Array","isArray","isActive","find","parts","isSameDay","isToday","disabled","ariaSelected","ariaLabel","generateDayAriaLabel","text","getDay","isMonthDisabled","isPrevMonthDisabled","prevMonth","Object","assign","getPreviousMonth","isNextMonthDisabled","nextMonth","getNextMonth","getHighlightStyles","highlightedDates","dateIsoString","el","dateStringWithoutTime","split","matchingHighlight","hd","date","textColor","backgroundColor","e","printIonError","warnIfTimeZoneProvided","formatOptions","_a","_b","_c","_d","timeZone","timeZoneName","time","printIonWarning","checkForPresentationFormatMismatch","presentation","datetimeIosCss","IonDatetimeIosStyle0","datetimeMdCss","IonDatetimeMdStyle0","Datetime","constructor","hostRef","this","inputId","datetimeIds","prevPresentation","warnIfIncorrectValueUsage","multiple","value","map","v","join","setValue","ionChange","emit","getActivePartsWithFallback","defaultParts","getActivePart","closeParentOverlay","role","popoverOrModal","closest","dismiss","setWorkingParts","workingParts","setActiveParts","removeDate","readonly","validatedParts","validateParts","filter","p","hasSlottedButtons","querySelector","showDefaultButtons","confirm","initializeKeyboardListeners","calendarBodyRef","root","shadowRoot","currentMonth","checkCalendarBodyFocus","ev","record","oldValue","classList","contains","focusWorkingDay","mo","MutationObserver","observe","attributeFilter","attributeOldValue","destroyKeyboardMO","disconnect","addEventListener","activeElement","getPartsFromCalendarDay","partsToFocus","key","preventDefault","getNextWeek","getPreviousWeek","getNextDay","getPreviousDay","getStartOfWeek","getEndOfWeek","shiftKey","getPreviousYear","getNextYear","requestAnimationFrame","padding","querySelectorAll","dayEl","length","focus","processMinParts","min","parseMinParts","processMaxParts","max","parseMaxParts","initializeCalendarListener","months","startMonth","workingMonth","endMonth","mode","getIonMode","needsiOSRubberBandFix","navigator","maxTouchPoints","writeTask","scrollLeft","clientWidth","isRTL","getChangedMonth","box","getBoundingClientRect","condition","month","monthBox","Math","abs","x","forceRenderDate","updateActiveMonth","style","removeProperty","appliediOSRubberBandFix","newDate","setProperty","resolveForceDateScrolling","scrollTimeout","scrollCallback","clearTimeout","setTimeout","destroyCalendarListener","removeEventListener","destroyInteractionListeners","processValue","hasValue","valueToProcess","parseDate","warnIfValueOutOfBounds","singleValue","targetValue","clampDate","hour","minute","ampm","parseAmPm","didChangeMonth","bodyIsVisible","isGridStyle","showMonthAndYear","areAllSelectedDatesInSameMonth","firstMonth","animateToDate","async","forceDateScrollingPromise","Promise","resolve","targetMonthIsBefore","onFocus","ionFocus","onBlur","ionBlur","left","offsetWidth","scrollTo","top","behavior","toggleMonthAndYearView","isTimePopoverOpen","color","name","isDateEnabled","cancelText","doneText","clearText","yearValues","monthValues","hourValues","minuteValues","firstDayOfWeek","titleSelectedDatesFormatter","showDefaultTitle","showClearButton","showDefaultTimeLabel","hourCycle","size","preferWheel","formatOptionsChanged","disabledChanged","emitStyle","minChanged","maxChanged","presentationChanged","hasDatePresentation","yearValuesChanged","parsedYearValues","convertToArrayOfNumbers","monthValuesChanged","parsedMonthValues","dayValuesChanged","parsedDayValues","hourValuesChanged","parsedHourValues","minuteValuesChanged","parsedMinuteValues","valueChanged","ionValueChange","closeOverlay","isCalendarPicker","activePartsIsArray","convertDataToISO","CONFIRM_ROLE","reset","startDate","cancel","ionCancel","CANCEL_ROLE","connectedCallback","clearFocusVisible","startFocusVisible","destroy","disconnectedCallback","initializeListeners","componentDidLoad","intersectionTrackerRef","visibleCallback","entries","isIntersecting","add","visibleIO","IntersectionObserver","threshold","raf","hiddenCallback","remove","hiddenIO","getElementRoot","stopPropagation","componentDidRender","hasCalendarGrid","ionRender","componentWillLoad","getToday","getClosestValidDate","ionStyle","interactive","datetime","renderFooter","isButtonDisabled","clearButtonClick","h","class","id","onClick","renderWheelPicker","forcePresentation","renderArray","renderTimePickerColumns","renderDatePickerColumns","renderCombinedDatePickerColumn","renderIndividualDatePickerColumns","activePart","monthsToRender","generateMonths","lastMonth","getNumDaysInMonth","result","getCombinedDateColumnData","items","itemObject","index","referenceParts","todayString","onIonChange","detail","findPart","item","part","WHEEL_ITEM_PART","WHEEL_ITEM_ACTIVE_PART","shouldRenderMonths","getMonthColumnData","shouldRenderDays","days","getDayColumnData","dayObject","valueNum","parseInt","shouldRenderYears","years","getYearColumnData","showMonthFirst","isMonthFirstLocale","renderMonthPickerColumn","renderDayPickerColumn","renderYearPickerColumn","pickerColumnValue","userHasSelectedDate","hoursData","minutesData","dayPeriodData","getTimeColumnsData","renderHourPickerColumn","renderMinutePickerColumn","renderDayPeriodPickerColumn","numericInput","isDayPeriodRTL","isLocaleDayPeriodRTL","order","calculateHourFromAMPM","dayPeriod","renderWheelView","columnOrder","renderCalendarHeader","expandedIcon","chevronDown","caretUpSharp","collapsedIcon","chevronForward","caretDownSharp","prevMonthDisabled","nextMonthDisabled","hostDir","getAttribute","getMonthAndYear","icon","lazy","flipRtl","dir","slot","chevronBack","getDaysOfWeek","d","renderMonth","yearAllowed","monthAllowed","isCalMonthDisabled","isDatetimeDisabled","swipeDisabled","isWorkingMonth","getDaysOfMonth","dateObject","dayOfWeek","isCalendarPadding","isCalDayDisabled","isCalDayConstrained","dateStyle","dateParts","ref","tabindex","renderCalendarBody","renderCalendar","renderTimeLabel","hasSlottedTimeLabel","renderTimeOverlay","computedHourCycle","getHourCycle","popoverRef","present","CustomEvent","ionShadowTarget","target","onWillDismiss","getLocalizedTime","alignment","translucent","overlayIndex","arrow","onWillPresent","cols","forEach","col","scrollActiveItemIntoView","keyboardEvents","getHeaderSelectedDateText","headerText","getLocalizedDateTime","weekday","renderHeader","showExpandedHeader","hasSlottedTitle","renderTime","timeOnlyPresentation","renderCalendarViewMonthYearPicker","renderDatetime","hasWheelVariant","render","isMonthAndYearPresentation","shouldShowMonthAndYear","monthYearPickerOpen","renderHiddenInput","formatValue","Host","createColorClasses"],"sources":["node_modules/@ionic/core/dist/collection/components/datetime/utils/state.js","node_modules/@ionic/core/dist/collection/components/datetime/utils/validate.js","node_modules/@ionic/core/dist/collection/components/datetime/datetime.ios.css?tag=ion-datetime&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/datetime/datetime.md.css?tag=ion-datetime&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/datetime/datetime.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { printIonError } from \"../../../utils/logging/index\";\nimport { isAfter, isBefore, isSameDay } from \"./comparison\";\nimport { generateDayAriaLabel, getDay } from \"./format\";\nimport { getNextMonth, getPreviousMonth } from \"./manipulation\";\nexport const isYearDisabled = (refYear, minParts, maxParts) => {\n    if (minParts && minParts.year > refYear) {\n        return true;\n    }\n    if (maxParts && maxParts.year < refYear) {\n        return true;\n    }\n    return false;\n};\n/**\n * Returns true if a given day should\n * not be interactive according to its value,\n * or the max/min dates.\n */\nexport const isDayDisabled = (refParts, minParts, maxParts, dayValues) => {\n    /**\n     * If this is a filler date (i.e. padding)\n     * then the date is disabled.\n     */\n    if (refParts.day === null) {\n        return true;\n    }\n    /**\n     * If user passed in a list of acceptable day values\n     * check to make sure that the date we are looking\n     * at is in this array.\n     */\n    if (dayValues !== undefined && !dayValues.includes(refParts.day)) {\n        return true;\n    }\n    /**\n     * Given a min date, perform the following\n     * checks. If any of them are true, then the\n     * day should be disabled:\n     * 1. Is the current year < the min allowed year?\n     * 2. Is the current year === min allowed year,\n     * but the current month < the min allowed month?\n     * 3. Is the current year === min allowed year, the\n     * current month === min allow month, but the current\n     * day < the min allowed day?\n     */\n    if (minParts && isBefore(refParts, minParts)) {\n        return true;\n    }\n    /**\n     * Given a max date, perform the following\n     * checks. If any of them are true, then the\n     * day should be disabled:\n     * 1. Is the current year > the max allowed year?\n     * 2. Is the current year === max allowed year,\n     * but the current month > the max allowed month?\n     * 3. Is the current year === max allowed year, the\n     * current month === max allow month, but the current\n     * day > the max allowed day?\n     */\n    if (maxParts && isAfter(refParts, maxParts)) {\n        return true;\n    }\n    /**\n     * If none of these checks\n     * passed then the date should\n     * be interactive.\n     */\n    return false;\n};\n/**\n * Given a locale, a date, the selected date(s), and today's date,\n * generate the state for a given calendar day button.\n */\nexport const getCalendarDayState = (locale, refParts, activeParts, todayParts, minParts, maxParts, dayValues) => {\n    /**\n     * activeParts signals what day(s) are currently selected in the datetime.\n     * If multiple=\"true\", this will be an array, but the logic in this util\n     * is the same whether we have one selected day or many because we're only\n     * calculating the state for one button. So, we treat a single activeParts value\n     * the same as an array of length one.\n     */\n    const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n    /**\n     * The day button is active if it is selected, or in other words, if refParts\n     * matches at least one selected date.\n     */\n    const isActive = activePartsArray.find((parts) => isSameDay(refParts, parts)) !== undefined;\n    const isToday = isSameDay(refParts, todayParts);\n    const disabled = isDayDisabled(refParts, minParts, maxParts, dayValues);\n    /**\n     * Note that we always return one object regardless of whether activeParts\n     * was an array, since we pare down to one value for isActive.\n     */\n    return {\n        disabled,\n        isActive,\n        isToday,\n        ariaSelected: isActive ? 'true' : null,\n        ariaLabel: generateDayAriaLabel(locale, isToday, refParts),\n        text: refParts.day != null ? getDay(locale, refParts) : null,\n    };\n};\n/**\n * Returns `true` if the month is disabled given the\n * current date value and min/max date constraints.\n */\nexport const isMonthDisabled = (refParts, { minParts, maxParts, }) => {\n    // If the year is disabled then the month is disabled.\n    if (isYearDisabled(refParts.year, minParts, maxParts)) {\n        return true;\n    }\n    // If the date value is before the min date, then the month is disabled.\n    // If the date value is after the max date, then the month is disabled.\n    if ((minParts && isBefore(refParts, minParts)) || (maxParts && isAfter(refParts, maxParts))) {\n        return true;\n    }\n    return false;\n};\n/**\n * Given a working date, an optional minimum date range,\n * and an optional maximum date range; determine if the\n * previous navigation button is disabled.\n */\nexport const isPrevMonthDisabled = (refParts, minParts, maxParts) => {\n    const prevMonth = Object.assign(Object.assign({}, getPreviousMonth(refParts)), { day: null });\n    return isMonthDisabled(prevMonth, {\n        minParts,\n        maxParts,\n    });\n};\n/**\n * Given a working date and a maximum date range,\n * determine if the next navigation button is disabled.\n */\nexport const isNextMonthDisabled = (refParts, maxParts) => {\n    const nextMonth = Object.assign(Object.assign({}, getNextMonth(refParts)), { day: null });\n    return isMonthDisabled(nextMonth, {\n        maxParts,\n    });\n};\n/**\n * Given the value of the highlightedDates property\n * and an ISO string, return the styles to use for\n * that date, or undefined if none are found.\n */\nexport const getHighlightStyles = (highlightedDates, dateIsoString, el) => {\n    if (Array.isArray(highlightedDates)) {\n        const dateStringWithoutTime = dateIsoString.split('T')[0];\n        const matchingHighlight = highlightedDates.find((hd) => hd.date === dateStringWithoutTime);\n        if (matchingHighlight) {\n            return {\n                textColor: matchingHighlight.textColor,\n                backgroundColor: matchingHighlight.backgroundColor,\n            };\n        }\n    }\n    else {\n        /**\n         * Wrap in a try-catch to prevent exceptions in the user's function\n         * from interrupting the calendar's rendering.\n         */\n        try {\n            return highlightedDates(dateIsoString);\n        }\n        catch (e) {\n            printIonError('Exception thrown from provided `highlightedDates` callback. Please check your function and try again.', el, e);\n        }\n    }\n    return undefined;\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { printIonWarning } from \"../../../utils/logging/index\";\n/**\n * If a time zone is provided in the format options, the rendered text could\n * differ from what was selected in the Datetime, which could cause\n * confusion.\n */\nexport const warnIfTimeZoneProvided = (el, formatOptions) => {\n    var _a, _b, _c, _d;\n    if (((_a = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.date) === null || _a === void 0 ? void 0 : _a.timeZone) ||\n        ((_b = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.date) === null || _b === void 0 ? void 0 : _b.timeZoneName) ||\n        ((_c = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.time) === null || _c === void 0 ? void 0 : _c.timeZone) ||\n        ((_d = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.time) === null || _d === void 0 ? void 0 : _d.timeZoneName)) {\n        printIonWarning('Datetime: \"timeZone\" and \"timeZoneName\" are not supported in \"formatOptions\".', el);\n    }\n};\nexport const checkForPresentationFormatMismatch = (el, presentation, formatOptions) => {\n    // formatOptions is not required\n    if (!formatOptions)\n        return;\n    // If formatOptions is provided, the date and/or time objects are required, depending on the presentation\n    switch (presentation) {\n        case 'date':\n        case 'month-year':\n        case 'month':\n        case 'year':\n            if (formatOptions.date === undefined) {\n                printIonWarning(`Datetime: The '${presentation}' presentation requires a date object in formatOptions.`, el);\n            }\n            break;\n        case 'time':\n            if (formatOptions.time === undefined) {\n                printIonWarning(`Datetime: The 'time' presentation requires a time object in formatOptions.`, el);\n            }\n            break;\n        case 'date-time':\n        case 'time-date':\n            if (formatOptions.date === undefined && formatOptions.time === undefined) {\n                printIonWarning(`Datetime: The '${presentation}' presentation requires either a date or time object (or both) in formatOptions.`, el);\n            }\n            break;\n    }\n};\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: The primary background of the datetime component.\n   * @prop --background-rgb: The primary background of the datetime component in RGB format.\n   * @prop --title-color: The text color of the title.\n   *\n   * @prop --wheel-highlight-background: The background of the highlight under the selected\n   * item when using a wheel style layout, or in the month/year picker for grid style layouts.\n   * @prop --wheel-highlight-border-radius: The border radius of the highlight under the selected\n   * item when using a wheel style layout, or in the month/year picker for grid style layouts.\n   * @prop --wheel-fade-background-rgb: The color of the gradient covering non-selected items\n   * when using a wheel style layout, or in the month/year picker for grid style layouts. Must\n   * be in RGB format, e.g. `255, 255, 255`.\n   */\n  display: flex;\n  flex-flow: column;\n  background: var(--background);\n  overflow: hidden;\n}\n\n:host(.datetime-size-fixed) {\n  width: auto;\n  height: auto;\n}\n\n:host(.datetime-size-fixed:not(.datetime-prefer-wheel)) {\n  max-width: 350px;\n}\n\n/**\n * This ensures that the picker is appropriately\n * sized and never truncates the text.\n */\n:host(.datetime-size-fixed.datetime-prefer-wheel) {\n  min-width: 350px;\n  max-width: max-content;\n}\n\n:host(.datetime-size-cover) {\n  width: 100%;\n}\n\n:host .calendar-body,\n:host .datetime-year {\n  opacity: 0;\n}\n\n:host(:not(.datetime-ready)) .datetime-year {\n  position: absolute;\n  pointer-events: none;\n}\n\n:host(.datetime-ready) .calendar-body {\n  opacity: 1;\n}\n\n:host(.datetime-ready) .datetime-year {\n  display: none;\n  opacity: 1;\n}\n\n/**\n * Changing the physical order of the\n * picker columns in the DOM is added\n * work, so we just use `order` instead.\n *\n * The picker automatically configures\n * the text alignment, so when switching\n * the order we need to manually switch\n * the text alignment too.\n */\n:host .wheel-order-year-first .day-column {\n  order: 3;\n  text-align: end;\n}\n\n:host .wheel-order-year-first .month-column {\n  order: 2;\n  text-align: end;\n}\n\n:host .wheel-order-year-first .year-column {\n  order: 1;\n  text-align: start;\n}\n\n/**\n * This allows the calendar to take\n * up 100% of the remaining height.\n * On iOS, if there are more than\n * 5 rows of dates, the dates should\n * be resized to fit into this\n * container.\n */\n:host .datetime-calendar,\n:host .datetime-year {\n  display: flex;\n  flex: 1 1 auto;\n  flex-flow: column;\n}\n\n:host(.show-month-and-year) .datetime-year {\n  display: flex;\n}\n\n:host(.show-month-and-year) .calendar-next-prev,\n:host(.show-month-and-year) .calendar-days-of-week,\n:host(.show-month-and-year) .calendar-body,\n:host(.show-month-and-year) .datetime-time {\n  display: none;\n}\n\n:host(.month-year-picker-open) .datetime-footer {\n  display: none;\n}\n\n:host(.datetime-disabled) {\n  pointer-events: none;\n}\n:host(.datetime-disabled) .calendar-days-of-week,\n:host(.datetime-disabled) .datetime-time {\n  opacity: 0.4;\n}\n\n:host(.datetime-readonly) {\n  pointer-events: none;\n  /**\n   * Allow user to navigate months\n   * while in readonly mode\n   */\n  /**\n   * Disabled buttons should have full opacity\n   * in readonly mode\n   */\n}\n:host(.datetime-readonly) .calendar-action-buttons,\n:host(.datetime-readonly) .calendar-body,\n:host(.datetime-readonly) .datetime-year {\n  pointer-events: initial;\n}\n:host(.datetime-readonly) .calendar-day[disabled]:not(.calendar-day-constrained),\n:host(.datetime-readonly) .datetime-action-buttons ion-button[disabled] {\n  opacity: 1;\n}\n\n/**\n * Title should not wrap\n * to the next line and should\n * show ellipsis instead.\n */\n:host .datetime-header .datetime-title {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n:host .datetime-action-buttons.has-clear-button {\n  width: 100%;\n}\n\n:host .datetime-action-buttons ion-buttons {\n  display: flex;\n  justify-content: space-between;\n}\n\n/**\n * The confirm and clear buttons are grouped in a\n * container so that they appear on the end opposite\n * of the cancel button.\n * We use display: flex so that the\n * wrapper only takes up as much\n * height as it needs.\n */\n.datetime-action-buttons .datetime-action-buttons-container {\n  display: flex;\n}\n\n/**\n * Date/Year button should be on\n * the opposite side of the component\n * as the Next/Prev buttons\n */\n:host .calendar-action-buttons {\n  display: flex;\n  justify-content: space-between;\n}\n\n:host .calendar-action-buttons ion-button {\n  --background: transparent;\n}\n\n:host .calendar-days-of-week {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  text-align: center;\n}\n\n.calendar-days-of-week .day-of-week {\n  /**\n   * Center the days of the week within each cell\n   * if the container size is changed as a result\n   * of Dynamic Type.\n   */\n  -webkit-margin-start: auto;\n  margin-inline-start: auto;\n  -webkit-margin-end: auto;\n  margin-inline-end: auto;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n:host .calendar-body {\n  /**\n   * Show all calendar months inline\n   * and allow them to take up 100% of\n   * the free space. Do not use CSS Grid\n   * here as there are issues with nested grid\n   * on older browsers.\n   */\n  display: flex;\n  flex-grow: 1;\n  scroll-snap-type: x mandatory;\n  /**\n   * Need to explicitly set overflow-y: hidden\n   * for older implementations of scroll snapping.\n   */\n  overflow-x: scroll;\n  overflow-y: hidden;\n  scrollbar-width: none;\n  /**\n   * Hide blue outline on calendar body\n   * when it is focused.\n   */\n  outline: none;\n}\n\n:host .calendar-body .calendar-month {\n  display: flex;\n  flex-flow: column;\n  /**\n   * Swiping should snap to at\n   * most one month at a time.\n   */\n  scroll-snap-align: start;\n  scroll-snap-stop: always;\n  flex-shrink: 0;\n  width: 100%;\n}\n\n:host .calendar-body .calendar-month-disabled {\n  /**\n   * Disables swipe gesture snapping for scroll-snap containers\n   */\n  scroll-snap-align: none;\n}\n\n/**\n * Hide scrollbars on Chrome and Safari\n */\n:host .calendar-body::-webkit-scrollbar {\n  display: none;\n}\n\n:host .calendar-body .calendar-month-grid {\n  /**\n   * Create 7 columns for\n   * 7 days in a week.\n   */\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n}\n\n:host .calendar-day-wrapper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 0;\n  min-height: 0;\n  overflow: visible;\n}\n\n/**\n * Center the day text vertically\n * and horizontally within its grid cell.\n */\n.calendar-day {\n  border-radius: 50%;\n  -webkit-padding-start: 0px;\n  padding-inline-start: 0px;\n  -webkit-padding-end: 0px;\n  padding-inline-end: 0px;\n  padding-top: 0px;\n  padding-bottom: 0px;\n  -webkit-margin-start: 0px;\n  margin-inline-start: 0px;\n  -webkit-margin-end: 0px;\n  margin-inline-end: 0px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  display: flex;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  outline: none;\n  background: none;\n  color: currentColor;\n  font-family: var(--ion-font-family, inherit);\n  cursor: pointer;\n  appearance: none;\n  z-index: 0;\n}\n\n:host .calendar-day[disabled] {\n  pointer-events: none;\n  opacity: 0.4;\n}\n\n.calendar-day:focus {\n  background: rgba(var(--ion-color-base-rgb), 0.2);\n  box-shadow: 0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);\n}\n\n:host .datetime-time {\n  display: flex;\n  justify-content: space-between;\n}\n\n:host(.datetime-presentation-time) .datetime-time {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n:host ion-popover {\n  --height: 200px;\n}\n\n:host .time-header {\n  display: flex;\n  align-items: center;\n}\n\n:host .time-body {\n  border-radius: 8px;\n  -webkit-padding-start: 12px;\n  padding-inline-start: 12px;\n  -webkit-padding-end: 12px;\n  padding-inline-end: 12px;\n  padding-top: 6px;\n  padding-bottom: 6px;\n  display: flex;\n  border: none;\n  background: var(--ion-color-step-300, var(--ion-background-color-step-300, #edeef0));\n  color: var(--ion-text-color, #000);\n  font-family: inherit;\n  font-size: inherit;\n  cursor: pointer;\n  appearance: none;\n}\n\n:host .time-body-active {\n  color: var(--ion-color-base);\n}\n\n:host(.in-item) {\n  position: static;\n}\n\n:host(.show-month-and-year) .calendar-action-buttons .calendar-month-year-toggle {\n  color: var(--ion-color-base);\n}\n\n.calendar-month-year {\n  min-width: 0;\n}\n\n.calendar-month-year-toggle {\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  position: relative;\n  border: 0;\n  outline: none;\n  background: transparent;\n  cursor: pointer;\n  z-index: 1;\n}\n.calendar-month-year-toggle::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n  transition: opacity 15ms linear, background-color 15ms linear;\n  z-index: -1;\n}\n.calendar-month-year-toggle.ion-focused::after {\n  background: currentColor;\n}\n.calendar-month-year-toggle:disabled {\n  opacity: 0.3;\n  pointer-events: none;\n}\n\n.calendar-month-year-toggle ion-icon {\n  -webkit-padding-start: 4px;\n  padding-inline-start: 4px;\n  -webkit-padding-end: 0;\n  padding-inline-end: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  flex-shrink: 0;\n}\n\n.calendar-month-year-toggle #toggle-wrapper {\n  display: inline-flex;\n  align-items: center;\n}\n\nion-picker {\n  --highlight-background: var(--wheel-highlight-background);\n  --highlight-border-radius: var(--wheel-highlight-border-radius);\n  --fade-background-rgb: var(--wheel-fade-background-rgb);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: var(--ion-color-light, #f4f5f8);\n  --background-rgb: var(--ion-color-light-rgb, 244, 245, 248);\n  --title-color: var(--ion-color-step-600, var(--ion-text-color-step-400, #666666));\n}\n\n:host(.datetime-presentation-date-time:not(.datetime-prefer-wheel)),\n:host(.datetime-presentation-time-date:not(.datetime-prefer-wheel)),\n:host(.datetime-presentation-date:not(.datetime-prefer-wheel)) {\n  min-height: 350px;\n}\n\n:host .datetime-header {\n  -webkit-padding-start: 16px;\n  padding-inline-start: 16px;\n  -webkit-padding-end: 16px;\n  padding-inline-end: 16px;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  border-bottom: 0.55px solid var(--ion-color-step-200, var(--ion-background-color-step-200, #cccccc));\n  font-size: min(0.875rem, 22.4px);\n}\n\n:host .datetime-header .datetime-title {\n  color: var(--title-color);\n}\n\n:host .datetime-header .datetime-selected-date {\n  margin-top: 10px;\n}\n\n.calendar-month-year-toggle {\n  -webkit-padding-start: 16px;\n  padding-inline-start: 16px;\n  -webkit-padding-end: 16px;\n  padding-inline-end: 16px;\n  padding-top: 0px;\n  padding-bottom: 0px;\n  min-height: 44px;\n  font-size: min(1rem, 25.6px);\n  font-weight: 600;\n}\n.calendar-month-year-toggle.ion-focused::after {\n  opacity: 0.15;\n}\n\n.calendar-month-year-toggle #toggle-wrapper {\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n:host .calendar-action-buttons .calendar-month-year-toggle ion-icon,\n:host .calendar-action-buttons ion-buttons ion-button {\n  color: var(--ion-color-base);\n}\n\n:host .calendar-action-buttons ion-buttons {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 8px;\n  padding-bottom: 0;\n}\n\n:host .calendar-action-buttons ion-buttons ion-button {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n:host .calendar-days-of-week {\n  -webkit-padding-start: 8px;\n  padding-inline-start: 8px;\n  -webkit-padding-end: 8px;\n  padding-inline-end: 8px;\n  padding-top: 0;\n  padding-bottom: 0;\n  color: var(--ion-color-step-300, var(--ion-text-color-step-700, #b3b3b3));\n  font-size: min(0.75rem, 19.2px);\n  font-weight: 600;\n  line-height: 24px;\n  text-transform: uppercase;\n}\n\n@supports (border-radius: mod(1px, 1px)) {\n  .calendar-days-of-week .day-of-week {\n    /**\n     * When the computed font size is 24px\n     * we want the days of the week to only\n     * show the first letter of each day.\n     *\n     * We use the modulus operator to ensure\n     * that any font size less than 24px is\n     * unchanged (i.e. 16 % 24 = 16). If the\n     * font size is 24px then the remainder\n     * will be 0.\n     */\n    /**\n     * From here, we scale the remainder to get\n     * a width value larger than 20px.\n     * We then clamp the width to have a max width\n     * of 100% so that each element does not appear\n     * too wide if $width is a very large number.\n     *\n     * When the font size is >=24px then $remainder\n     * will be 0px. This results in $width being 0px\n     * since 0px * 10 is still 0px. We set a minimum\n     * width of 20px below so that the days of the\n     * week still show when the font size is >=24px\n     * and have a fixed width of 20px.\n     *\n     * The days of the week text on iOS have a maximum font size\n     * that is no larger than 20px, so setting a minimum width\n     * of 20px ensures that the text will always fit. (See font-size\n     * declaration in the .calendar-days-of-week block).\n     */\n    width: clamp(20px, calc(mod(min(1rem, 24px), 24px) * 10), 100%);\n    /**\n     * We show the first letter of the week\n     * by setting the width small such that all other\n     * letters wrap to the next line. While we do have\n     * overflow: hidden to visually hide the overflowing\n     * text, we need to explicitly set the height of the\n     * container too otherwise it will increase as the text wraps.\n     */\n    height: 24px;\n    /**\n     * The above width will cause\n     * all the other letters to overflow\n     * to other lines. The below code hides\n     * those additional letters so only\n     * the first letter is shown.\n     */\n    overflow: hidden;\n  }\n  .calendar-day {\n    /**\n     * We use the modulus operator to ensure\n     * that any font size less than 24px is\n     * unchanged (i.e. 16 % 24 = 16). If the\n     * font size is 24px then the remainder\n     * will be 0.\n     */\n    /**\n     * From here, we scale the remainder. The purpose of\n     * scaling the remainder is to get a border radius\n     * large enough such that the element's\n     * shape is a circle.\n     *\n     * Note that when the font size is 24px\n     * then the remainder will be 0, so $radius\n     * will still be zero.\n     */\n    /**\n     * In the event that $radius is 0\n     * we use max() to ensure a minimum\n     * border radius of 8px which will\n     * give the day button the rounded\n     * rectangle appearance.\n     * For font sizes smaller than 24px\n     * the border radius will give a circle appearance.\n     */\n    border-radius: max(8px, mod(min(1rem, 24px), 24px) * 10);\n  }\n}\n/**\n * iOS <17 has a bug where the result of mod() is\n * used incorrectly if used inside of another CSS function such\n * as calc(). The first set of @support checks accounts for iOS <17.\n * We check -webkit-named-image to ensure that non-WebKit browsers are ignored.\n * The second set of @support checks account for all other browsers that\n * do not support mod() yet.\n */\n@supports ((border-radius: mod(1px, 1px)) and (background: -webkit-named-image(apple-pay-logo-black)) and (not (contain-intrinsic-size: none))) or (not (border-radius: mod(1px, 1px))) {\n  .calendar-days-of-week .day-of-week {\n    width: auto;\n    height: auto;\n    overflow: initial;\n  }\n  .calendar-day {\n    border-radius: 32px;\n  }\n}\n:host .calendar-body .calendar-month .calendar-month-grid {\n  /**\n   * We need to apply the padding to\n   * each month grid item otherwise\n   * older versions of WebKit will consider\n   * this padding a snapping point if applied\n   * on .calendar-month\n   */\n  -webkit-padding-start: 8px;\n  padding-inline-start: 8px;\n  -webkit-padding-end: 8px;\n  padding-inline-end: 8px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  align-items: center;\n  height: calc(100% - 16px);\n}\n\n:host .calendar-day-wrapper {\n  -webkit-padding-start: 4px;\n  padding-inline-start: 4px;\n  -webkit-padding-end: 4px;\n  padding-inline-end: 4px;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  height: 0;\n  min-height: 1rem;\n}\n\n:host .calendar-day {\n  width: 40px;\n  min-width: 40px;\n  height: 40px;\n  font-size: min(1.25rem, 32px);\n}\n\n.calendar-day.calendar-day-active {\n  background: rgba(var(--ion-color-base-rgb), 0.2);\n  font-size: min(1.375rem, 35.2px);\n}\n\n/**\n * Day that today but not selected\n * should have ion-color for text color.\n */\n:host .calendar-day.calendar-day-today {\n  color: var(--ion-color-base);\n}\n\n/**\n * Day that is not today but\n * is selected should have ion-color for\n * text color and be bolder.\n */\n:host .calendar-day.calendar-day-active {\n  color: var(--ion-color-base);\n  font-weight: 600;\n}\n\n/**\n * Day that is selected and is today\n * should have base background color\n * with contrast text.\n */\n:host .calendar-day.calendar-day-today.calendar-day-active {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n:host .datetime-time {\n  -webkit-padding-start: 16px;\n  padding-inline-start: 16px;\n  -webkit-padding-end: 16px;\n  padding-inline-end: 16px;\n  padding-top: 8px;\n  padding-bottom: 16px;\n  font-size: min(1rem, 25.6px);\n}\n\n:host .datetime-time .time-header {\n  font-weight: 600;\n}\n\n:host .datetime-buttons {\n  -webkit-padding-start: 8px;\n  padding-inline-start: 8px;\n  -webkit-padding-end: 8px;\n  padding-inline-end: 8px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  border-top: 0.55px solid var(--ion-color-step-200, var(--ion-background-color-step-200, #cccccc));\n}\n\n:host .datetime-buttons ::slotted(ion-buttons),\n:host .datetime-buttons ion-buttons {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n:host .datetime-action-buttons {\n  width: 100%;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: The primary background of the datetime component.\n   * @prop --background-rgb: The primary background of the datetime component in RGB format.\n   * @prop --title-color: The text color of the title.\n   *\n   * @prop --wheel-highlight-background: The background of the highlight under the selected\n   * item when using a wheel style layout, or in the month/year picker for grid style layouts.\n   * @prop --wheel-highlight-border-radius: The border radius of the highlight under the selected\n   * item when using a wheel style layout, or in the month/year picker for grid style layouts.\n   * @prop --wheel-fade-background-rgb: The color of the gradient covering non-selected items\n   * when using a wheel style layout, or in the month/year picker for grid style layouts. Must\n   * be in RGB format, e.g. `255, 255, 255`.\n   */\n  display: flex;\n  flex-flow: column;\n  background: var(--background);\n  overflow: hidden;\n}\n\n:host(.datetime-size-fixed) {\n  width: auto;\n  height: auto;\n}\n\n:host(.datetime-size-fixed:not(.datetime-prefer-wheel)) {\n  max-width: 350px;\n}\n\n/**\n * This ensures that the picker is appropriately\n * sized and never truncates the text.\n */\n:host(.datetime-size-fixed.datetime-prefer-wheel) {\n  min-width: 350px;\n  max-width: max-content;\n}\n\n:host(.datetime-size-cover) {\n  width: 100%;\n}\n\n:host .calendar-body,\n:host .datetime-year {\n  opacity: 0;\n}\n\n:host(:not(.datetime-ready)) .datetime-year {\n  position: absolute;\n  pointer-events: none;\n}\n\n:host(.datetime-ready) .calendar-body {\n  opacity: 1;\n}\n\n:host(.datetime-ready) .datetime-year {\n  display: none;\n  opacity: 1;\n}\n\n/**\n * Changing the physical order of the\n * picker columns in the DOM is added\n * work, so we just use `order` instead.\n *\n * The picker automatically configures\n * the text alignment, so when switching\n * the order we need to manually switch\n * the text alignment too.\n */\n:host .wheel-order-year-first .day-column {\n  order: 3;\n  text-align: end;\n}\n\n:host .wheel-order-year-first .month-column {\n  order: 2;\n  text-align: end;\n}\n\n:host .wheel-order-year-first .year-column {\n  order: 1;\n  text-align: start;\n}\n\n/**\n * This allows the calendar to take\n * up 100% of the remaining height.\n * On iOS, if there are more than\n * 5 rows of dates, the dates should\n * be resized to fit into this\n * container.\n */\n:host .datetime-calendar,\n:host .datetime-year {\n  display: flex;\n  flex: 1 1 auto;\n  flex-flow: column;\n}\n\n:host(.show-month-and-year) .datetime-year {\n  display: flex;\n}\n\n:host(.show-month-and-year) .calendar-next-prev,\n:host(.show-month-and-year) .calendar-days-of-week,\n:host(.show-month-and-year) .calendar-body,\n:host(.show-month-and-year) .datetime-time {\n  display: none;\n}\n\n:host(.month-year-picker-open) .datetime-footer {\n  display: none;\n}\n\n:host(.datetime-disabled) {\n  pointer-events: none;\n}\n:host(.datetime-disabled) .calendar-days-of-week,\n:host(.datetime-disabled) .datetime-time {\n  opacity: 0.4;\n}\n\n:host(.datetime-readonly) {\n  pointer-events: none;\n  /**\n   * Allow user to navigate months\n   * while in readonly mode\n   */\n  /**\n   * Disabled buttons should have full opacity\n   * in readonly mode\n   */\n}\n:host(.datetime-readonly) .calendar-action-buttons,\n:host(.datetime-readonly) .calendar-body,\n:host(.datetime-readonly) .datetime-year {\n  pointer-events: initial;\n}\n:host(.datetime-readonly) .calendar-day[disabled]:not(.calendar-day-constrained),\n:host(.datetime-readonly) .datetime-action-buttons ion-button[disabled] {\n  opacity: 1;\n}\n\n/**\n * Title should not wrap\n * to the next line and should\n * show ellipsis instead.\n */\n:host .datetime-header .datetime-title {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n:host .datetime-action-buttons.has-clear-button {\n  width: 100%;\n}\n\n:host .datetime-action-buttons ion-buttons {\n  display: flex;\n  justify-content: space-between;\n}\n\n/**\n * The confirm and clear buttons are grouped in a\n * container so that they appear on the end opposite\n * of the cancel button.\n * We use display: flex so that the\n * wrapper only takes up as much\n * height as it needs.\n */\n.datetime-action-buttons .datetime-action-buttons-container {\n  display: flex;\n}\n\n/**\n * Date/Year button should be on\n * the opposite side of the component\n * as the Next/Prev buttons\n */\n:host .calendar-action-buttons {\n  display: flex;\n  justify-content: space-between;\n}\n\n:host .calendar-action-buttons ion-button {\n  --background: transparent;\n}\n\n:host .calendar-days-of-week {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  text-align: center;\n}\n\n.calendar-days-of-week .day-of-week {\n  /**\n   * Center the days of the week within each cell\n   * if the container size is changed as a result\n   * of Dynamic Type.\n   */\n  -webkit-margin-start: auto;\n  margin-inline-start: auto;\n  -webkit-margin-end: auto;\n  margin-inline-end: auto;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n:host .calendar-body {\n  /**\n   * Show all calendar months inline\n   * and allow them to take up 100% of\n   * the free space. Do not use CSS Grid\n   * here as there are issues with nested grid\n   * on older browsers.\n   */\n  display: flex;\n  flex-grow: 1;\n  scroll-snap-type: x mandatory;\n  /**\n   * Need to explicitly set overflow-y: hidden\n   * for older implementations of scroll snapping.\n   */\n  overflow-x: scroll;\n  overflow-y: hidden;\n  scrollbar-width: none;\n  /**\n   * Hide blue outline on calendar body\n   * when it is focused.\n   */\n  outline: none;\n}\n\n:host .calendar-body .calendar-month {\n  display: flex;\n  flex-flow: column;\n  /**\n   * Swiping should snap to at\n   * most one month at a time.\n   */\n  scroll-snap-align: start;\n  scroll-snap-stop: always;\n  flex-shrink: 0;\n  width: 100%;\n}\n\n:host .calendar-body .calendar-month-disabled {\n  /**\n   * Disables swipe gesture snapping for scroll-snap containers\n   */\n  scroll-snap-align: none;\n}\n\n/**\n * Hide scrollbars on Chrome and Safari\n */\n:host .calendar-body::-webkit-scrollbar {\n  display: none;\n}\n\n:host .calendar-body .calendar-month-grid {\n  /**\n   * Create 7 columns for\n   * 7 days in a week.\n   */\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n}\n\n:host .calendar-day-wrapper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 0;\n  min-height: 0;\n  overflow: visible;\n}\n\n/**\n * Center the day text vertically\n * and horizontally within its grid cell.\n */\n.calendar-day {\n  border-radius: 50%;\n  -webkit-padding-start: 0px;\n  padding-inline-start: 0px;\n  -webkit-padding-end: 0px;\n  padding-inline-end: 0px;\n  padding-top: 0px;\n  padding-bottom: 0px;\n  -webkit-margin-start: 0px;\n  margin-inline-start: 0px;\n  -webkit-margin-end: 0px;\n  margin-inline-end: 0px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  display: flex;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  outline: none;\n  background: none;\n  color: currentColor;\n  font-family: var(--ion-font-family, inherit);\n  cursor: pointer;\n  appearance: none;\n  z-index: 0;\n}\n\n:host .calendar-day[disabled] {\n  pointer-events: none;\n  opacity: 0.4;\n}\n\n.calendar-day:focus {\n  background: rgba(var(--ion-color-base-rgb), 0.2);\n  box-shadow: 0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);\n}\n\n:host .datetime-time {\n  display: flex;\n  justify-content: space-between;\n}\n\n:host(.datetime-presentation-time) .datetime-time {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n:host ion-popover {\n  --height: 200px;\n}\n\n:host .time-header {\n  display: flex;\n  align-items: center;\n}\n\n:host .time-body {\n  border-radius: 8px;\n  -webkit-padding-start: 12px;\n  padding-inline-start: 12px;\n  -webkit-padding-end: 12px;\n  padding-inline-end: 12px;\n  padding-top: 6px;\n  padding-bottom: 6px;\n  display: flex;\n  border: none;\n  background: var(--ion-color-step-300, var(--ion-background-color-step-300, #edeef0));\n  color: var(--ion-text-color, #000);\n  font-family: inherit;\n  font-size: inherit;\n  cursor: pointer;\n  appearance: none;\n}\n\n:host .time-body-active {\n  color: var(--ion-color-base);\n}\n\n:host(.in-item) {\n  position: static;\n}\n\n:host(.show-month-and-year) .calendar-action-buttons .calendar-month-year-toggle {\n  color: var(--ion-color-base);\n}\n\n.calendar-month-year {\n  min-width: 0;\n}\n\n.calendar-month-year-toggle {\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  position: relative;\n  border: 0;\n  outline: none;\n  background: transparent;\n  cursor: pointer;\n  z-index: 1;\n}\n.calendar-month-year-toggle::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n  transition: opacity 15ms linear, background-color 15ms linear;\n  z-index: -1;\n}\n.calendar-month-year-toggle.ion-focused::after {\n  background: currentColor;\n}\n.calendar-month-year-toggle:disabled {\n  opacity: 0.3;\n  pointer-events: none;\n}\n\n.calendar-month-year-toggle ion-icon {\n  -webkit-padding-start: 4px;\n  padding-inline-start: 4px;\n  -webkit-padding-end: 0;\n  padding-inline-end: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  flex-shrink: 0;\n}\n\n.calendar-month-year-toggle #toggle-wrapper {\n  display: inline-flex;\n  align-items: center;\n}\n\nion-picker {\n  --highlight-background: var(--wheel-highlight-background);\n  --highlight-border-radius: var(--wheel-highlight-border-radius);\n  --fade-background-rgb: var(--wheel-fade-background-rgb);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: var(--ion-color-step-100, var(--ion-background-color-step-100, #ffffff));\n  --title-color: var(--ion-color-contrast);\n}\n\n:host .datetime-header {\n  -webkit-padding-start: 20px;\n  padding-inline-start: 20px;\n  -webkit-padding-end: 20px;\n  padding-inline-end: 20px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  background: var(--ion-color-base);\n  color: var(--title-color);\n}\n\n:host .datetime-header .datetime-title {\n  font-size: 0.75rem;\n  text-transform: uppercase;\n}\n\n:host .datetime-header .datetime-selected-date {\n  margin-top: 30px;\n  font-size: 2.125rem;\n}\n\n:host .calendar-action-buttons ion-button {\n  --color: var(--ion-color-step-650, var(--ion-text-color-step-350, #595959));\n}\n\n.calendar-month-year-toggle {\n  -webkit-padding-start: 20px;\n  padding-inline-start: 20px;\n  -webkit-padding-end: 16px;\n  padding-inline-end: 16px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  min-height: 48px;\n  background: transparent;\n  color: var(--ion-color-step-650, var(--ion-text-color-step-350, #595959));\n  z-index: 1;\n}\n.calendar-month-year-toggle.ion-focused::after {\n  opacity: 0.04;\n}\n\n.calendar-month-year-toggle ion-ripple-effect {\n  color: currentColor;\n}\n\n@media (any-hover: hover) {\n  .calendar-month-year-toggle.ion-activatable:not(.ion-focused):hover::after {\n    background: currentColor;\n    opacity: 0.04;\n  }\n}\n:host .calendar-days-of-week {\n  -webkit-padding-start: 10px;\n  padding-inline-start: 10px;\n  -webkit-padding-end: 10px;\n  padding-inline-end: 10px;\n  padding-top: 0px;\n  padding-bottom: 0px;\n  color: var(--ion-color-step-500, var(--ion-text-color-step-500, gray));\n  font-size: 0.875rem;\n  line-height: 36px;\n}\n\n:host .calendar-body .calendar-month .calendar-month-grid {\n  -webkit-padding-start: 10px;\n  padding-inline-start: 10px;\n  -webkit-padding-end: 10px;\n  padding-inline-end: 10px;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  /**\n   * Calendar on MD will show an empty row\n   * if not enough dates to fill 6th row.\n   * Calendar on iOS fits all dates into\n   * a fixed number of rows and resizes\n   * if necessary.\n   */\n  grid-template-rows: repeat(6, 1fr);\n}\n\n:host .calendar-day {\n  width: 42px;\n  min-width: 42px;\n  height: 42px;\n  font-size: 0.875rem;\n}\n\n/**\n * Day that today but not selected\n * should have ion-color for text color.\n */\n:host .calendar-day.calendar-day-today {\n  border: 1px solid var(--ion-color-base);\n  color: var(--ion-color-base);\n}\n\n/**\n * Day that is not today but\n * is selected should have ion-color for\n * text color and be bolder.\n */\n:host .calendar-day.calendar-day-active {\n  color: var(--ion-color-contrast);\n}\n\n.calendar-day.calendar-day-active {\n  border: 1px solid var(--ion-color-base);\n  background: var(--ion-color-base);\n}\n\n:host .datetime-time {\n  -webkit-padding-start: 16px;\n  padding-inline-start: 16px;\n  -webkit-padding-end: 16px;\n  padding-inline-end: 16px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n\n:host .time-header {\n  color: var(--ion-color-step-650, var(--ion-text-color-step-350, #595959));\n}\n\n/**\n * Add some margin when only selecting month/year\n * otherwise layout will too constricted.\n */\n:host(.datetime-presentation-month) .datetime-year,\n:host(.datetime-presentation-year) .datetime-year,\n:host(.datetime-presentation-month-year) .datetime-year {\n  margin-top: 20px;\n  margin-bottom: 20px;\n}\n\n:host .datetime-buttons {\n  -webkit-padding-start: 10px;\n  padding-inline-start: 10px;\n  -webkit-padding-end: 10px;\n  padding-inline-end: 10px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h, writeTask } from \"@stencil/core\";\nimport { startFocusVisible } from \"../../utils/focus-visible\";\nimport { getElementRoot, raf, renderHiddenInput } from \"../../utils/helpers\";\nimport { printIonError, printIonWarning } from \"../../utils/logging/index\";\nimport { isRTL } from \"../../utils/rtl/index\";\nimport { createColorClasses } from \"../../utils/theme\";\nimport { caretDownSharp, caretUpSharp, chevronBack, chevronDown, chevronForward } from \"ionicons/icons\";\nimport { getIonMode } from \"../../global/ionic-global\";\nimport { isSameDay, warnIfValueOutOfBounds, isBefore, isAfter } from \"./utils/comparison\";\nimport { generateMonths, getDaysOfMonth, getDaysOfWeek, getToday, getMonthColumnData, getDayColumnData, getYearColumnData, getTimeColumnsData, getCombinedDateColumnData, } from \"./utils/data\";\nimport { formatValue, getLocalizedDateTime, getLocalizedTime, getMonthAndYear } from \"./utils/format\";\nimport { isLocaleDayPeriodRTL, isMonthFirstLocale, getNumDaysInMonth, getHourCycle } from \"./utils/helpers\";\nimport { calculateHourFromAMPM, convertDataToISO, getClosestValidDate, getEndOfWeek, getNextDay, getNextMonth, getNextWeek, getNextYear, getPreviousDay, getPreviousMonth, getPreviousWeek, getPreviousYear, getStartOfWeek, validateParts, } from \"./utils/manipulation\";\nimport { clampDate, convertToArrayOfNumbers, getPartsFromCalendarDay, parseAmPm, parseDate, parseMaxParts, parseMinParts, } from \"./utils/parse\";\nimport { getCalendarDayState, getHighlightStyles, isDayDisabled, isMonthDisabled, isNextMonthDisabled, isPrevMonthDisabled, } from \"./utils/state\";\nimport { checkForPresentationFormatMismatch, warnIfTimeZoneProvided } from \"./utils/validate\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @slot title - The title of the datetime.\n * @slot buttons - The buttons in the datetime.\n * @slot time-label - The label for the time selector in the datetime.\n *\n * @part wheel-item - The individual items when using a wheel style layout, or in the\n * month/year picker when using a grid style layout.\n * @part wheel-item active - The currently selected wheel-item.\n *\n * @part time-button - The button that opens the time picker when using a grid style\n * layout with `presentation=\"date-time\"` or `\"time-date\"`.\n * @part time-button active - The time picker button when the picker is open.\n *\n * @part month-year-button - The button that opens the month/year picker when\n * using a grid style layout.\n *\n * @part calendar-day - The individual buttons that display a day inside of the datetime\n * calendar.\n * @part calendar-day active - The currently selected calendar day.\n * @part calendar-day today - The calendar day that contains the current day.\n * @part calendar-day disabled - The calendar day that is disabled.\n */\nexport class Datetime {\n    constructor() {\n        this.inputId = `ion-dt-${datetimeIds++}`;\n        this.prevPresentation = null;\n        this.warnIfIncorrectValueUsage = () => {\n            const { multiple, value } = this;\n            if (!multiple && Array.isArray(value)) {\n                /**\n                 * We do some processing on the `value` array so\n                 * that it looks more like an array when logged to\n                 * the console.\n                 * Example given ['a', 'b']\n                 * Default toString() behavior: a,b\n                 * Custom behavior: ['a', 'b']\n                 */\n                printIonWarning(`ion-datetime was passed an array of values, but multiple=\"false\". This is incorrect usage and may result in unexpected behaviors. To dismiss this warning, pass a string to the \"value\" property when multiple=\"false\".\n\n  Value Passed: [${value.map((v) => `'${v}'`).join(', ')}]\n`, this.el);\n            }\n        };\n        this.setValue = (value) => {\n            this.value = value;\n            this.ionChange.emit({ value });\n        };\n        /**\n         * Returns the DatetimePart interface\n         * to use when rendering an initial set of\n         * data. This should be used when rendering an\n         * interface in an environment where the `value`\n         * may not be set. This function works\n         * by returning the first selected date and then\n         * falling back to defaultParts if no active date\n         * is selected.\n         */\n        this.getActivePartsWithFallback = () => {\n            var _a;\n            const { defaultParts } = this;\n            return (_a = this.getActivePart()) !== null && _a !== void 0 ? _a : defaultParts;\n        };\n        this.getActivePart = () => {\n            const { activeParts } = this;\n            return Array.isArray(activeParts) ? activeParts[0] : activeParts;\n        };\n        this.closeParentOverlay = (role) => {\n            const popoverOrModal = this.el.closest('ion-modal, ion-popover');\n            if (popoverOrModal) {\n                popoverOrModal.dismiss(undefined, role);\n            }\n        };\n        this.setWorkingParts = (parts) => {\n            this.workingParts = Object.assign({}, parts);\n        };\n        this.setActiveParts = (parts, removeDate = false) => {\n            /** if the datetime component is in readonly mode,\n             * allow browsing of the calendar without changing\n             * the set value\n             */\n            if (this.readonly) {\n                return;\n            }\n            const { multiple, minParts, maxParts, activeParts } = this;\n            /**\n             * When setting the active parts, it is possible\n             * to set invalid data. For example,\n             * when updating January 31 to February,\n             * February 31 does not exist. As a result\n             * we need to validate the active parts and\n             * ensure that we are only setting valid dates.\n             * Additionally, we need to update the working parts\n             * too in the event that the validated parts are different.\n             */\n            const validatedParts = validateParts(parts, minParts, maxParts);\n            this.setWorkingParts(validatedParts);\n            if (multiple) {\n                const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n                if (removeDate) {\n                    this.activeParts = activePartsArray.filter((p) => !isSameDay(p, validatedParts));\n                }\n                else {\n                    this.activeParts = [...activePartsArray, validatedParts];\n                }\n            }\n            else {\n                this.activeParts = Object.assign({}, validatedParts);\n            }\n            const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n            if (hasSlottedButtons || this.showDefaultButtons) {\n                return;\n            }\n            this.confirm();\n        };\n        this.initializeKeyboardListeners = () => {\n            const calendarBodyRef = this.calendarBodyRef;\n            if (!calendarBodyRef) {\n                return;\n            }\n            const root = this.el.shadowRoot;\n            /**\n             * Get a reference to the month\n             * element we are currently viewing.\n             */\n            const currentMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(2)');\n            /**\n             * When focusing the calendar body, we want to pass focus\n             * to the working day, but other days should\n             * only be accessible using the arrow keys. Pressing\n             * Tab should jump between bodies of selectable content.\n             */\n            const checkCalendarBodyFocus = (ev) => {\n                var _a;\n                const record = ev[0];\n                /**\n                 * If calendar body was already focused\n                 * when this fired or if the calendar body\n                 * if not currently focused, we should not re-focus\n                 * the inner day.\n                 */\n                if (((_a = record.oldValue) === null || _a === void 0 ? void 0 : _a.includes('ion-focused')) || !calendarBodyRef.classList.contains('ion-focused')) {\n                    return;\n                }\n                this.focusWorkingDay(currentMonth);\n            };\n            const mo = new MutationObserver(checkCalendarBodyFocus);\n            mo.observe(calendarBodyRef, { attributeFilter: ['class'], attributeOldValue: true });\n            this.destroyKeyboardMO = () => {\n                mo === null || mo === void 0 ? void 0 : mo.disconnect();\n            };\n            /**\n             * We must use keydown not keyup as we want\n             * to prevent scrolling when using the arrow keys.\n             */\n            calendarBodyRef.addEventListener('keydown', (ev) => {\n                const activeElement = root.activeElement;\n                if (!activeElement || !activeElement.classList.contains('calendar-day')) {\n                    return;\n                }\n                const parts = getPartsFromCalendarDay(activeElement);\n                let partsToFocus;\n                switch (ev.key) {\n                    case 'ArrowDown':\n                        ev.preventDefault();\n                        partsToFocus = getNextWeek(parts);\n                        break;\n                    case 'ArrowUp':\n                        ev.preventDefault();\n                        partsToFocus = getPreviousWeek(parts);\n                        break;\n                    case 'ArrowRight':\n                        ev.preventDefault();\n                        partsToFocus = getNextDay(parts);\n                        break;\n                    case 'ArrowLeft':\n                        ev.preventDefault();\n                        partsToFocus = getPreviousDay(parts);\n                        break;\n                    case 'Home':\n                        ev.preventDefault();\n                        partsToFocus = getStartOfWeek(parts);\n                        break;\n                    case 'End':\n                        ev.preventDefault();\n                        partsToFocus = getEndOfWeek(parts);\n                        break;\n                    case 'PageUp':\n                        ev.preventDefault();\n                        partsToFocus = ev.shiftKey ? getPreviousYear(parts) : getPreviousMonth(parts);\n                        break;\n                    case 'PageDown':\n                        ev.preventDefault();\n                        partsToFocus = ev.shiftKey ? getNextYear(parts) : getNextMonth(parts);\n                        break;\n                    /**\n                     * Do not preventDefault here\n                     * as we do not want to override other\n                     * browser defaults such as pressing Enter/Space\n                     * to select a day.\n                     */\n                    default:\n                        return;\n                }\n                /**\n                 * If the day we want to move focus to is\n                 * disabled, do not do anything.\n                 */\n                if (isDayDisabled(partsToFocus, this.minParts, this.maxParts)) {\n                    return;\n                }\n                this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), partsToFocus));\n                /**\n                 * Give view a chance to re-render\n                 * then move focus to the new working day\n                 */\n                requestAnimationFrame(() => this.focusWorkingDay(currentMonth));\n            });\n        };\n        this.focusWorkingDay = (currentMonth) => {\n            /**\n             * Get the number of padding days so\n             * we know how much to offset our next selector by\n             * to grab the correct calendar-day element.\n             */\n            const padding = currentMonth.querySelectorAll('.calendar-day-padding');\n            const { day } = this.workingParts;\n            if (day === null) {\n                return;\n            }\n            /**\n             * Get the calendar day element\n             * and focus it.\n             */\n            const dayEl = currentMonth.querySelector(`.calendar-day-wrapper:nth-of-type(${padding.length + day}) .calendar-day`);\n            if (dayEl) {\n                dayEl.focus();\n            }\n        };\n        this.processMinParts = () => {\n            const { min, defaultParts } = this;\n            if (min === undefined) {\n                this.minParts = undefined;\n                return;\n            }\n            this.minParts = parseMinParts(min, defaultParts);\n        };\n        this.processMaxParts = () => {\n            const { max, defaultParts } = this;\n            if (max === undefined) {\n                this.maxParts = undefined;\n                return;\n            }\n            this.maxParts = parseMaxParts(max, defaultParts);\n        };\n        this.initializeCalendarListener = () => {\n            const calendarBodyRef = this.calendarBodyRef;\n            if (!calendarBodyRef) {\n                return;\n            }\n            /**\n             * For performance reasons, we only render 3\n             * months at a time: The current month, the previous\n             * month, and the next month. We have a scroll listener\n             * on the calendar body to append/prepend new months.\n             *\n             * We can do this because Stencil is smart enough to not\n             * re-create the .calendar-month containers, but rather\n             * update the content within those containers.\n             *\n             * As an added bonus, WebKit has some troubles with\n             * scroll-snap-stop: always, so not rendering all of\n             * the months in a row allows us to mostly sidestep\n             * that issue.\n             */\n            const months = calendarBodyRef.querySelectorAll('.calendar-month');\n            const startMonth = months[0];\n            const workingMonth = months[1];\n            const endMonth = months[2];\n            const mode = getIonMode(this);\n            const needsiOSRubberBandFix = mode === 'ios' && typeof navigator !== 'undefined' && navigator.maxTouchPoints > 1;\n            /**\n             * Before setting up the scroll listener,\n             * scroll the middle month into view.\n             * scrollIntoView() will scroll entire page\n             * if element is not in viewport. Use scrollLeft instead.\n             */\n            writeTask(() => {\n                calendarBodyRef.scrollLeft = startMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n                const getChangedMonth = (parts) => {\n                    const box = calendarBodyRef.getBoundingClientRect();\n                    /**\n                     * If the current scroll position is all the way to the left\n                     * then we have scrolled to the previous month.\n                     * Otherwise, assume that we have scrolled to the next\n                     * month. We have a tolerance of 2px to account for\n                     * sub pixel rendering.\n                     *\n                     * Check below the next line ensures that we did not\n                     * swipe and abort (i.e. we swiped but we are still on the current month).\n                     */\n                    const condition = isRTL(this.el) ? calendarBodyRef.scrollLeft >= -2 : calendarBodyRef.scrollLeft <= 2;\n                    const month = condition ? startMonth : endMonth;\n                    /**\n                     * The edge of the month must be lined up with\n                     * the edge of the calendar body in order for\n                     * the component to update. Otherwise, it\n                     * may be the case that the user has paused their\n                     * swipe or the browser has not finished snapping yet.\n                     * Rather than check if the x values are equal,\n                     * we give it a tolerance of 2px to account for\n                     * sub pixel rendering.\n                     */\n                    const monthBox = month.getBoundingClientRect();\n                    if (Math.abs(monthBox.x - box.x) > 2)\n                        return;\n                    /**\n                     * If we're force-rendering a month, assume we've\n                     * scrolled to that and return it.\n                     *\n                     * If forceRenderDate is ever used in a context where the\n                     * forced month is not immediately auto-scrolled to, this\n                     * should be updated to also check whether `month` has the\n                     * same month and year as the forced date.\n                     */\n                    const { forceRenderDate } = this;\n                    if (forceRenderDate !== undefined) {\n                        return { month: forceRenderDate.month, year: forceRenderDate.year, day: forceRenderDate.day };\n                    }\n                    /**\n                     * From here, we can determine if the start\n                     * month or the end month was scrolled into view.\n                     * If no month was changed, then we can return from\n                     * the scroll callback early.\n                     */\n                    if (month === startMonth) {\n                        return getPreviousMonth(parts);\n                    }\n                    else if (month === endMonth) {\n                        return getNextMonth(parts);\n                    }\n                    else {\n                        return;\n                    }\n                };\n                const updateActiveMonth = () => {\n                    if (needsiOSRubberBandFix) {\n                        calendarBodyRef.style.removeProperty('pointer-events');\n                        appliediOSRubberBandFix = false;\n                    }\n                    /**\n                     * If the month did not change\n                     * then we can return early.\n                     */\n                    const newDate = getChangedMonth(this.workingParts);\n                    if (!newDate)\n                        return;\n                    const { month, day, year } = newDate;\n                    if (isMonthDisabled({ month, year, day: null }, {\n                        minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n                        maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n                    })) {\n                        return;\n                    }\n                    /**\n                     * Prevent scrolling for other browsers\n                     * to give the DOM time to update and the container\n                     * time to properly snap.\n                     */\n                    calendarBodyRef.style.setProperty('overflow', 'hidden');\n                    /**\n                     * Use a writeTask here to ensure\n                     * that the state is updated and the\n                     * correct month is scrolled into view\n                     * in the same frame. This is not\n                     * typically a problem on newer devices\n                     * but older/slower device may have a flicker\n                     * if we did not do this.\n                     */\n                    writeTask(() => {\n                        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month, day: day, year }));\n                        calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n                        calendarBodyRef.style.removeProperty('overflow');\n                        if (this.resolveForceDateScrolling) {\n                            this.resolveForceDateScrolling();\n                        }\n                    });\n                };\n                /**\n                 * When the container finishes scrolling we\n                 * need to update the DOM with the selected month.\n                 */\n                let scrollTimeout;\n                /**\n                 * We do not want to attempt to set pointer-events\n                 * multiple times within a single swipe gesture as\n                 * that adds unnecessary work to the main thread.\n                 */\n                let appliediOSRubberBandFix = false;\n                const scrollCallback = () => {\n                    if (scrollTimeout) {\n                        clearTimeout(scrollTimeout);\n                    }\n                    /**\n                     * On iOS it is possible to quickly rubber band\n                     * the scroll area before the scroll timeout has fired.\n                     * This results in users reaching the end of the scrollable\n                     * container before the DOM has updated.\n                     * By setting `pointer-events: none` we can ensure that\n                     * subsequent swipes do not happen while the container\n                     * is snapping.\n                     */\n                    if (!appliediOSRubberBandFix && needsiOSRubberBandFix) {\n                        calendarBodyRef.style.setProperty('pointer-events', 'none');\n                        appliediOSRubberBandFix = true;\n                    }\n                    // Wait ~3 frames\n                    scrollTimeout = setTimeout(updateActiveMonth, 50);\n                };\n                calendarBodyRef.addEventListener('scroll', scrollCallback);\n                this.destroyCalendarListener = () => {\n                    calendarBodyRef.removeEventListener('scroll', scrollCallback);\n                };\n            });\n        };\n        /**\n         * Clean up all listeners except for the overlay\n         * listener. This is so that we can re-create the listeners\n         * if the datetime has been hidden/presented by a modal or popover.\n         */\n        this.destroyInteractionListeners = () => {\n            const { destroyCalendarListener, destroyKeyboardMO } = this;\n            if (destroyCalendarListener !== undefined) {\n                destroyCalendarListener();\n            }\n            if (destroyKeyboardMO !== undefined) {\n                destroyKeyboardMO();\n            }\n        };\n        this.processValue = (value) => {\n            const hasValue = value !== null && value !== undefined && (!Array.isArray(value) || value.length > 0);\n            const valueToProcess = hasValue ? parseDate(value) : this.defaultParts;\n            const { minParts, maxParts, workingParts, el } = this;\n            this.warnIfIncorrectValueUsage();\n            /**\n             * Return early if the value wasn't parsed correctly, such as\n             * if an improperly formatted date string was provided.\n             */\n            if (!valueToProcess) {\n                return;\n            }\n            /**\n             * Datetime should only warn of out of bounds values\n             * if set by the user. If the `value` is undefined,\n             * we will default to today's date which may be out\n             * of bounds. In this case, the warning makes it look\n             * like the developer did something wrong which is\n             * not true.\n             */\n            if (hasValue) {\n                warnIfValueOutOfBounds(valueToProcess, minParts, maxParts);\n            }\n            /**\n             * If there are multiple values, pick an arbitrary one to clamp to. This way,\n             * if the values are across months, we always show at least one of them. Note\n             * that the values don't necessarily have to be in order.\n             */\n            const singleValue = Array.isArray(valueToProcess) ? valueToProcess[0] : valueToProcess;\n            const targetValue = clampDate(singleValue, minParts, maxParts);\n            const { month, day, year, hour, minute } = targetValue;\n            const ampm = parseAmPm(hour);\n            /**\n             * Since `activeParts` indicates a value that\n             * been explicitly selected either by the\n             * user or the app, only update `activeParts`\n             * if the `value` property is set.\n             */\n            if (hasValue) {\n                if (Array.isArray(valueToProcess)) {\n                    this.activeParts = [...valueToProcess];\n                }\n                else {\n                    this.activeParts = {\n                        month,\n                        day,\n                        year,\n                        hour,\n                        minute,\n                        ampm,\n                    };\n                }\n            }\n            else {\n                /**\n                 * Reset the active parts if the value is not set.\n                 * This will clear the selected calendar day when\n                 * performing a clear action or using the reset() method.\n                 */\n                this.activeParts = [];\n            }\n            /**\n             * Only animate if:\n             * 1. We're using grid style (wheel style pickers should just jump to new value)\n             * 2. The month and/or year actually changed, and both are defined (otherwise there's nothing to animate to)\n             * 3. The calendar body is visible (prevents animation when in collapsed datetime-button, for example)\n             * 4. The month/year picker is not open (since you wouldn't see the animation anyway)\n             */\n            const didChangeMonth = (month !== undefined && month !== workingParts.month) || (year !== undefined && year !== workingParts.year);\n            const bodyIsVisible = el.classList.contains('datetime-ready');\n            const { isGridStyle, showMonthAndYear } = this;\n            let areAllSelectedDatesInSameMonth = true;\n            if (Array.isArray(valueToProcess)) {\n                const firstMonth = valueToProcess[0].month;\n                for (const date of valueToProcess) {\n                    if (date.month !== firstMonth) {\n                        areAllSelectedDatesInSameMonth = false;\n                        break;\n                    }\n                }\n            }\n            /**\n             * If there is more than one date selected\n             * and the dates aren't all in the same month,\n             * then we should neither animate to the date\n             * nor update the working parts because we do\n             * not know which date the user wants to view.\n             */\n            if (areAllSelectedDatesInSameMonth) {\n                if (isGridStyle && didChangeMonth && bodyIsVisible && !showMonthAndYear) {\n                    this.animateToDate(targetValue);\n                }\n                else {\n                    /**\n                     * We only need to do this if we didn't just animate to a new month,\n                     * since that calls prevMonth/nextMonth which calls setWorkingParts for us.\n                     */\n                    this.setWorkingParts({\n                        month,\n                        day,\n                        year,\n                        hour,\n                        minute,\n                        ampm,\n                    });\n                }\n            }\n        };\n        this.animateToDate = async (targetValue) => {\n            const { workingParts } = this;\n            /**\n             * Tell other render functions that we need to force the\n             * target month to appear in place of the actual next/prev month.\n             * Because this is a State variable, a rerender will be triggered\n             * automatically, updating the rendered months.\n             */\n            this.forceRenderDate = targetValue;\n            /**\n             * Flag that we've started scrolling to the forced date.\n             * The resolve function will be called by the datetime's\n             * scroll listener when it's done updating everything.\n             * This is a replacement for making prev/nextMonth async,\n             * since the logic we're waiting on is in a listener.\n             */\n            const forceDateScrollingPromise = new Promise((resolve) => {\n                this.resolveForceDateScrolling = resolve;\n            });\n            /**\n             * Animate smoothly to the forced month. This will also update\n             * workingParts and correct the surrounding months for us.\n             */\n            const targetMonthIsBefore = isBefore(targetValue, workingParts);\n            targetMonthIsBefore ? this.prevMonth() : this.nextMonth();\n            await forceDateScrollingPromise;\n            this.resolveForceDateScrolling = undefined;\n            this.forceRenderDate = undefined;\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.hasValue = () => {\n            return this.value != null;\n        };\n        this.nextMonth = () => {\n            const calendarBodyRef = this.calendarBodyRef;\n            if (!calendarBodyRef) {\n                return;\n            }\n            const nextMonth = calendarBodyRef.querySelector('.calendar-month:last-of-type');\n            if (!nextMonth) {\n                return;\n            }\n            const left = nextMonth.offsetWidth * 2;\n            calendarBodyRef.scrollTo({\n                top: 0,\n                left: left * (isRTL(this.el) ? -1 : 1),\n                behavior: 'smooth',\n            });\n        };\n        this.prevMonth = () => {\n            const calendarBodyRef = this.calendarBodyRef;\n            if (!calendarBodyRef) {\n                return;\n            }\n            const prevMonth = calendarBodyRef.querySelector('.calendar-month:first-of-type');\n            if (!prevMonth) {\n                return;\n            }\n            calendarBodyRef.scrollTo({\n                top: 0,\n                left: 0,\n                behavior: 'smooth',\n            });\n        };\n        this.toggleMonthAndYearView = () => {\n            this.showMonthAndYear = !this.showMonthAndYear;\n        };\n        this.showMonthAndYear = false;\n        this.activeParts = [];\n        this.workingParts = {\n            month: 5,\n            day: 28,\n            year: 2021,\n            hour: 13,\n            minute: 52,\n            ampm: 'pm',\n        };\n        this.isTimePopoverOpen = false;\n        this.forceRenderDate = undefined;\n        this.color = 'primary';\n        this.name = this.inputId;\n        this.disabled = false;\n        this.formatOptions = undefined;\n        this.readonly = false;\n        this.isDateEnabled = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this.presentation = 'date-time';\n        this.cancelText = 'Cancel';\n        this.doneText = 'Done';\n        this.clearText = 'Clear';\n        this.yearValues = undefined;\n        this.monthValues = undefined;\n        this.dayValues = undefined;\n        this.hourValues = undefined;\n        this.minuteValues = undefined;\n        this.locale = 'default';\n        this.firstDayOfWeek = 0;\n        this.titleSelectedDatesFormatter = undefined;\n        this.multiple = false;\n        this.highlightedDates = undefined;\n        this.value = undefined;\n        this.showDefaultTitle = false;\n        this.showDefaultButtons = false;\n        this.showClearButton = false;\n        this.showDefaultTimeLabel = true;\n        this.hourCycle = undefined;\n        this.size = 'fixed';\n        this.preferWheel = false;\n    }\n    formatOptionsChanged() {\n        const { el, formatOptions, presentation } = this;\n        checkForPresentationFormatMismatch(el, presentation, formatOptions);\n        warnIfTimeZoneProvided(el, formatOptions);\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    minChanged() {\n        this.processMinParts();\n    }\n    maxChanged() {\n        this.processMaxParts();\n    }\n    presentationChanged() {\n        const { el, formatOptions, presentation } = this;\n        checkForPresentationFormatMismatch(el, presentation, formatOptions);\n    }\n    get isGridStyle() {\n        const { presentation, preferWheel } = this;\n        const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n        return hasDatePresentation && !preferWheel;\n    }\n    yearValuesChanged() {\n        this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n    }\n    monthValuesChanged() {\n        this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n    }\n    dayValuesChanged() {\n        this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n    }\n    hourValuesChanged() {\n        this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n    }\n    minuteValuesChanged() {\n        this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n    }\n    /**\n     * Update the datetime value when the value changes\n     */\n    async valueChanged() {\n        const { value } = this;\n        if (this.hasValue()) {\n            this.processValue(value);\n        }\n        this.emitStyle();\n        this.ionValueChange.emit({ value });\n    }\n    /**\n     * Confirms the selected datetime value, updates the\n     * `value` property, and optionally closes the popover\n     * or modal that the datetime was presented in.\n     */\n    async confirm(closeOverlay = false) {\n        const { isCalendarPicker, activeParts, preferWheel, workingParts } = this;\n        /**\n         * We only update the value if the presentation is not a calendar picker.\n         */\n        if (activeParts !== undefined || !isCalendarPicker) {\n            const activePartsIsArray = Array.isArray(activeParts);\n            if (activePartsIsArray && activeParts.length === 0) {\n                if (preferWheel) {\n                    /**\n                     * If the datetime is using a wheel picker, but the\n                     * active parts are empty, then the user has confirmed the\n                     * initial value (working parts) presented to them.\n                     */\n                    this.setValue(convertDataToISO(workingParts));\n                }\n                else {\n                    this.setValue(undefined);\n                }\n            }\n            else {\n                this.setValue(convertDataToISO(activeParts));\n            }\n        }\n        if (closeOverlay) {\n            this.closeParentOverlay(CONFIRM_ROLE);\n        }\n    }\n    /**\n     * Resets the internal state of the datetime but does not update the value.\n     * Passing a valid ISO-8601 string will reset the state of the component to the provided date.\n     * If no value is provided, the internal state will be reset to the clamped value of the min, max and today.\n     */\n    async reset(startDate) {\n        this.processValue(startDate);\n    }\n    /**\n     * Emits the ionCancel event and\n     * optionally closes the popover\n     * or modal that the datetime was\n     * presented in.\n     */\n    async cancel(closeOverlay = false) {\n        this.ionCancel.emit();\n        if (closeOverlay) {\n            this.closeParentOverlay(CANCEL_ROLE);\n        }\n    }\n    get isCalendarPicker() {\n        const { presentation } = this;\n        return presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    }\n    connectedCallback() {\n        this.clearFocusVisible = startFocusVisible(this.el).destroy;\n    }\n    disconnectedCallback() {\n        if (this.clearFocusVisible) {\n            this.clearFocusVisible();\n            this.clearFocusVisible = undefined;\n        }\n    }\n    initializeListeners() {\n        this.initializeCalendarListener();\n        this.initializeKeyboardListeners();\n    }\n    componentDidLoad() {\n        const { el, intersectionTrackerRef } = this;\n        /**\n         * If a scrollable element is hidden using `display: none`,\n         * it will not have a scroll height meaning we cannot scroll elements\n         * into view. As a result, we will need to wait for the datetime to become\n         * visible if used inside of a modal or a popover otherwise the scrollable\n         * areas will not have the correct values snapped into place.\n         */\n        const visibleCallback = (entries) => {\n            const ev = entries[0];\n            if (!ev.isIntersecting) {\n                return;\n            }\n            this.initializeListeners();\n            /**\n             * TODO FW-2793: Datetime needs a frame to ensure that it\n             * can properly scroll contents into view. As a result\n             * we hide the scrollable content until after that frame\n             * so users do not see the content quickly shifting. The downside\n             * is that the content will pop into view a frame after. Maybe there\n             * is a better way to handle this?\n             */\n            writeTask(() => {\n                this.el.classList.add('datetime-ready');\n            });\n        };\n        const visibleIO = new IntersectionObserver(visibleCallback, { threshold: 0.01, root: el });\n        /**\n         * Use raf to avoid a race condition between the component loading and\n         * its display animation starting (such as when shown in a modal). This\n         * could cause the datetime to start at a visibility of 0, erroneously\n         * triggering the `hiddenIO` observer below.\n         */\n        raf(() => visibleIO === null || visibleIO === void 0 ? void 0 : visibleIO.observe(intersectionTrackerRef));\n        /**\n         * We need to clean up listeners when the datetime is hidden\n         * in a popover/modal so that we can properly scroll containers\n         * back into view if they are re-presented. When the datetime is hidden\n         * the scroll areas have scroll widths/heights of 0px, so any snapping\n         * we did originally has been lost.\n         */\n        const hiddenCallback = (entries) => {\n            const ev = entries[0];\n            if (ev.isIntersecting) {\n                return;\n            }\n            this.destroyInteractionListeners();\n            /**\n             * When datetime is hidden, we need to make sure that\n             * the month/year picker is closed. Otherwise,\n             * it will be open when the datetime re-appears\n             * and the scroll area of the calendar grid will be 0.\n             * As a result, the wrong month will be shown.\n             */\n            this.showMonthAndYear = false;\n            writeTask(() => {\n                this.el.classList.remove('datetime-ready');\n            });\n        };\n        const hiddenIO = new IntersectionObserver(hiddenCallback, { threshold: 0, root: el });\n        raf(() => hiddenIO === null || hiddenIO === void 0 ? void 0 : hiddenIO.observe(intersectionTrackerRef));\n        /**\n         * Datetime uses Ionic components that emit\n         * ionFocus and ionBlur. These events are\n         * composed meaning they will cross\n         * the shadow dom boundary. We need to\n         * stop propagation on these events otherwise\n         * developers will see 2 ionFocus or 2 ionBlur\n         * events at a time.\n         */\n        const root = getElementRoot(this.el);\n        root.addEventListener('ionFocus', (ev) => ev.stopPropagation());\n        root.addEventListener('ionBlur', (ev) => ev.stopPropagation());\n    }\n    /**\n     * When the presentation is changed, all calendar content is recreated,\n     * so we need to re-init behavior with the new elements.\n     */\n    componentDidRender() {\n        const { presentation, prevPresentation, calendarBodyRef, minParts, preferWheel, forceRenderDate } = this;\n        /**\n         * TODO(FW-2165)\n         * Remove this when https://bugs.webkit.org/show_bug.cgi?id=235960 is fixed.\n         * When using `min`, we add `scroll-snap-align: none`\n         * to the disabled month so that users cannot scroll to it.\n         * This triggers a bug in WebKit where the scroll position is reset.\n         * Since the month change logic is handled by a scroll listener,\n         * this causes the month to change leading to `scroll-snap-align`\n         * changing again, thus changing the scroll position again and causing\n         * an infinite loop.\n         * This issue only applies to the calendar grid, so we can disable\n         * it if the calendar grid is not being used.\n         */\n        const hasCalendarGrid = !preferWheel && ['date-time', 'time-date', 'date'].includes(presentation);\n        if (minParts !== undefined && hasCalendarGrid && calendarBodyRef) {\n            const workingMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(1)');\n            /**\n             * We need to make sure the datetime is not in the process\n             * of scrolling to a new datetime value if the value\n             * is updated programmatically.\n             * Otherwise, the datetime will appear to not scroll at all because\n             * we are resetting the scroll position to the center of the view.\n             * Prior to the datetime's value being updated programmatically,\n             * the calendarBodyRef is scrolled such that the middle month is centered\n             * in the view. The below code updates the scroll position so the middle\n             * month is also centered in the view. Since the scroll position did not change,\n             * the scroll callback in this file does not fire,\n             * and the resolveForceDateScrolling promise never resolves.\n             */\n            if (workingMonth && forceRenderDate === undefined) {\n                calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n            }\n        }\n        if (prevPresentation === null) {\n            this.prevPresentation = presentation;\n            return;\n        }\n        if (presentation === prevPresentation) {\n            return;\n        }\n        this.prevPresentation = presentation;\n        this.destroyInteractionListeners();\n        this.initializeListeners();\n        /**\n         * The month/year picker from the date interface\n         * should be closed as it is not available in non-date\n         * interfaces.\n         */\n        this.showMonthAndYear = false;\n        raf(() => {\n            this.ionRender.emit();\n        });\n    }\n    componentWillLoad() {\n        const { el, formatOptions, highlightedDates, multiple, presentation, preferWheel } = this;\n        if (multiple) {\n            if (presentation !== 'date') {\n                printIonWarning('Multiple date selection is only supported for presentation=\"date\".', el);\n            }\n            if (preferWheel) {\n                printIonWarning('Multiple date selection is not supported with preferWheel=\"true\".', el);\n            }\n        }\n        if (highlightedDates !== undefined) {\n            if (presentation !== 'date' && presentation !== 'date-time' && presentation !== 'time-date') {\n                printIonWarning('The highlightedDates property is only supported with the date, date-time, and time-date presentations.', el);\n            }\n            if (preferWheel) {\n                printIonWarning('The highlightedDates property is not supported with preferWheel=\"true\".', el);\n            }\n        }\n        if (formatOptions) {\n            checkForPresentationFormatMismatch(el, presentation, formatOptions);\n            warnIfTimeZoneProvided(el, formatOptions);\n        }\n        const hourValues = (this.parsedHourValues = convertToArrayOfNumbers(this.hourValues));\n        const minuteValues = (this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues));\n        const monthValues = (this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues));\n        const yearValues = (this.parsedYearValues = convertToArrayOfNumbers(this.yearValues));\n        const dayValues = (this.parsedDayValues = convertToArrayOfNumbers(this.dayValues));\n        const todayParts = (this.todayParts = parseDate(getToday()));\n        this.processMinParts();\n        this.processMaxParts();\n        this.defaultParts = getClosestValidDate({\n            refParts: todayParts,\n            monthValues,\n            dayValues,\n            yearValues,\n            hourValues,\n            minuteValues,\n            minParts: this.minParts,\n            maxParts: this.maxParts,\n        });\n        this.processValue(this.value);\n        this.emitStyle();\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            interactive: true,\n            datetime: true,\n            'interactive-disabled': this.disabled,\n        });\n    }\n    /**\n     * Universal render methods\n     * These are pieces of datetime that\n     * are rendered independently of presentation.\n     */\n    renderFooter() {\n        const { disabled, readonly, showDefaultButtons, showClearButton } = this;\n        /**\n         * The cancel, clear, and confirm buttons\n         * should not be interactive if the datetime\n         * is disabled or readonly.\n         */\n        const isButtonDisabled = disabled || readonly;\n        const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n        if (!hasSlottedButtons && !showDefaultButtons && !showClearButton) {\n            return;\n        }\n        const clearButtonClick = () => {\n            this.reset();\n            this.setValue(undefined);\n        };\n        /**\n         * By default we render two buttons:\n         * Cancel - Dismisses the datetime and\n         * does not update the `value` prop.\n         * OK - Dismisses the datetime and\n         * updates the `value` prop.\n         */\n        return (h(\"div\", { class: \"datetime-footer\" }, h(\"div\", { class: \"datetime-buttons\" }, h(\"div\", { class: {\n                ['datetime-action-buttons']: true,\n                ['has-clear-button']: this.showClearButton,\n            } }, h(\"slot\", { name: \"buttons\" }, h(\"ion-buttons\", null, showDefaultButtons && (h(\"ion-button\", { id: \"cancel-button\", color: this.color, onClick: () => this.cancel(true), disabled: isButtonDisabled }, this.cancelText)), h(\"div\", { class: \"datetime-action-buttons-container\" }, showClearButton && (h(\"ion-button\", { id: \"clear-button\", color: this.color, onClick: () => clearButtonClick(), disabled: isButtonDisabled }, this.clearText)), showDefaultButtons && (h(\"ion-button\", { id: \"confirm-button\", color: this.color, onClick: () => this.confirm(true), disabled: isButtonDisabled }, this.doneText)))))))));\n    }\n    /**\n     * Wheel picker render methods\n     */\n    renderWheelPicker(forcePresentation = this.presentation) {\n        /**\n         * If presentation=\"time-date\" we switch the\n         * order of the render array here instead of\n         * manually reordering each date/time picker\n         * column with CSS. This allows for additional\n         * flexibility if we need to render subsets\n         * of the date/time data or do additional ordering\n         * within the child render functions.\n         */\n        const renderArray = forcePresentation === 'time-date'\n            ? [this.renderTimePickerColumns(forcePresentation), this.renderDatePickerColumns(forcePresentation)]\n            : [this.renderDatePickerColumns(forcePresentation), this.renderTimePickerColumns(forcePresentation)];\n        return h(\"ion-picker\", null, renderArray);\n    }\n    renderDatePickerColumns(forcePresentation) {\n        return forcePresentation === 'date-time' || forcePresentation === 'time-date'\n            ? this.renderCombinedDatePickerColumn()\n            : this.renderIndividualDatePickerColumns(forcePresentation);\n    }\n    renderCombinedDatePickerColumn() {\n        const { defaultParts, disabled, workingParts, locale, minParts, maxParts, todayParts, isDateEnabled } = this;\n        const activePart = this.getActivePartsWithFallback();\n        /**\n         * By default, generate a range of 3 months:\n         * Previous month, current month, and next month\n         */\n        const monthsToRender = generateMonths(workingParts);\n        const lastMonth = monthsToRender[monthsToRender.length - 1];\n        /**\n         * Ensure that users can select the entire window of dates.\n         */\n        monthsToRender[0].day = 1;\n        lastMonth.day = getNumDaysInMonth(lastMonth.month, lastMonth.year);\n        /**\n         * Narrow the dates rendered based on min/max dates (if any).\n         * The `min` date is used if the min is after the generated min month.\n         * The `max` date is used if the max is before the generated max month.\n         * This ensures that the sliding window always stays at 3 months\n         * but still allows future dates to be lazily rendered based on any min/max\n         * constraints.\n         */\n        const min = minParts !== undefined && isAfter(minParts, monthsToRender[0]) ? minParts : monthsToRender[0];\n        const max = maxParts !== undefined && isBefore(maxParts, lastMonth) ? maxParts : lastMonth;\n        const result = getCombinedDateColumnData(locale, todayParts, min, max, this.parsedDayValues, this.parsedMonthValues);\n        let items = result.items;\n        const parts = result.parts;\n        if (isDateEnabled) {\n            items = items.map((itemObject, index) => {\n                const referenceParts = parts[index];\n                let disabled;\n                try {\n                    /**\n                     * The `isDateEnabled` implementation is try-catch wrapped\n                     * to prevent exceptions in the user's function from\n                     * interrupting the calendar rendering.\n                     */\n                    disabled = !isDateEnabled(convertDataToISO(referenceParts));\n                }\n                catch (e) {\n                    printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n                }\n                return Object.assign(Object.assign({}, itemObject), { disabled });\n            });\n        }\n        /**\n         * If we have selected a day already, then default the column\n         * to that value. Otherwise, set it to the default date.\n         */\n        const todayString = workingParts.day !== null\n            ? `${workingParts.year}-${workingParts.month}-${workingParts.day}`\n            : `${defaultParts.year}-${defaultParts.month}-${defaultParts.day}`;\n        return (h(\"ion-picker-column\", { \"aria-label\": \"Select a date\", class: \"date-column\", color: this.color, disabled: disabled, value: todayString, onIonChange: (ev) => {\n                const { value } = ev.detail;\n                const findPart = parts.find(({ month, day, year }) => value === `${year}-${month}-${day}`);\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), findPart));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), findPart));\n                ev.stopPropagation();\n            } }, items.map((item) => (h(\"ion-picker-column-option\", { part: item.value === todayString ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART, key: item.value, disabled: item.disabled, value: item.value }, item.text)))));\n    }\n    renderIndividualDatePickerColumns(forcePresentation) {\n        const { workingParts, isDateEnabled } = this;\n        const shouldRenderMonths = forcePresentation !== 'year' && forcePresentation !== 'time';\n        const months = shouldRenderMonths\n            ? getMonthColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedMonthValues)\n            : [];\n        const shouldRenderDays = forcePresentation === 'date';\n        let days = shouldRenderDays\n            ? getDayColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedDayValues)\n            : [];\n        if (isDateEnabled) {\n            days = days.map((dayObject) => {\n                const { value } = dayObject;\n                const valueNum = typeof value === 'string' ? parseInt(value) : value;\n                const referenceParts = {\n                    month: workingParts.month,\n                    day: valueNum,\n                    year: workingParts.year,\n                };\n                let disabled;\n                try {\n                    /**\n                     * The `isDateEnabled` implementation is try-catch wrapped\n                     * to prevent exceptions in the user's function from\n                     * interrupting the calendar rendering.\n                     */\n                    disabled = !isDateEnabled(convertDataToISO(referenceParts));\n                }\n                catch (e) {\n                    printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n                }\n                return Object.assign(Object.assign({}, dayObject), { disabled });\n            });\n        }\n        const shouldRenderYears = forcePresentation !== 'month' && forcePresentation !== 'time';\n        const years = shouldRenderYears\n            ? getYearColumnData(this.locale, this.defaultParts, this.minParts, this.maxParts, this.parsedYearValues)\n            : [];\n        /**\n         * Certain locales show the day before the month.\n         */\n        const showMonthFirst = isMonthFirstLocale(this.locale, { month: 'numeric', day: 'numeric' });\n        let renderArray = [];\n        if (showMonthFirst) {\n            renderArray = [\n                this.renderMonthPickerColumn(months),\n                this.renderDayPickerColumn(days),\n                this.renderYearPickerColumn(years),\n            ];\n        }\n        else {\n            renderArray = [\n                this.renderDayPickerColumn(days),\n                this.renderMonthPickerColumn(months),\n                this.renderYearPickerColumn(years),\n            ];\n        }\n        return renderArray;\n    }\n    renderDayPickerColumn(days) {\n        var _a;\n        if (days.length === 0) {\n            return [];\n        }\n        const { disabled, workingParts } = this;\n        const activePart = this.getActivePartsWithFallback();\n        const pickerColumnValue = (_a = (workingParts.day !== null ? workingParts.day : this.defaultParts.day)) !== null && _a !== void 0 ? _a : undefined;\n        return (h(\"ion-picker-column\", { \"aria-label\": \"Select a day\", class: \"day-column\", color: this.color, disabled: disabled, value: pickerColumnValue, onIonChange: (ev) => {\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { day: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { day: ev.detail.value }));\n                ev.stopPropagation();\n            } }, days.map((day) => (h(\"ion-picker-column-option\", { part: day.value === pickerColumnValue ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART, key: day.value, disabled: day.disabled, value: day.value }, day.text)))));\n    }\n    renderMonthPickerColumn(months) {\n        if (months.length === 0) {\n            return [];\n        }\n        const { disabled, workingParts } = this;\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"ion-picker-column\", { \"aria-label\": \"Select a month\", class: \"month-column\", color: this.color, disabled: disabled, value: workingParts.month, onIonChange: (ev) => {\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { month: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { month: ev.detail.value }));\n                ev.stopPropagation();\n            } }, months.map((month) => (h(\"ion-picker-column-option\", { part: month.value === workingParts.month ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART, key: month.value, disabled: month.disabled, value: month.value }, month.text)))));\n    }\n    renderYearPickerColumn(years) {\n        if (years.length === 0) {\n            return [];\n        }\n        const { disabled, workingParts } = this;\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"ion-picker-column\", { \"aria-label\": \"Select a year\", class: \"year-column\", color: this.color, disabled: disabled, value: workingParts.year, onIonChange: (ev) => {\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { year: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { year: ev.detail.value }));\n                ev.stopPropagation();\n            } }, years.map((year) => (h(\"ion-picker-column-option\", { part: year.value === workingParts.year ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART, key: year.value, disabled: year.disabled, value: year.value }, year.text)))));\n    }\n    renderTimePickerColumns(forcePresentation) {\n        if (['date', 'month', 'month-year', 'year'].includes(forcePresentation)) {\n            return [];\n        }\n        /**\n         * If a user has not selected a date,\n         * then we should show all times. If the\n         * user has selected a date (even if it has\n         * not been confirmed yet), we should apply\n         * the max and min restrictions so that the\n         * time picker shows values that are\n         * appropriate for the selected date.\n         */\n        const activePart = this.getActivePart();\n        const userHasSelectedDate = activePart !== undefined;\n        const { hoursData, minutesData, dayPeriodData } = getTimeColumnsData(this.locale, this.workingParts, this.hourCycle, userHasSelectedDate ? this.minParts : undefined, userHasSelectedDate ? this.maxParts : undefined, this.parsedHourValues, this.parsedMinuteValues);\n        return [\n            this.renderHourPickerColumn(hoursData),\n            this.renderMinutePickerColumn(minutesData),\n            this.renderDayPeriodPickerColumn(dayPeriodData),\n        ];\n    }\n    renderHourPickerColumn(hoursData) {\n        const { disabled, workingParts } = this;\n        if (hoursData.length === 0)\n            return [];\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"ion-picker-column\", { \"aria-label\": \"Select an hour\", color: this.color, disabled: disabled, value: activePart.hour, numericInput: true, onIonChange: (ev) => {\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { hour: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { hour: ev.detail.value }));\n                ev.stopPropagation();\n            } }, hoursData.map((hour) => (h(\"ion-picker-column-option\", { part: hour.value === activePart.hour ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART, key: hour.value, disabled: hour.disabled, value: hour.value }, hour.text)))));\n    }\n    renderMinutePickerColumn(minutesData) {\n        const { disabled, workingParts } = this;\n        if (minutesData.length === 0)\n            return [];\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"ion-picker-column\", { \"aria-label\": \"Select a minute\", color: this.color, disabled: disabled, value: activePart.minute, numericInput: true, onIonChange: (ev) => {\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { minute: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { minute: ev.detail.value }));\n                ev.stopPropagation();\n            } }, minutesData.map((minute) => (h(\"ion-picker-column-option\", { part: minute.value === activePart.minute ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART, key: minute.value, disabled: minute.disabled, value: minute.value }, minute.text)))));\n    }\n    renderDayPeriodPickerColumn(dayPeriodData) {\n        const { disabled, workingParts } = this;\n        if (dayPeriodData.length === 0) {\n            return [];\n        }\n        const activePart = this.getActivePartsWithFallback();\n        const isDayPeriodRTL = isLocaleDayPeriodRTL(this.locale);\n        return (h(\"ion-picker-column\", { \"aria-label\": \"Select a day period\", style: isDayPeriodRTL ? { order: '-1' } : {}, color: this.color, disabled: disabled, value: activePart.ampm, onIonChange: (ev) => {\n                const hour = calculateHourFromAMPM(workingParts, ev.detail.value);\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { ampm: ev.detail.value, hour }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { ampm: ev.detail.value, hour }));\n                ev.stopPropagation();\n            } }, dayPeriodData.map((dayPeriod) => (h(\"ion-picker-column-option\", { part: dayPeriod.value === activePart.ampm ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART, key: dayPeriod.value, disabled: dayPeriod.disabled, value: dayPeriod.value }, dayPeriod.text)))));\n    }\n    renderWheelView(forcePresentation) {\n        const { locale } = this;\n        const showMonthFirst = isMonthFirstLocale(locale);\n        const columnOrder = showMonthFirst ? 'month-first' : 'year-first';\n        return (h(\"div\", { class: {\n                [`wheel-order-${columnOrder}`]: true,\n            } }, this.renderWheelPicker(forcePresentation)));\n    }\n    /**\n     * Grid Render Methods\n     */\n    renderCalendarHeader(mode) {\n        const { disabled } = this;\n        const expandedIcon = mode === 'ios' ? chevronDown : caretUpSharp;\n        const collapsedIcon = mode === 'ios' ? chevronForward : caretDownSharp;\n        const prevMonthDisabled = disabled || isPrevMonthDisabled(this.workingParts, this.minParts, this.maxParts);\n        const nextMonthDisabled = disabled || isNextMonthDisabled(this.workingParts, this.maxParts);\n        // don't use the inheritAttributes util because it removes dir from the host, and we still need that\n        const hostDir = this.el.getAttribute('dir') || undefined;\n        return (h(\"div\", { class: \"calendar-header\" }, h(\"div\", { class: \"calendar-action-buttons\" }, h(\"div\", { class: \"calendar-month-year\" }, h(\"button\", { class: {\n                'calendar-month-year-toggle': true,\n                'ion-activatable': true,\n                'ion-focusable': true,\n            }, part: \"month-year-button\", disabled: disabled, \"aria-label\": this.showMonthAndYear ? 'Hide year picker' : 'Show year picker', onClick: () => this.toggleMonthAndYearView() }, h(\"span\", { id: \"toggle-wrapper\" }, getMonthAndYear(this.locale, this.workingParts), h(\"ion-icon\", { \"aria-hidden\": \"true\", icon: this.showMonthAndYear ? expandedIcon : collapsedIcon, lazy: false, flipRtl: true })), mode === 'md' && h(\"ion-ripple-effect\", null))), h(\"div\", { class: \"calendar-next-prev\" }, h(\"ion-buttons\", null, h(\"ion-button\", { \"aria-label\": \"Previous month\", disabled: prevMonthDisabled, onClick: () => this.prevMonth() }, h(\"ion-icon\", { dir: hostDir, \"aria-hidden\": \"true\", slot: \"icon-only\", icon: chevronBack, lazy: false, flipRtl: true })), h(\"ion-button\", { \"aria-label\": \"Next month\", disabled: nextMonthDisabled, onClick: () => this.nextMonth() }, h(\"ion-icon\", { dir: hostDir, \"aria-hidden\": \"true\", slot: \"icon-only\", icon: chevronForward, lazy: false, flipRtl: true }))))), h(\"div\", { class: \"calendar-days-of-week\", \"aria-hidden\": \"true\" }, getDaysOfWeek(this.locale, mode, this.firstDayOfWeek % 7).map((d) => {\n            return h(\"div\", { class: \"day-of-week\" }, d);\n        }))));\n    }\n    renderMonth(month, year) {\n        const { disabled, readonly } = this;\n        const yearAllowed = this.parsedYearValues === undefined || this.parsedYearValues.includes(year);\n        const monthAllowed = this.parsedMonthValues === undefined || this.parsedMonthValues.includes(month);\n        const isCalMonthDisabled = !yearAllowed || !monthAllowed;\n        const isDatetimeDisabled = disabled || readonly;\n        const swipeDisabled = disabled ||\n            isMonthDisabled({\n                month,\n                year,\n                day: null,\n            }, {\n                // The day is not used when checking if a month is disabled.\n                // Users should be able to access the min or max month, even if the\n                // min/max date is out of bounds (e.g. min is set to Feb 15, Feb should not be disabled).\n                minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n                maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n            });\n        // The working month should never have swipe disabled.\n        // Otherwise the CSS scroll snap will not work and the user\n        // can free-scroll the calendar.\n        const isWorkingMonth = this.workingParts.month === month && this.workingParts.year === year;\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"div\", { \"aria-hidden\": !isWorkingMonth ? 'true' : null, class: {\n                'calendar-month': true,\n                // Prevents scroll snap swipe gestures for months outside of the min/max bounds\n                'calendar-month-disabled': !isWorkingMonth && swipeDisabled,\n            } }, h(\"div\", { class: \"calendar-month-grid\" }, getDaysOfMonth(month, year, this.firstDayOfWeek % 7).map((dateObject, index) => {\n            const { day, dayOfWeek } = dateObject;\n            const { el, highlightedDates, isDateEnabled, multiple } = this;\n            const referenceParts = { month, day, year };\n            const isCalendarPadding = day === null;\n            const { isActive, isToday, ariaLabel, ariaSelected, disabled: isDayDisabled, text, } = getCalendarDayState(this.locale, referenceParts, this.activeParts, this.todayParts, this.minParts, this.maxParts, this.parsedDayValues);\n            const dateIsoString = convertDataToISO(referenceParts);\n            let isCalDayDisabled = isCalMonthDisabled || isDayDisabled;\n            if (!isCalDayDisabled && isDateEnabled !== undefined) {\n                try {\n                    /**\n                     * The `isDateEnabled` implementation is try-catch wrapped\n                     * to prevent exceptions in the user's function from\n                     * interrupting the calendar rendering.\n                     */\n                    isCalDayDisabled = !isDateEnabled(dateIsoString);\n                }\n                catch (e) {\n                    printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', el, e);\n                }\n            }\n            /**\n             * Some days are constrained through max & min or allowed dates\n             * and also disabled because the component is readonly or disabled.\n             * These need to be displayed differently.\n             */\n            const isCalDayConstrained = isCalDayDisabled && isDatetimeDisabled;\n            const isButtonDisabled = isCalDayDisabled || isDatetimeDisabled;\n            let dateStyle = undefined;\n            /**\n             * Custom highlight styles should not override the style for selected dates,\n             * nor apply to \"filler days\" at the start of the grid.\n             */\n            if (highlightedDates !== undefined && !isActive && day !== null) {\n                dateStyle = getHighlightStyles(highlightedDates, dateIsoString, el);\n            }\n            let dateParts = undefined;\n            // \"Filler days\" at the beginning of the grid should not get the calendar day\n            // CSS parts added to them\n            if (!isCalendarPadding) {\n                dateParts = `calendar-day${isActive ? ' active' : ''}${isToday ? ' today' : ''}${isCalDayDisabled ? ' disabled' : ''}`;\n            }\n            return (h(\"div\", { class: \"calendar-day-wrapper\" }, h(\"button\", {\n                // We need to use !important for the inline styles here because\n                // otherwise the CSS shadow parts will override these styles.\n                // See https://github.com/WICG/webcomponents/issues/847\n                // Both the CSS shadow parts and highlightedDates styles are\n                // provided by the developer, but highlightedDates styles should\n                // always take priority.\n                ref: (el) => {\n                    if (el) {\n                        el.style.setProperty('color', `${dateStyle ? dateStyle.textColor : ''}`, 'important');\n                        el.style.setProperty('background-color', `${dateStyle ? dateStyle.backgroundColor : ''}`, 'important');\n                    }\n                }, tabindex: \"-1\", \"data-day\": day, \"data-month\": month, \"data-year\": year, \"data-index\": index, \"data-day-of-week\": dayOfWeek, disabled: isButtonDisabled, class: {\n                    'calendar-day-padding': isCalendarPadding,\n                    'calendar-day': true,\n                    'calendar-day-active': isActive,\n                    'calendar-day-constrained': isCalDayConstrained,\n                    'calendar-day-today': isToday,\n                }, part: dateParts, \"aria-hidden\": isCalendarPadding ? 'true' : null, \"aria-selected\": ariaSelected, \"aria-label\": ariaLabel, onClick: () => {\n                    if (isCalendarPadding) {\n                        return;\n                    }\n                    this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month,\n                        day,\n                        year }));\n                    // multiple only needs date info, so we can wipe out other fields like time\n                    if (multiple) {\n                        this.setActiveParts({\n                            month,\n                            day,\n                            year,\n                        }, isActive);\n                    }\n                    else {\n                        this.setActiveParts(Object.assign(Object.assign({}, activePart), { month,\n                            day,\n                            year }));\n                    }\n                }\n            }, text)));\n        }))));\n    }\n    renderCalendarBody() {\n        return (h(\"div\", { class: \"calendar-body ion-focusable\", ref: (el) => (this.calendarBodyRef = el), tabindex: \"0\" }, generateMonths(this.workingParts, this.forceRenderDate).map(({ month, year }) => {\n            return this.renderMonth(month, year);\n        })));\n    }\n    renderCalendar(mode) {\n        return (h(\"div\", { class: \"datetime-calendar\", key: \"datetime-calendar\" }, this.renderCalendarHeader(mode), this.renderCalendarBody()));\n    }\n    renderTimeLabel() {\n        const hasSlottedTimeLabel = this.el.querySelector('[slot=\"time-label\"]') !== null;\n        if (!hasSlottedTimeLabel && !this.showDefaultTimeLabel) {\n            return;\n        }\n        return h(\"slot\", { name: \"time-label\" }, \"Time\");\n    }\n    renderTimeOverlay() {\n        const { disabled, hourCycle, isTimePopoverOpen, locale, formatOptions } = this;\n        const computedHourCycle = getHourCycle(locale, hourCycle);\n        const activePart = this.getActivePartsWithFallback();\n        return [\n            h(\"div\", { class: \"time-header\" }, this.renderTimeLabel()),\n            h(\"button\", { class: {\n                    'time-body': true,\n                    'time-body-active': isTimePopoverOpen,\n                }, part: `time-button${isTimePopoverOpen ? ' active' : ''}`, \"aria-expanded\": \"false\", \"aria-haspopup\": \"true\", disabled: disabled, onClick: async (ev) => {\n                    const { popoverRef } = this;\n                    if (popoverRef) {\n                        this.isTimePopoverOpen = true;\n                        popoverRef.present(new CustomEvent('ionShadowTarget', {\n                            detail: {\n                                ionShadowTarget: ev.target,\n                            },\n                        }));\n                        await popoverRef.onWillDismiss();\n                        this.isTimePopoverOpen = false;\n                    }\n                } }, getLocalizedTime(locale, activePart, computedHourCycle, formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.time)),\n            h(\"ion-popover\", { alignment: \"center\", translucent: true, overlayIndex: 1, arrow: false, onWillPresent: (ev) => {\n                    /**\n                     * Intersection Observers do not consistently fire between Blink and Webkit\n                     * when toggling the visibility of the popover and trying to scroll the picker\n                     * column to the correct time value.\n                     *\n                     * This will correctly scroll the element position to the correct time value,\n                     * before the popover is fully presented.\n                     */\n                    const cols = ev.target.querySelectorAll('ion-picker-column');\n                    // TODO (FW-615): Potentially remove this when intersection observers are fixed in picker column\n                    cols.forEach((col) => col.scrollActiveItemIntoView());\n                }, style: {\n                    '--offset-y': '-10px',\n                    '--min-width': 'fit-content',\n                },\n                // Allow native browser keyboard events to support up/down/home/end key\n                // navigation within the time picker.\n                keyboardEvents: true, ref: (el) => (this.popoverRef = el) }, this.renderWheelPicker('time')),\n        ];\n    }\n    getHeaderSelectedDateText() {\n        var _a;\n        const { activeParts, formatOptions, multiple, titleSelectedDatesFormatter } = this;\n        const isArray = Array.isArray(activeParts);\n        let headerText;\n        if (multiple && isArray && activeParts.length !== 1) {\n            headerText = `${activeParts.length} days`; // default/fallback for multiple selection\n            if (titleSelectedDatesFormatter !== undefined) {\n                try {\n                    headerText = titleSelectedDatesFormatter(convertDataToISO(activeParts));\n                }\n                catch (e) {\n                    printIonError('Exception in provided `titleSelectedDatesFormatter`: ', e);\n                }\n            }\n        }\n        else {\n            // for exactly 1 day selected (multiple set or not), show a formatted version of that\n            headerText = getLocalizedDateTime(this.locale, this.getActivePartsWithFallback(), (_a = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.date) !== null && _a !== void 0 ? _a : { weekday: 'short', month: 'short', day: 'numeric' });\n        }\n        return headerText;\n    }\n    renderHeader(showExpandedHeader = true) {\n        const hasSlottedTitle = this.el.querySelector('[slot=\"title\"]') !== null;\n        if (!hasSlottedTitle && !this.showDefaultTitle) {\n            return;\n        }\n        return (h(\"div\", { class: \"datetime-header\" }, h(\"div\", { class: \"datetime-title\" }, h(\"slot\", { name: \"title\" }, \"Select Date\")), showExpandedHeader && h(\"div\", { class: \"datetime-selected-date\" }, this.getHeaderSelectedDateText())));\n    }\n    /**\n     * Render time picker inside of datetime.\n     * Do not pass color prop to segment on\n     * iOS mode. MD segment has been customized and\n     * should take on the color prop, but iOS\n     * should just be the default segment.\n     */\n    renderTime() {\n        const { presentation } = this;\n        const timeOnlyPresentation = presentation === 'time';\n        return (h(\"div\", { class: \"datetime-time\" }, timeOnlyPresentation ? this.renderWheelPicker() : this.renderTimeOverlay()));\n    }\n    /**\n     * Renders the month/year picker that is\n     * displayed on the calendar grid.\n     * The .datetime-year class has additional\n     * styles that let us show/hide the\n     * picker when the user clicks on the\n     * toggle in the calendar header.\n     */\n    renderCalendarViewMonthYearPicker() {\n        return h(\"div\", { class: \"datetime-year\" }, this.renderWheelView('month-year'));\n    }\n    /**\n     * Render entry point\n     * All presentation types are rendered from here.\n     */\n    renderDatetime(mode) {\n        const { presentation, preferWheel } = this;\n        /**\n         * Certain presentation types have separate grid and wheel displays.\n         * If preferWheel is true then we should show a wheel picker instead.\n         */\n        const hasWheelVariant = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n        if (preferWheel && hasWheelVariant) {\n            return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n        }\n        switch (presentation) {\n            case 'date-time':\n                return [\n                    this.renderHeader(),\n                    this.renderCalendar(mode),\n                    this.renderCalendarViewMonthYearPicker(),\n                    this.renderTime(),\n                    this.renderFooter(),\n                ];\n            case 'time-date':\n                return [\n                    this.renderHeader(),\n                    this.renderTime(),\n                    this.renderCalendar(mode),\n                    this.renderCalendarViewMonthYearPicker(),\n                    this.renderFooter(),\n                ];\n            case 'time':\n                return [this.renderHeader(false), this.renderTime(), this.renderFooter()];\n            case 'month':\n            case 'month-year':\n            case 'year':\n                return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n            default:\n                return [\n                    this.renderHeader(),\n                    this.renderCalendar(mode),\n                    this.renderCalendarViewMonthYearPicker(),\n                    this.renderFooter(),\n                ];\n        }\n    }\n    render() {\n        const { name, value, disabled, el, color, readonly, showMonthAndYear, preferWheel, presentation, size, isGridStyle, } = this;\n        const mode = getIonMode(this);\n        const isMonthAndYearPresentation = presentation === 'year' || presentation === 'month' || presentation === 'month-year';\n        const shouldShowMonthAndYear = showMonthAndYear || isMonthAndYearPresentation;\n        const monthYearPickerOpen = showMonthAndYear && !isMonthAndYearPresentation;\n        const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n        const hasWheelVariant = hasDatePresentation && preferWheel;\n        renderHiddenInput(true, el, name, formatValue(value), disabled);\n        return (h(Host, { key: '48313af4ec8e2a2666cd8c89932c5131dfa7b556', \"aria-disabled\": disabled ? 'true' : null, onFocus: this.onFocus, onBlur: this.onBlur, class: Object.assign({}, createColorClasses(color, {\n                [mode]: true,\n                ['datetime-readonly']: readonly,\n                ['datetime-disabled']: disabled,\n                'show-month-and-year': shouldShowMonthAndYear,\n                'month-year-picker-open': monthYearPickerOpen,\n                [`datetime-presentation-${presentation}`]: true,\n                [`datetime-size-${size}`]: true,\n                [`datetime-prefer-wheel`]: hasWheelVariant,\n                [`datetime-grid`]: isGridStyle,\n            })) }, h(\"div\", { key: 'b72570048236415aed915488305046d987d51dcf', class: \"intersection-tracker\", ref: (el) => (this.intersectionTrackerRef = el) }), this.renderDatetime(mode)));\n    }\n    static get is() { return \"ion-datetime\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"datetime.ios.scss\"],\n            \"md\": [\"datetime.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"datetime.ios.css\"],\n            \"md\": [\"datetime.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": false,\n                \"defaultValue\": \"'primary'\"\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The name of the control, which is submitted with the form data.\"\n                },\n                \"attribute\": \"name\",\n                \"reflect\": false,\n                \"defaultValue\": \"this.inputId\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the datetime.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"formatOptions\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"FormatOptions\",\n                    \"resolved\": \"undefined | { date: DateTimeFormatOptions; time?: DateTimeFormatOptions | undefined; } | { date?: DateTimeFormatOptions | undefined; time: DateTimeFormatOptions; }\",\n                    \"references\": {\n                        \"FormatOptions\": {\n                            \"location\": \"import\",\n                            \"path\": \"./datetime-interface\",\n                            \"id\": \"src/components/datetime/datetime-interface.ts::FormatOptions\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Formatting options for dates and times.\\nShould include a 'date' and/or 'time' object, each of which is of type [Intl.DateTimeFormatOptions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat#options).\"\n                }\n            },\n            \"readonly\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the datetime appears normal but the selected date cannot be changed.\"\n                },\n                \"attribute\": \"readonly\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"isDateEnabled\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"(dateIsoString: string) => boolean\",\n                    \"resolved\": \"((dateIsoString: string) => boolean) | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Returns if an individual date (calendar day) is enabled or disabled.\\n\\nIf `true`, the day will be enabled/interactive.\\nIf `false`, the day will be disabled/non-interactive.\\n\\nThe function accepts an ISO 8601 date string of a given day.\\nBy default, all days are enabled. Developers can use this function\\nto write custom logic to disable certain days.\\n\\nThe function is called for each rendered calendar day, for the previous, current and next month.\\nCustom implementations should be optimized for performance to avoid jank.\"\n                }\n            },\n            \"min\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The minimum datetime allowed. Value must be a date string\\nfollowing the\\n[ISO 8601 datetime format standard](https://www.w3.org/TR/NOTE-datetime),\\nsuch as `1996-12-19`. The format does not have to be specific to an exact\\ndatetime. For example, the minimum could just be the year, such as `1994`.\\nDefaults to the beginning of the year, 100 years ago from today.\"\n                },\n                \"attribute\": \"min\",\n                \"reflect\": false\n            },\n            \"max\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The maximum datetime allowed. Value must be a date string\\nfollowing the\\n[ISO 8601 datetime format standard](https://www.w3.org/TR/NOTE-datetime),\\n`1996-12-19`. The format does not have to be specific to an exact\\ndatetime. For example, the maximum could just be the year, such as `1994`.\\nDefaults to the end of this year.\"\n                },\n                \"attribute\": \"max\",\n                \"reflect\": false\n            },\n            \"presentation\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"DatetimePresentation\",\n                    \"resolved\": \"\\\"date\\\" | \\\"date-time\\\" | \\\"month\\\" | \\\"month-year\\\" | \\\"time\\\" | \\\"time-date\\\" | \\\"year\\\"\",\n                    \"references\": {\n                        \"DatetimePresentation\": {\n                            \"location\": \"import\",\n                            \"path\": \"./datetime-interface\",\n                            \"id\": \"src/components/datetime/datetime-interface.ts::DatetimePresentation\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Which values you want to select. `\\\"date\\\"` will show\\na calendar picker to select the month, day, and year. `\\\"time\\\"`\\nwill show a time picker to select the hour, minute, and (optionally)\\nAM/PM. `\\\"date-time\\\"` will show the date picker first and time picker second.\\n`\\\"time-date\\\"` will show the time picker first and date picker second.\"\n                },\n                \"attribute\": \"presentation\",\n                \"reflect\": false,\n                \"defaultValue\": \"'date-time'\"\n            },\n            \"cancelText\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The text to display on the picker's cancel button.\"\n                },\n                \"attribute\": \"cancel-text\",\n                \"reflect\": false,\n                \"defaultValue\": \"'Cancel'\"\n            },\n            \"doneText\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The text to display on the picker's \\\"Done\\\" button.\"\n                },\n                \"attribute\": \"done-text\",\n                \"reflect\": false,\n                \"defaultValue\": \"'Done'\"\n            },\n            \"clearText\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The text to display on the picker's \\\"Clear\\\" button.\"\n                },\n                \"attribute\": \"clear-text\",\n                \"reflect\": false,\n                \"defaultValue\": \"'Clear'\"\n            },\n            \"yearValues\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number[] | number | string\",\n                    \"resolved\": \"number | number[] | string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Values used to create the list of selectable years. By default\\nthe year values range between the `min` and `max` datetime inputs. However, to\\ncontrol exactly which years to display, the `yearValues` input can take a number, an array\\nof numbers, or string of comma separated numbers. For example, to show upcoming and\\nrecent leap years, then this input's value would be `yearValues=\\\"2008,2012,2016,2020,2024\\\"`.\"\n                },\n                \"attribute\": \"year-values\",\n                \"reflect\": false\n            },\n            \"monthValues\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number[] | number | string\",\n                    \"resolved\": \"number | number[] | string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Values used to create the list of selectable months. By default\\nthe month values range from `1` to `12`. However, to control exactly which months to\\ndisplay, the `monthValues` input can take a number, an array of numbers, or a string of\\ncomma separated numbers. For example, if only summer months should be shown, then this\\ninput value would be `monthValues=\\\"6,7,8\\\"`. Note that month numbers do *not* have a\\nzero-based index, meaning January's value is `1`, and December's is `12`.\"\n                },\n                \"attribute\": \"month-values\",\n                \"reflect\": false\n            },\n            \"dayValues\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number[] | number | string\",\n                    \"resolved\": \"number | number[] | string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Values used to create the list of selectable days. By default\\nevery day is shown for the given month. However, to control exactly which days of\\nthe month to display, the `dayValues` input can take a number, an array of numbers, or\\na string of comma separated numbers. Note that even if the array days have an invalid\\nnumber for the selected month, like `31` in February, it will correctly not show\\ndays which are not valid for the selected month.\"\n                },\n                \"attribute\": \"day-values\",\n                \"reflect\": false\n            },\n            \"hourValues\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number[] | number | string\",\n                    \"resolved\": \"number | number[] | string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Values used to create the list of selectable hours. By default\\nthe hour values range from `0` to `23` for 24-hour, or `1` to `12` for 12-hour. However,\\nto control exactly which hours to display, the `hourValues` input can take a number, an\\narray of numbers, or a string of comma separated numbers.\"\n                },\n                \"attribute\": \"hour-values\",\n                \"reflect\": false\n            },\n            \"minuteValues\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number[] | number | string\",\n                    \"resolved\": \"number | number[] | string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Values used to create the list of selectable minutes. By default\\nthe minutes range from `0` to `59`. However, to control exactly which minutes to display,\\nthe `minuteValues` input can take a number, an array of numbers, or a string of comma\\nseparated numbers. For example, if the minute selections should only be every 15 minutes,\\nthen this input value would be `minuteValues=\\\"0,15,30,45\\\"`.\"\n                },\n                \"attribute\": \"minute-values\",\n                \"reflect\": false\n            },\n            \"locale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The locale to use for `ion-datetime`. This\\nimpacts month and day name formatting.\\nThe `\\\"default\\\"` value refers to the default\\nlocale set by your device.\"\n                },\n                \"attribute\": \"locale\",\n                \"reflect\": false,\n                \"defaultValue\": \"'default'\"\n            },\n            \"firstDayOfWeek\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The first day of the week to use for `ion-datetime`. The\\ndefault value is `0` and represents Sunday.\"\n                },\n                \"attribute\": \"first-day-of-week\",\n                \"reflect\": false,\n                \"defaultValue\": \"0\"\n            },\n            \"titleSelectedDatesFormatter\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"TitleSelectedDatesFormatter\",\n                    \"resolved\": \"((selectedDates: string[]) => string) | undefined\",\n                    \"references\": {\n                        \"TitleSelectedDatesFormatter\": {\n                            \"location\": \"import\",\n                            \"path\": \"./datetime-interface\",\n                            \"id\": \"src/components/datetime/datetime-interface.ts::TitleSelectedDatesFormatter\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"A callback used to format the header text that shows how many\\ndates are selected. Only used if there are 0 or more than 1\\nselected (i.e. unused for exactly 1). By default, the header\\ntext is set to \\\"numberOfDates days\\\".\\n\\nSee https://ionicframework.com/docs/troubleshooting/runtime#accessing-this\\nif you need to access `this` from within the callback.\"\n                }\n            },\n            \"multiple\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, multiple dates can be selected at once. Only\\napplies to `presentation=\\\"date\\\"` and `preferWheel=\\\"false\\\"`.\"\n                },\n                \"attribute\": \"multiple\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"highlightedDates\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"DatetimeHighlight[] | DatetimeHighlightCallback\",\n                    \"resolved\": \"((dateIsoString: string) => DatetimeHighlightStyle | undefined) | DatetimeHighlight[] | undefined\",\n                    \"references\": {\n                        \"DatetimeHighlight\": {\n                            \"location\": \"import\",\n                            \"path\": \"./datetime-interface\",\n                            \"id\": \"src/components/datetime/datetime-interface.ts::DatetimeHighlight\"\n                        },\n                        \"DatetimeHighlightCallback\": {\n                            \"location\": \"import\",\n                            \"path\": \"./datetime-interface\",\n                            \"id\": \"src/components/datetime/datetime-interface.ts::DatetimeHighlightCallback\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Used to apply custom text and background colors to specific dates.\\n\\nCan be either an array of objects containing ISO strings and colors,\\nor a callback that receives an ISO string and returns the colors.\\n\\nOnly applies to the `date`, `date-time`, and `time-date` presentations,\\nwith `preferWheel=\\\"false\\\"`.\"\n                }\n            },\n            \"value\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"string | string[] | null\",\n                    \"resolved\": \"null | string | string[] | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The value of the datetime as a valid ISO 8601 datetime string.\\nThis should be an array of strings only when `multiple=\\\"true\\\"`.\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": false\n            },\n            \"showDefaultTitle\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, a header will be shown above the calendar\\npicker. This will include both the slotted title, and\\nthe selected date.\"\n                },\n                \"attribute\": \"show-default-title\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"showDefaultButtons\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the default \\\"Cancel\\\" and \\\"OK\\\" buttons\\nwill be rendered at the bottom of the `ion-datetime`\\ncomponent. Developers can also use the `button` slot\\nif they want to customize these buttons. If custom\\nbuttons are set in the `button` slot then the\\ndefault buttons will not be rendered.\"\n                },\n                \"attribute\": \"show-default-buttons\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"showClearButton\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, a \\\"Clear\\\" button will be rendered alongside\\nthe default \\\"Cancel\\\" and \\\"OK\\\" buttons at the bottom of the `ion-datetime`\\ncomponent. Developers can also use the `button` slot\\nif they want to customize these buttons. If custom\\nbuttons are set in the `button` slot then the\\ndefault buttons will not be rendered.\"\n                },\n                \"attribute\": \"show-clear-button\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"showDefaultTimeLabel\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the default \\\"Time\\\" label will be rendered\\nfor the time selector of the `ion-datetime` component.\\nDevelopers can also use the `time-label` slot\\nif they want to customize this label. If a custom\\nlabel is set in the `time-label` slot then the\\ndefault label will not be rendered.\"\n                },\n                \"attribute\": \"show-default-time-label\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"hourCycle\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"DatetimeHourCycle\",\n                    \"resolved\": \"\\\"h11\\\" | \\\"h12\\\" | \\\"h23\\\" | \\\"h24\\\" | undefined\",\n                    \"references\": {\n                        \"DatetimeHourCycle\": {\n                            \"location\": \"import\",\n                            \"path\": \"./datetime-interface\",\n                            \"id\": \"src/components/datetime/datetime-interface.ts::DatetimeHourCycle\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The hour cycle of the `ion-datetime`. If no value is set, this is\\nspecified by the current locale.\"\n                },\n                \"attribute\": \"hour-cycle\",\n                \"reflect\": false\n            },\n            \"size\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'cover' | 'fixed'\",\n                    \"resolved\": \"\\\"cover\\\" | \\\"fixed\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `cover`, the `ion-datetime` will expand to cover the full width of its container.\\nIf `fixed`, the `ion-datetime` will have a fixed width.\"\n                },\n                \"attribute\": \"size\",\n                \"reflect\": false,\n                \"defaultValue\": \"'fixed'\"\n            },\n            \"preferWheel\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, a wheel picker will be rendered instead of a calendar grid\\nwhere possible. If `false`, a calendar grid will be rendered instead of\\na wheel picker where possible.\\n\\nA wheel picker can be rendered instead of a grid when `presentation` is\\none of the following values: `\\\"date\\\"`, `\\\"date-time\\\"`, or `\\\"time-date\\\"`.\\n\\nA wheel picker will always be rendered regardless of\\nthe `preferWheel` value when `presentation` is one of the following values:\\n`\\\"time\\\"`, `\\\"month\\\"`, `\\\"month-year\\\"`, or `\\\"year\\\"`.\"\n                },\n                \"attribute\": \"prefer-wheel\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"showMonthAndYear\": {},\n            \"activeParts\": {},\n            \"workingParts\": {},\n            \"isTimePopoverOpen\": {},\n            \"forceRenderDate\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionCancel\",\n                \"name\": \"ionCancel\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the datetime selection was cancelled.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionChange\",\n                \"name\": \"ionChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the value (selected date) has changed.\\n\\nThis event will not emit when programmatically setting the `value` property.\"\n                },\n                \"complexType\": {\n                    \"original\": \"DatetimeChangeEventDetail\",\n                    \"resolved\": \"DatetimeChangeEventDetail\",\n                    \"references\": {\n                        \"DatetimeChangeEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"./datetime-interface\",\n                            \"id\": \"src/components/datetime/datetime-interface.ts::DatetimeChangeEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"ionValueChange\",\n                \"name\": \"ionValueChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Emitted when the value property has changed.\\nThis is used to ensure that ion-datetime-button can respond\\nto any value property changes.\"\n                },\n                \"complexType\": {\n                    \"original\": \"DatetimeChangeEventDetail\",\n                    \"resolved\": \"DatetimeChangeEventDetail\",\n                    \"references\": {\n                        \"DatetimeChangeEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"./datetime-interface\",\n                            \"id\": \"src/components/datetime/datetime-interface.ts::DatetimeChangeEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"ionFocus\",\n                \"name\": \"ionFocus\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the datetime has focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionBlur\",\n                \"name\": \"ionBlur\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the datetime loses focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionStyle\",\n                \"name\": \"ionStyle\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Emitted when the styles change.\"\n                },\n                \"complexType\": {\n                    \"original\": \"StyleEventDetail\",\n                    \"resolved\": \"StyleEventDetail\",\n                    \"references\": {\n                        \"StyleEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::StyleEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"ionRender\",\n                \"name\": \"ionRender\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Emitted when componentDidRender is fired.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"confirm\": {\n                \"complexType\": {\n                    \"signature\": \"(closeOverlay?: boolean) => Promise<void>\",\n                    \"parameters\": [{\n                            \"name\": \"closeOverlay\",\n                            \"type\": \"boolean\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Confirms the selected datetime value, updates the\\n`value` property, and optionally closes the popover\\nor modal that the datetime was presented in.\",\n                    \"tags\": []\n                }\n            },\n            \"reset\": {\n                \"complexType\": {\n                    \"signature\": \"(startDate?: string) => Promise<void>\",\n                    \"parameters\": [{\n                            \"name\": \"startDate\",\n                            \"type\": \"string | undefined\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Resets the internal state of the datetime but does not update the value.\\nPassing a valid ISO-8601 string will reset the state of the component to the provided date.\\nIf no value is provided, the internal state will be reset to the clamped value of the min, max and today.\",\n                    \"tags\": []\n                }\n            },\n            \"cancel\": {\n                \"complexType\": {\n                    \"signature\": \"(closeOverlay?: boolean) => Promise<void>\",\n                    \"parameters\": [{\n                            \"name\": \"closeOverlay\",\n                            \"type\": \"boolean\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Emits the ionCancel event and\\noptionally closes the popover\\nor modal that the datetime was\\npresented in.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"formatOptions\",\n                \"methodName\": \"formatOptionsChanged\"\n            }, {\n                \"propName\": \"disabled\",\n                \"methodName\": \"disabledChanged\"\n            }, {\n                \"propName\": \"min\",\n                \"methodName\": \"minChanged\"\n            }, {\n                \"propName\": \"max\",\n                \"methodName\": \"maxChanged\"\n            }, {\n                \"propName\": \"presentation\",\n                \"methodName\": \"presentationChanged\"\n            }, {\n                \"propName\": \"yearValues\",\n                \"methodName\": \"yearValuesChanged\"\n            }, {\n                \"propName\": \"monthValues\",\n                \"methodName\": \"monthValuesChanged\"\n            }, {\n                \"propName\": \"dayValues\",\n                \"methodName\": \"dayValuesChanged\"\n            }, {\n                \"propName\": \"hourValues\",\n                \"methodName\": \"hourValuesChanged\"\n            }, {\n                \"propName\": \"minuteValues\",\n                \"methodName\": \"minuteValuesChanged\"\n            }, {\n                \"propName\": \"value\",\n                \"methodName\": \"valueChanged\"\n            }];\n    }\n}\nlet datetimeIds = 0;\nconst CANCEL_ROLE = 'datetime-cancel';\nconst CONFIRM_ROLE = 'datetime-confirm';\nconst WHEEL_ITEM_PART = 'wheel-item';\nconst WHEEL_ITEM_ACTIVE_PART = `active`;\n"],"mappings":"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"}