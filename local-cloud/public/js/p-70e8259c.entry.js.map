{"version":3,"names":["cardIosCss","IonCardIosStyle0","cardMdCss","IonCardMdStyle0","Card","constructor","hostRef","this","inheritedAriaAttributes","color","undefined","button","type","disabled","download","href","rel","routerDirection","routerAnimation","target","componentWillLoad","inheritAttributes","el","isClickable","renderCard","mode","clickable","h","TagType","attrs","Object","assign","class","part","onClick","ev","openURL","render","getIonMode","Host","key","createColorClasses","cardContentIosCss","IonCardContentIosStyle0","cardContentMdCss","IonCardContentMdStyle0","CardContent","cardHeaderIosCss","IonCardHeaderIosStyle0","cardHeaderMdCss","IonCardHeaderMdStyle0","CardHeader","translucent","cardSubtitleIosCss","IonCardSubtitleIosStyle0","cardSubtitleMdCss","IonCardSubtitleMdStyle0","CardSubtitle","role","cardTitleIosCss","IonCardTitleIosStyle0","cardTitleMdCss","IonCardTitleMdStyle0","CardTitle","getResizeContainer","resizeMode","doc","KeyboardResize","None","ionApp","querySelector","body","getResizeContainerHeight","containerElement","clientHeight","createKeyboardController","async","keyboardChangeCallback","keyboardWillShowHandler","keyboardWillHideHandler","keyboardVisible","initialResizeContainerHeight","init","resizeOptions","Keyboard","getResizeMode","fireChangeCallback","win","addEventListener","state","createResizePromiseIfNeeded","Promise","resolve","callback","ro","disconnect","ResizeObserver","observe","destroy","removeEventListener","isKeyboardVisible","handleFooterFade","scrollEl","baseEl","readTask","scrollTop","maxScroll","scrollHeight","fadeDuration","fadeStart","distanceToStart","scale","clamp","writeTask","style","setProperty","toString","footerIosCss","IonFooterIosStyle0","footerMdCss","IonFooterMdStyle0","Footer","keyboardCtrl","checkCollapsibleFooter","collapse","hasFade","destroyCollapsibleFooter","pageEl","closest","contentEl","findIonContent","printIonContentErrorMsg","setupFadeFooter","getScrollElement","contentScrollCallback","componentDidLoad","componentDidUpdate","connectedCallback","keyboardOpen","waitForResize","disconnectedCallback","tabs","tabBar","slot","menuIosCss","IonMenuIosStyle0","menuMdCss","IonMenuMdStyle0","iosEasing","mdEasing","iosEasingReverse","mdEasingReverse","Menu","lastOnEnd","blocker","GESTURE_CONTROLLER","createBlocker","disableScroll","didLoad","operationCancelled","isAnimating","_isOpen","inheritedAttributes","handleFocus","lastOverlay","getPresentedOverlay","document","contains","trapKeyboardFocus","isPaneVisible","isEndSide","contentId","menuId","side","swipeGesture","maxEdgeStart","typeChanged","oldType","classList","remove","add","removeAttribute","menuInnerEl","animation","disabledChanged","updateState","ionMenuChange","emit","open","sideChanged","isEnd","swipeGestureChanged","customElements","whenDefined","config","get","content","getElementById","console","error","menuController","_register","menuChanged","gesture","import","createGesture","gestureName","gesturePriority","threshold","blurOnStart","canStart","onWillStart","onStart","onMove","onEnd","inheritAriaAttributes","splitPane","isVisible","close","_unregister","onSplitPaneChanged","closestSplitPane","detail","visible","onBackdropClick","timeStamp","shouldClose","composedPath","includes","preventDefault","stopPropagation","onKeydown","isOpen","isActive","_isActive","animated","setOpen","toggle","shouldOpen","_setOpen","lastFocus","focusFirstDescendant","activeElement","focusLastDescendant","beforeAnimation","loadAnimation","startAnimation","afterAnimation","width","offsetWidth","_createAnimation","getBoolean","duration","fill","isReversed","easing","easingReverse","ani","direction","play","sync","getDirection","canSwipe","isModalPresented","_getOpenSync","checkEdgeSide","window","currentX","assert","progressStart","delta","computeDelta","deltaX","stepValue","progressStep","velocity","velocityX","z","shouldCompleteRight","shouldCompleteLeft","shouldComplete","currentTime","newStepValue","adjustedStepValue","getTimeGivenProgression","playTo","onFinish","oneTimeCallback","progressEnd","SHOW_MENU","setAttribute","backdropEl","SHOW_BACKDROP","MENU_CONTENT_OPEN","block","ionWillOpen","ionWillClose","_a","unblock","ionDidOpen","focusedMenu","focus","stop","ionDidClose","enable","onKeyDown","shouldUseCloseWatcher","hostContext","ref","tappable","Math","max","posX","innerWidth","updateVisibility","menu","menuEl","menuButtonIosCss","IonMenuButtonIosStyle0","menuButtonMdCss","IonMenuButtonMdStyle0","MenuButton","autoHide","visibilityChanged","menuIcon","menuOutline","menuSharp","hidden","ariaLabel","icon","lazy","menuToggleCss","IonMenuToggleStyle0","MenuToggle","progressBarIosCss","IonProgressBarIosStyle0","progressBarMdCss","IonProgressBarMdStyle0","ProgressBar","reversed","value","buffer","paused","progressSolid","dir","renderIndeterminate","renderProgress","finalValue","finalBuffer","transform","selectIosCss","IonSelectIosStyle0","selectMdCss","IonSelectMdStyle0","Select","inputId","selectIds","closestSlot","setFocus","onFocus","ionFocus","onBlur","ionBlur","isExpanded","cancelText","compareWith","interface","interfaceOptions","justify","label","labelPlacement","multiple","name","okText","placeholder","selectedText","toggleIcon","expandedIcon","shape","styleChanged","emitStyle","setValue","ionChange","notchController","createNotchController","notchSpacerEl","labelSlot","updateOverlayOptions","mutationO","watchForOptions","forceUpdate","event","overlay","createOverlay","onDidDismiss","then","ionDismiss","present","indexOfSelected","childOpts","map","o","indexOf","selectedItem","focusVisibleElement","interactiveEl","firstEnabledOption","selectInterface","warn","openActionSheet","openPopover","openAlert","buttons","createActionSheetButtons","popover","options","createPopoverOptions","inputType","inputs","createAlertInputs","data","selectValue","actionSheetButtons","option","getOptionValue","copyClasses","Array","from","filter","cls","join","optClass","OPTION_CLASS","isOptionSelected","text","textContent","cssClass","handler","push","ionCancel","alertInputs","checked","popoverOptions","selected","showBackdrop","size","hasFloatingOrStackedLabel","ionShadowTarget","nativeWrapperEl","popoverOpts","alignment","component","componentProps","header","subHeader","message","popoverController","create","actionSheetOpts","actionSheetController","alertOpts","labelText","selectedValues","alertController","dismiss","hasValue","getText","querySelectorAll","generateText","focusEl","ionStyle","renderLabel","hasLabel","componentDidRender","calculateNotchWidth","renderLabelContainer","hasOutlineFill","renderSelectText","displayValue","addPlaceholderClass","selectText","selectTextClasses","textPart","renderSelectIcon","defaultIcon","chevronExpand","caretDownSharp","definedLabel","renderedLabel","renderListbox","id","justifyEnabled","rtl","isRTL","inItem","shouldRenderHighlight","hasStartEndSlots","renderHiddenInput","parseValue","labelShouldFloat","isArray","opts","v","textForValue","opt","selectOpt","find","compareOptions","selectOptionCss","IonSelectOptionStyle0","SelectOption","selectOptionIds","splitPaneIosCss","IonSplitPaneIosStyle0","splitPaneMdCss","IonSplitPaneMdStyle0","SPLIT_PANE_MAIN","SPLIT_PANE_SIDE","QUERY","xs","sm","md","lg","xl","never","SplitPane","when","visibleChanged","ionSplitPaneVisible","styleMainElement","rmL","query","mediaQuery","length","q","matches","mediaList","matchMedia","addListener","removeListener","children","nu","childElementCount","foundMain","i","child","isMain","setPaneClass","toAdd","toRemove","tabCss","IonTabStyle0","Tab","loaded","active","delegate","tab","setActive","prepareLazyLoaded","changeActive","attachComponent","e","tabBarIosCss","IonTabBarIosStyle0","tabBarMdCss","IonTabBarMdStyle0","TabBar","selectedTab","selectedTabChanged","ionTabBarChanged","ionTabBarLoaded","shouldHide","getAttribute","tabButtonIosCss","IonTabButtonIosStyle0","tabButtonMdCss","IonTabButtonMdStyle0","TabButton","onKeyUp","selectTab","layout","onTabBarChanged","dispatchedFrom","parent","parentElement","ionTabButtonClick","hasIcon","onKeyup","tabindex","tabsCss","IonTabsStyle0","Tabs","transitioning","onTabClicked","useRouter","router","select","ionNavWillLoad","componentWillRender","getTab","shouldSwitch","notifyRouter","tabSwitch","getSelected","setRouteId","changed","element","markVisible","getRouteId","tabId","reject","leavingTab","ionTabsWillChange","ionTabsDidChange","navChanged","onIonTabButtonClick","tabEl","t","textCss","IonTextStyle0","Text"],"sources":["node_modules/@ionic/core/dist/collection/components/card/card.ios.css?tag=ion-card&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/card/card.md.css?tag=ion-card&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/card/card.js","node_modules/@ionic/core/dist/collection/components/card-content/card-content.ios.css?tag=ion-card-content&mode=ios","node_modules/@ionic/core/dist/collection/components/card-content/card-content.md.css?tag=ion-card-content&mode=md","node_modules/@ionic/core/dist/collection/components/card-content/card-content.js","node_modules/@ionic/core/dist/collection/components/card-header/card-header.ios.css?tag=ion-card-header&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/card-header/card-header.md.css?tag=ion-card-header&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/card-header/card-header.js","node_modules/@ionic/core/dist/collection/components/card-subtitle/card-subtitle.ios.css?tag=ion-card-subtitle&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/card-subtitle/card-subtitle.md.css?tag=ion-card-subtitle&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/card-subtitle/card-subtitle.js","node_modules/@ionic/core/dist/collection/components/card-title/card-title.ios.css?tag=ion-card-title&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/card-title/card-title.md.css?tag=ion-card-title&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/card-title/card-title.js","node_modules/@ionic/core/dist/collection/utils/keyboard/keyboard-controller.js","node_modules/@ionic/core/dist/collection/components/footer/footer.utils.js","node_modules/@ionic/core/dist/collection/components/footer/footer.ios.css?tag=ion-footer&mode=ios","node_modules/@ionic/core/dist/collection/components/footer/footer.md.css?tag=ion-footer&mode=md","node_modules/@ionic/core/dist/collection/components/footer/footer.js","node_modules/@ionic/core/dist/collection/components/menu/menu.ios.css?tag=ion-menu&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/menu/menu.md.css?tag=ion-menu&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/menu/menu.js","node_modules/@ionic/core/dist/collection/components/menu-toggle/menu-toggle-util.js","node_modules/@ionic/core/dist/collection/components/menu-button/menu-button.ios.css?tag=ion-menu-button&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/menu-button/menu-button.md.css?tag=ion-menu-button&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/menu-button/menu-button.js","node_modules/@ionic/core/dist/collection/components/menu-toggle/menu-toggle.css?tag=ion-menu-toggle&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/menu-toggle/menu-toggle.js","node_modules/@ionic/core/dist/collection/components/progress-bar/progress-bar.ios.css?tag=ion-progress-bar&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/progress-bar/progress-bar.md.css?tag=ion-progress-bar&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/progress-bar/progress-bar.js","node_modules/@ionic/core/dist/collection/components/select/select.ios.css?tag=ion-select&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/select/select.md.css?tag=ion-select&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/select/select.js","node_modules/@ionic/core/dist/collection/components/select-option/select-option.css?tag=ion-select-option&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/select-option/select-option.js","node_modules/@ionic/core/dist/collection/components/split-pane/split-pane.ios.css?tag=ion-split-pane&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/split-pane/split-pane.md.css?tag=ion-split-pane&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/split-pane/split-pane.js","node_modules/@ionic/core/dist/collection/components/tab/tab.css?tag=ion-tab&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/tab/tab.js","node_modules/@ionic/core/dist/collection/components/tab-bar/tab-bar.ios.css?tag=ion-tab-bar&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/tab-bar/tab-bar.md.css?tag=ion-tab-bar&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/tab-bar/tab-bar.js","node_modules/@ionic/core/dist/collection/components/tab-button/tab-button.ios.css?tag=ion-tab-button&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/tab-button/tab-button.md.css?tag=ion-tab-button&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/tab-button/tab-button.js","node_modules/@ionic/core/dist/collection/components/tabs/tabs.css?tag=ion-tabs&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/tabs/tabs.js","node_modules/@ionic/core/dist/collection/components/text/text.css?tag=ion-text&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/text/text.js"],"sourcesContent":["/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the card\n   * @prop --color: Color of the card\n   */\n  --ion-safe-area-left: 0px;\n  --ion-safe-area-right: 0px;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: block;\n  position: relative;\n  background: var(--background);\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  contain: content;\n  overflow: hidden;\n}\n\n:host(.ion-color) {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n:host(.card-disabled) {\n  cursor: default;\n  opacity: 0.3;\n  pointer-events: none;\n}\n\n.card-native {\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  display: block;\n  width: 100%;\n  min-height: var(--min-height);\n  transition: var(--transition);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  outline: none;\n  background: inherit;\n}\n\n.card-native::-moz-focus-inner {\n  border: 0;\n}\n\nbutton, a {\n  cursor: pointer;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: var(--ion-card-background, var(--ion-item-background, var(--ion-background-color, #fff)));\n  --color: var(--ion-card-color, var(--ion-item-color, var(--ion-color-step-600, var(--ion-text-color-step-400, #666666))));\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 24px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  transition: transform 500ms cubic-bezier(0.12, 0.72, 0.29, 1);\n  font-size: 0.875rem;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.12);\n}\n\n:host(.ion-activated) {\n  transform: scale3d(0.97, 0.97, 1);\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the card\n   * @prop --color: Color of the card\n   */\n  --ion-safe-area-left: 0px;\n  --ion-safe-area-right: 0px;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: block;\n  position: relative;\n  background: var(--background);\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  contain: content;\n  overflow: hidden;\n}\n\n:host(.ion-color) {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n:host(.card-disabled) {\n  cursor: default;\n  opacity: 0.3;\n  pointer-events: none;\n}\n\n.card-native {\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  display: block;\n  width: 100%;\n  min-height: var(--min-height);\n  transition: var(--transition);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  outline: none;\n  background: inherit;\n}\n\n.card-native::-moz-focus-inner {\n  border: 0;\n}\n\nbutton, a {\n  cursor: pointer;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: var(--ion-card-background, var(--ion-item-background, var(--ion-background-color, #fff)));\n  --color: var(--ion-card-color, var(--ion-item-color, var(--ion-color-step-550, var(--ion-text-color-step-450, #737373))));\n  -webkit-margin-start: 10px;\n  margin-inline-start: 10px;\n  -webkit-margin-end: 10px;\n  margin-inline-end: 10px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  border-radius: 4px;\n  font-size: 0.875rem;\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { inheritAttributes } from \"../../utils/helpers\";\nimport { createColorClasses, openURL } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @part native - The native HTML button, anchor, or div element that wraps all child elements.\n */\nexport class Card {\n    constructor() {\n        this.inheritedAriaAttributes = {};\n        this.color = undefined;\n        this.button = false;\n        this.type = 'button';\n        this.disabled = false;\n        this.download = undefined;\n        this.href = undefined;\n        this.rel = undefined;\n        this.routerDirection = 'forward';\n        this.routerAnimation = undefined;\n        this.target = undefined;\n    }\n    componentWillLoad() {\n        this.inheritedAriaAttributes = inheritAttributes(this.el, ['aria-label']);\n    }\n    isClickable() {\n        return this.href !== undefined || this.button;\n    }\n    renderCard(mode) {\n        const clickable = this.isClickable();\n        if (!clickable) {\n            return [h(\"slot\", null)];\n        }\n        const { href, routerAnimation, routerDirection, inheritedAriaAttributes } = this;\n        const TagType = clickable ? (href === undefined ? 'button' : 'a') : 'div';\n        const attrs = TagType === 'button'\n            ? { type: this.type }\n            : {\n                download: this.download,\n                href: this.href,\n                rel: this.rel,\n                target: this.target,\n            };\n        return (h(TagType, Object.assign({}, attrs, inheritedAriaAttributes, { class: \"card-native\", part: \"native\", disabled: this.disabled, onClick: (ev) => openURL(href, ev, routerDirection, routerAnimation) }), h(\"slot\", null), clickable && mode === 'md' && h(\"ion-ripple-effect\", null)));\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: '8584300522f382ee8891c039d71da82533dfa36a', class: createColorClasses(this.color, {\n                [mode]: true,\n                'card-disabled': this.disabled,\n                'ion-activatable': this.isClickable(),\n            }) }, this.renderCard(mode)));\n    }\n    static get is() { return \"ion-card\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"card.ios.scss\"],\n            \"md\": [\"card.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"card.ios.css\"],\n            \"md\": [\"card.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"button\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, a button tag will be rendered and the card will be tappable.\"\n                },\n                \"attribute\": \"button\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"type\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'submit' | 'reset' | 'button'\",\n                    \"resolved\": \"\\\"button\\\" | \\\"reset\\\" | \\\"submit\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The type of the button. Only used when an `onclick` or `button` property is present.\"\n                },\n                \"attribute\": \"type\",\n                \"reflect\": false,\n                \"defaultValue\": \"'button'\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the card.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"download\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"This attribute instructs browsers to download a URL instead of navigating to\\nit, so the user will be prompted to save it as a local file. If the attribute\\nhas a value, it is used as the pre-filled file name in the Save prompt\\n(the user can still change the file name if they want).\"\n                },\n                \"attribute\": \"download\",\n                \"reflect\": false\n            },\n            \"href\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Contains a URL or a URL fragment that the hyperlink points to.\\nIf this property is set, an anchor tag will be rendered.\"\n                },\n                \"attribute\": \"href\",\n                \"reflect\": false\n            },\n            \"rel\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the relationship of the target object to the link object.\\nThe value is a space-separated list of [link types](https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types).\"\n                },\n                \"attribute\": \"rel\",\n                \"reflect\": false\n            },\n            \"routerDirection\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"RouterDirection\",\n                    \"resolved\": \"\\\"back\\\" | \\\"forward\\\" | \\\"root\\\"\",\n                    \"references\": {\n                        \"RouterDirection\": {\n                            \"location\": \"import\",\n                            \"path\": \"../router/utils/interface\",\n                            \"id\": \"src/components/router/utils/interface.ts::RouterDirection\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When using a router, it specifies the transition direction when navigating to\\nanother page using `href`.\"\n                },\n                \"attribute\": \"router-direction\",\n                \"reflect\": false,\n                \"defaultValue\": \"'forward'\"\n            },\n            \"routerAnimation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder | undefined\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When using a router, it specifies the transition animation when navigating to\\nanother page using `href`.\"\n                }\n            },\n            \"target\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies where to display the linked URL.\\nOnly applies when an `href` is provided.\\nSpecial keywords: `\\\"_blank\\\"`, `\\\"_self\\\"`, `\\\"_parent\\\"`, `\\\"_top\\\"`.\"\n                },\n                \"attribute\": \"target\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\nion-card-content {\n  display: block;\n  position: relative;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n.card-content-ios {\n  -webkit-padding-start: 20px;\n  padding-inline-start: 20px;\n  -webkit-padding-end: 20px;\n  padding-inline-end: 20px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  font-size: 1rem;\n  line-height: 1.4;\n}\n.card-content-ios h1 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 2px;\n  font-size: 1.5rem;\n  font-weight: normal;\n}\n.card-content-ios h2 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  font-size: 1rem;\n  font-weight: normal;\n}\n.card-content-ios h3,\n.card-content-ios h4,\n.card-content-ios h5,\n.card-content-ios h6 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  font-size: 0.875rem;\n  font-weight: normal;\n}\n.card-content-ios p {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 2px;\n  font-size: 0.875rem;\n}\n\nion-card-header + .card-content-ios {\n  padding-top: 0;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\nion-card-content {\n  display: block;\n  position: relative;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n.card-content-md {\n  -webkit-padding-start: 16px;\n  padding-inline-start: 16px;\n  -webkit-padding-end: 16px;\n  padding-inline-end: 16px;\n  padding-top: 13px;\n  padding-bottom: 13px;\n  font-size: 0.875rem;\n  line-height: 1.5;\n}\n.card-content-md h1 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 2px;\n  font-size: 1.5rem;\n  font-weight: normal;\n}\n.card-content-md h2 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  font-size: 1rem;\n  font-weight: normal;\n}\n.card-content-md h3,\n.card-content-md h4,\n.card-content-md h5,\n.card-content-md h6 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  font-size: 0.875rem;\n  font-weight: normal;\n}\n.card-content-md p {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 2px;\n  font-size: 0.875rem;\n  font-weight: normal;\n  line-height: 1.5;\n}\n\nion-card-header + .card-content-md {\n  padding-top: 0;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class CardContent {\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: '2a2d0b48aad4b83990a1748fce60e772514eb223', class: {\n                [mode]: true,\n                // Used internally for styling\n                [`card-content-${mode}`]: true,\n            } }));\n    }\n    static get is() { return \"ion-card-content\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"card-content.ios.scss\"],\n            \"md\": [\"card-content.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"card-content.ios.css\"],\n            \"md\": [\"card-content.md.css\"]\n        };\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: transparent;\n  --color: inherit;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  background: var(--background);\n  color: var(--color);\n}\n\n:host(.ion-color) {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  -webkit-padding-start: 20px;\n  padding-inline-start: 20px;\n  -webkit-padding-end: 20px;\n  padding-inline-end: 20px;\n  padding-top: 20px;\n  padding-bottom: 16px;\n  flex-direction: column-reverse;\n}\n\n@supports (backdrop-filter: blur(0)) {\n  :host(.card-header-translucent) {\n    background-color: rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.9);\n    backdrop-filter: saturate(180%) blur(30px);\n  }\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: transparent;\n  --color: inherit;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  background: var(--background);\n  color: var(--color);\n}\n\n:host(.ion-color) {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  -webkit-padding-start: 16px;\n  padding-inline-start: 16px;\n  -webkit-padding-end: 16px;\n  padding-inline-end: 16px;\n  padding-top: 16px;\n  padding-bottom: 16px;\n}\n\n::slotted(ion-card-title:not(:first-child)),\n::slotted(ion-card-subtitle:not(:first-child)) {\n  margin-top: 8px;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { createColorClasses } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class CardHeader {\n    constructor() {\n        this.color = undefined;\n        this.translucent = false;\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: '18d12507ec6e650a72d721e9d0f4128b5e86df1d', class: createColorClasses(this.color, {\n                'card-header-translucent': this.translucent,\n                'ion-inherit-color': true,\n                [mode]: true,\n            }) }, h(\"slot\", { key: '3374c087d8c3f014082787e255432e7a335ef44f' })));\n    }\n    static get is() { return \"ion-card-header\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"card-header.ios.scss\"],\n            \"md\": [\"card-header.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"card-header.ios.css\"],\n            \"md\": [\"card-header.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"translucent\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the card header will be translucent.\\nOnly applies when the mode is `\\\"ios\\\"` and the device supports\\n[`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\"\n                },\n                \"attribute\": \"translucent\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --color: Color of the card subtitle\n   */\n  display: block;\n  position: relative;\n  color: var(--color);\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-base);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --color: var(--ion-color-step-600, var(--ion-text-color-step-400, #666666));\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 4px;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  font-size: 0.75rem;\n  font-weight: 700;\n  letter-spacing: 0.4px;\n  text-transform: uppercase;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --color: Color of the card subtitle\n   */\n  display: block;\n  position: relative;\n  color: var(--color);\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-base);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --color: var(--ion-color-step-550, var(--ion-text-color-step-450, #737373));\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  font-size: 0.875rem;\n  font-weight: 500;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { createColorClasses } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class CardSubtitle {\n    constructor() {\n        this.color = undefined;\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: 'cbcb01bd01cf6de64a0b04fb626e42b07ceb8f53', role: \"heading\", \"aria-level\": \"3\", class: createColorClasses(this.color, {\n                'ion-inherit-color': true,\n                [mode]: true,\n            }) }, h(\"slot\", { key: 'cbcaa73aa5799882c48d6c0aabfb13651bcc91c0' })));\n    }\n    static get is() { return \"ion-card-subtitle\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"card-subtitle.ios.scss\"],\n            \"md\": [\"card-subtitle.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"card-subtitle.ios.css\"],\n            \"md\": [\"card-subtitle.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            }\n        };\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --color: Color of the card title\n   */\n  display: block;\n  position: relative;\n  color: var(--color);\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-base);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --color: var(--ion-text-color, #000);\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  font-size: 1.75rem;\n  font-weight: 700;\n  line-height: 1.2;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --color: Color of the card title\n   */\n  display: block;\n  position: relative;\n  color: var(--color);\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-base);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --color: var(--ion-color-step-850, var(--ion-text-color-step-150, #262626));\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  font-size: 1.25rem;\n  font-weight: 500;\n  line-height: 1.2;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { createColorClasses } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class CardTitle {\n    constructor() {\n        this.color = undefined;\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: 'f904a0ca6489f147d03c9c5f9f2c5549cdb38d1a', role: \"heading\", \"aria-level\": \"2\", class: createColorClasses(this.color, {\n                'ion-inherit-color': true,\n                [mode]: true,\n            }) }, h(\"slot\", { key: 'effb921de4ad8dfbbe318b3f692f4005812da7b1' })));\n    }\n    static get is() { return \"ion-card-title\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"card-title.ios.scss\"],\n            \"md\": [\"card-title.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"card-title.ios.css\"],\n            \"md\": [\"card-title.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            }\n        };\n    }\n}\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { doc, win } from \"../browser/index\";\nimport { Keyboard, KeyboardResize } from \"../native/keyboard\";\n/**\n * The element that resizes when the keyboard opens\n * is going to depend on the resize mode\n * which is why we check that here.\n */\nconst getResizeContainer = (resizeMode) => {\n    /**\n     * If doc is undefined then we are\n     * in an SSR environment, so the keyboard\n     * adjustment does not apply.\n     * If the webview does not resize then there\n     * is no container to resize.\n     */\n    if (doc === undefined || resizeMode === KeyboardResize.None || resizeMode === undefined) {\n        return null;\n    }\n    /**\n     * The three remaining resize modes: Native, Ionic, and Body\n     * all cause `ion-app` to resize, so we can listen for changes\n     * on that. In the event `ion-app` is not available then\n     * we can fall back to `body`.\n     */\n    const ionApp = doc.querySelector('ion-app');\n    return ionApp !== null && ionApp !== void 0 ? ionApp : doc.body;\n};\n/**\n * Get the height of ion-app or body.\n * This is used for determining if the webview\n * has resized before the keyboard closed.\n * */\nconst getResizeContainerHeight = (resizeMode) => {\n    const containerElement = getResizeContainer(resizeMode);\n    return containerElement === null ? 0 : containerElement.clientHeight;\n};\n/**\n * Creates a controller that tracks and reacts to opening or closing the keyboard.\n *\n * @internal\n * @param keyboardChangeCallback A function to call when the keyboard opens or closes.\n */\nexport const createKeyboardController = async (keyboardChangeCallback) => {\n    let keyboardWillShowHandler;\n    let keyboardWillHideHandler;\n    let keyboardVisible;\n    /**\n     * This lets us determine if the webview content\n     * has resized as a result of the keyboard.\n     */\n    let initialResizeContainerHeight;\n    const init = async () => {\n        const resizeOptions = await Keyboard.getResizeMode();\n        const resizeMode = resizeOptions === undefined ? undefined : resizeOptions.mode;\n        keyboardWillShowHandler = () => {\n            /**\n             * We need to compute initialResizeContainerHeight right before\n             * the keyboard opens to guarantee the resize container is visible.\n             * The resize container may not be visible if we compute this\n             * as soon as the keyboard controller is created.\n             * We should only need to do this once to avoid additional clientHeight\n             * computations.\n             */\n            if (initialResizeContainerHeight === undefined) {\n                initialResizeContainerHeight = getResizeContainerHeight(resizeMode);\n            }\n            keyboardVisible = true;\n            fireChangeCallback(keyboardVisible, resizeMode);\n        };\n        keyboardWillHideHandler = () => {\n            keyboardVisible = false;\n            fireChangeCallback(keyboardVisible, resizeMode);\n        };\n        win === null || win === void 0 ? void 0 : win.addEventListener('keyboardWillShow', keyboardWillShowHandler);\n        win === null || win === void 0 ? void 0 : win.addEventListener('keyboardWillHide', keyboardWillHideHandler);\n    };\n    const fireChangeCallback = (state, resizeMode) => {\n        if (keyboardChangeCallback) {\n            keyboardChangeCallback(state, createResizePromiseIfNeeded(resizeMode));\n        }\n    };\n    /**\n     * Code responding to keyboard lifecycles may need\n     * to show/hide content once the webview has\n     * resized as a result of the keyboard showing/hiding.\n     * createResizePromiseIfNeeded provides a way for code to wait for the\n     * resize event that was triggered as a result of the keyboard.\n     */\n    const createResizePromiseIfNeeded = (resizeMode) => {\n        if (\n        /**\n         * If we are in an SSR environment then there is\n         * no window to resize. Additionally, if there\n         * is no resize mode or the resize mode is \"None\"\n         * then initialResizeContainerHeight will be 0\n         */\n        initialResizeContainerHeight === 0 ||\n            /**\n             * If the keyboard is closed before the webview resizes initially\n             * then the webview will never resize.\n             */\n            initialResizeContainerHeight === getResizeContainerHeight(resizeMode)) {\n            return;\n        }\n        /**\n         * Get the resize container so we can\n         * attach the ResizeObserver below to\n         * the correct element.\n         */\n        const containerElement = getResizeContainer(resizeMode);\n        if (containerElement === null) {\n            return;\n        }\n        /**\n         * Some part of the web content should resize,\n         * and we need to listen for a resize.\n         */\n        return new Promise((resolve) => {\n            const callback = () => {\n                /**\n                 * As per the spec, the ResizeObserver\n                 * will fire when observation starts if\n                 * the observed element is rendered and does not\n                 * have a size of 0 x 0. However, the watched element\n                 * may or may not have resized by the time this first\n                 * callback is fired. As a result, we need to check\n                 * the dimensions of the element.\n                 *\n                 * https://www.w3.org/TR/resize-observer/#intro\n                 */\n                if (containerElement.clientHeight === initialResizeContainerHeight) {\n                    /**\n                     * The resize happened, so stop listening\n                     * for resize on this element.\n                     */\n                    ro.disconnect();\n                    resolve();\n                }\n            };\n            /**\n             * In Capacitor there can be delay between when the window\n             * resizes and when the container element resizes, so we cannot\n             * rely on a 'resize' event listener on the window.\n             * Instead, we need to determine when the container\n             * element resizes using a ResizeObserver.\n             */\n            const ro = new ResizeObserver(callback);\n            ro.observe(containerElement);\n        });\n    };\n    const destroy = () => {\n        win === null || win === void 0 ? void 0 : win.removeEventListener('keyboardWillShow', keyboardWillShowHandler);\n        win === null || win === void 0 ? void 0 : win.removeEventListener('keyboardWillHide', keyboardWillHideHandler);\n        keyboardWillShowHandler = keyboardWillHideHandler = undefined;\n    };\n    const isKeyboardVisible = () => keyboardVisible;\n    await init();\n    return { init, destroy, isKeyboardVisible };\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { readTask, writeTask } from \"@stencil/core\";\nimport { clamp } from \"../../utils/helpers\";\nexport const handleFooterFade = (scrollEl, baseEl) => {\n    readTask(() => {\n        const scrollTop = scrollEl.scrollTop;\n        const maxScroll = scrollEl.scrollHeight - scrollEl.clientHeight;\n        /**\n         * Toolbar background will fade\n         * out over fadeDuration in pixels.\n         */\n        const fadeDuration = 10;\n        /**\n         * Begin fading out maxScroll - 30px\n         * from the bottom of the content.\n         * Also determine how close we are\n         * to starting the fade. If we are\n         * before the starting point, the\n         * scale value will get clamped to 0.\n         * If we are after the maxScroll (rubber\n         * band scrolling), the scale value will\n         * get clamped to 1.\n         */\n        const fadeStart = maxScroll - fadeDuration;\n        const distanceToStart = scrollTop - fadeStart;\n        const scale = clamp(0, 1 - distanceToStart / fadeDuration, 1);\n        writeTask(() => {\n            baseEl.style.setProperty('--opacity-scale', scale.toString());\n        });\n    });\n};\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\nion-footer {\n  display: block;\n  position: relative;\n  order: 1;\n  width: 100%;\n  z-index: 10;\n}\n\nion-footer.footer-toolbar-padding ion-toolbar:last-of-type {\n  padding-bottom: var(--ion-safe-area-bottom, 0);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n.footer-ios ion-toolbar:first-of-type {\n  --border-width: 0.55px 0 0;\n}\n\n@supports (backdrop-filter: blur(0)) {\n  .footer-background {\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    position: absolute;\n    backdrop-filter: saturate(180%) blur(20px);\n  }\n  .footer-translucent-ios ion-toolbar {\n    --opacity: .8;\n  }\n}\n.footer-ios.ion-no-border ion-toolbar:first-of-type {\n  --border-width: 0;\n}\n\n.footer-collapse-fade ion-toolbar {\n  --opacity-scale: inherit;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\nion-footer {\n  display: block;\n  position: relative;\n  order: 1;\n  width: 100%;\n  z-index: 10;\n}\n\nion-footer.footer-toolbar-padding ion-toolbar:last-of-type {\n  padding-bottom: var(--ion-safe-area-bottom, 0);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n.footer-md {\n  box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12);\n}\n\n.footer-md.ion-no-border {\n  box-shadow: none;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { findIonContent, getScrollElement, printIonContentErrorMsg } from \"../../utils/content/index\";\nimport { createKeyboardController } from \"../../utils/keyboard/keyboard-controller\";\nimport { getIonMode } from \"../../global/ionic-global\";\nimport { handleFooterFade } from \"./footer.utils\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class Footer {\n    constructor() {\n        this.keyboardCtrl = null;\n        this.checkCollapsibleFooter = () => {\n            const mode = getIonMode(this);\n            if (mode !== 'ios') {\n                return;\n            }\n            const { collapse } = this;\n            const hasFade = collapse === 'fade';\n            this.destroyCollapsibleFooter();\n            if (hasFade) {\n                const pageEl = this.el.closest('ion-app,ion-page,.ion-page,page-inner');\n                const contentEl = pageEl ? findIonContent(pageEl) : null;\n                if (!contentEl) {\n                    printIonContentErrorMsg(this.el);\n                    return;\n                }\n                this.setupFadeFooter(contentEl);\n            }\n        };\n        this.setupFadeFooter = async (contentEl) => {\n            const scrollEl = (this.scrollEl = await getScrollElement(contentEl));\n            /**\n             * Handle fading of toolbars on scroll\n             */\n            this.contentScrollCallback = () => {\n                handleFooterFade(scrollEl, this.el);\n            };\n            scrollEl.addEventListener('scroll', this.contentScrollCallback);\n            handleFooterFade(scrollEl, this.el);\n        };\n        this.keyboardVisible = false;\n        this.collapse = undefined;\n        this.translucent = false;\n    }\n    componentDidLoad() {\n        this.checkCollapsibleFooter();\n    }\n    componentDidUpdate() {\n        this.checkCollapsibleFooter();\n    }\n    async connectedCallback() {\n        this.keyboardCtrl = await createKeyboardController(async (keyboardOpen, waitForResize) => {\n            /**\n             * If the keyboard is hiding, then we need to wait\n             * for the webview to resize. Otherwise, the footer\n             * will flicker before the webview resizes.\n             */\n            if (keyboardOpen === false && waitForResize !== undefined) {\n                await waitForResize;\n            }\n            this.keyboardVisible = keyboardOpen; // trigger re-render by updating state\n        });\n    }\n    disconnectedCallback() {\n        if (this.keyboardCtrl) {\n            this.keyboardCtrl.destroy();\n        }\n    }\n    destroyCollapsibleFooter() {\n        if (this.scrollEl && this.contentScrollCallback) {\n            this.scrollEl.removeEventListener('scroll', this.contentScrollCallback);\n            this.contentScrollCallback = undefined;\n        }\n    }\n    render() {\n        const { translucent, collapse } = this;\n        const mode = getIonMode(this);\n        const tabs = this.el.closest('ion-tabs');\n        const tabBar = tabs === null || tabs === void 0 ? void 0 : tabs.querySelector(':scope > ion-tab-bar');\n        return (h(Host, { key: '5da19dc38ba73e1ddfd1bef3ebd485105d77c751', role: \"contentinfo\", class: {\n                [mode]: true,\n                // Used internally for styling\n                [`footer-${mode}`]: true,\n                [`footer-translucent`]: translucent,\n                [`footer-translucent-${mode}`]: translucent,\n                ['footer-toolbar-padding']: !this.keyboardVisible && (!tabBar || tabBar.slot !== 'bottom'),\n                [`footer-collapse-${collapse}`]: collapse !== undefined,\n            } }, mode === 'ios' && translucent && h(\"div\", { key: 'fafad08090a33d8c4e8a5b63d61929dcb89aab47', class: \"footer-background\" }), h(\"slot\", { key: 'e0a443d346afa55e4317c0bc1263fdbe3c619559' })));\n    }\n    static get is() { return \"ion-footer\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"footer.ios.scss\"],\n            \"md\": [\"footer.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"footer.ios.css\"],\n            \"md\": [\"footer.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"collapse\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'fade'\",\n                    \"resolved\": \"\\\"fade\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Describes the scroll effect that will be applied to the footer.\\nOnly applies in iOS mode.\"\n                },\n                \"attribute\": \"collapse\",\n                \"reflect\": false\n            },\n            \"translucent\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the footer will be translucent.\\nOnly applies when the mode is `\\\"ios\\\"` and the device supports\\n[`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\\n\\nNote: In order to scroll content behind the footer, the `fullscreen`\\nattribute needs to be set on the content.\"\n                },\n                \"attribute\": \"translucent\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"keyboardVisible\": {}\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the menu\n   *\n   * @prop --min-width: Minimum width of the menu\n   * @prop --width: Width of the menu\n   * @prop --max-width: Maximum width of the menu\n   *\n   * @prop --min-height: Minimum height of the menu\n   * @prop --height: Height of the menu\n   * @prop --max-height: Maximum height of the menu\n   */\n  --width: 304px;\n  --min-width: auto;\n  --max-width: auto;\n  --height: 100%;\n  --min-height: auto;\n  --max-height: auto;\n  --background: var(--ion-background-color, #fff);\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: none;\n  position: absolute;\n  contain: strict;\n}\n\n:host(.show-menu) {\n  display: block;\n}\n\n.menu-inner {\n  transform: translateX(-9999px);\n  display: flex;\n  position: absolute;\n  flex-direction: column;\n  justify-content: space-between;\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  background: var(--background);\n  contain: strict;\n}\n\n:host(.menu-side-start) .menu-inner {\n  /**\n    * Menu does not cover the whole screen so we need to set the safe area for the\n    * side that touches the screen edge only. Since safe area is not logical, it\n    * needs to be applied to the correct side depending on the language direction.\n    * Otherwise, the content will have less space on both sides.\n    *\n    * LTR:\n    * The left side of the menu touches the screen edge. The safe area padding has\n    * already been set in the core styles, so there's no need to set it again.\n    * The right side of the menu is not touching the screen edge. Padding is not\n    * applied to the right side of the menu. A value of 0 is set.\n    */\n  --ion-safe-area-right: 0px;\n  top: 0;\n  bottom: 0;\n}\n:host(.menu-side-start) .menu-inner {\n  inset-inline-start: 0;\n  inset-inline-end: auto;\n}\n\n:host-context([dir=rtl]):host(.menu-side-start) .menu-inner, :host-context([dir=rtl]).menu-side-start .menu-inner {\n  /**\n    * Menu does not cover the whole screen so we need to set the safe area for the\n    * side that touches the screen edge only. Since safe area is not logical, it\n    * needs to be applied to the correct side depending on the language direction.\n    * Otherwise, the content will have less space on both sides.\n    *\n    * RTL:\n    * The right side of the menu touches the screen edge.\n    * The right side needs to revert back to the default value that was set in the core styles, so we unset it here.\n    * This would keep the variable consistent with the core styles.\n    * Additionally, it would continue to allow users to override the variable if they choose to.\n    * The left side of the menu is not touching the screen edge. Padding is not\n    * applied to the left side of the menu. A value of 0 is set.\n    */\n  --ion-safe-area-right: unset;\n  --ion-safe-area-left: 0px;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.menu-side-start:dir(rtl)) .menu-inner {\n    /**\n      * Menu does not cover the whole screen so we need to set the safe area for the\n      * side that touches the screen edge only. Since safe area is not logical, it\n      * needs to be applied to the correct side depending on the language direction.\n      * Otherwise, the content will have less space on both sides.\n      *\n      * RTL:\n      * The right side of the menu touches the screen edge.\n      * The right side needs to revert back to the default value that was set in the core styles, so we unset it here.\n      * This would keep the variable consistent with the core styles.\n      * Additionally, it would continue to allow users to override the variable if they choose to.\n      * The left side of the menu is not touching the screen edge. Padding is not\n      * applied to the left side of the menu. A value of 0 is set.\n      */\n    --ion-safe-area-right: unset;\n    --ion-safe-area-left: 0px;\n  }\n}\n\n:host(.menu-side-end) .menu-inner {\n  /**\n    * Menu does not cover the whole screen so we need to set the safe area for the\n    * side that touches the screen edge only. Since safe area is not logical, it\n    * needs to be applied to the correct side depending on the language direction.\n    * Otherwise, the content will have less space on both sides.\n    *\n    * LTR:\n    * The right side of the menu touches the screen edge. The safe area padding has\n    * already been set in the core styles, so there's no need to set it again.\n    * The left side of the menu is not touching the screen edge. Padding is not\n    * applied to the left side of the menu. A value of 0 is set.\n    */\n  --ion-safe-area-left: 0px;\n  top: 0;\n  bottom: 0;\n}\n:host(.menu-side-end) .menu-inner {\n  inset-inline-start: auto;\n  inset-inline-end: 0;\n}\n\n:host-context([dir=rtl]):host(.menu-side-end) .menu-inner, :host-context([dir=rtl]).menu-side-end .menu-inner {\n  /**\n    * Menu does not cover the whole screen so we need to set the safe area for the\n    * side that touches the screen edge only. Since safe area is not logical, it\n    * needs to be applied to the correct side depending on the language direction.\n    * Otherwise, the content will have less space on both sides.\n    *\n    * RTL:\n    * The left side of the menu touches the screen edge.\n    * The left side needs to revert back to the default value that was set in the core styles, so we unset it here.\n    * This would keep the variable consistent with the core styles.\n    * Additionally, it would continue to allow users to override the variable if they choose to.\n    * The right side of the menu is not touching the screen edge. Padding is not\n    * applied to the right side of the menu. A value of 0 is set.\n    */\n  --ion-safe-area-left: unset;\n  --ion-safe-area-right: 0px;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.menu-side-end:dir(rtl)) .menu-inner {\n    /**\n      * Menu does not cover the whole screen so we need to set the safe area for the\n      * side that touches the screen edge only. Since safe area is not logical, it\n      * needs to be applied to the correct side depending on the language direction.\n      * Otherwise, the content will have less space on both sides.\n      *\n      * RTL:\n      * The left side of the menu touches the screen edge.\n      * The left side needs to revert back to the default value that was set in the core styles, so we unset it here.\n      * This would keep the variable consistent with the core styles.\n      * Additionally, it would continue to allow users to override the variable if they choose to.\n      * The right side of the menu is not touching the screen edge. Padding is not\n      * applied to the right side of the menu. A value of 0 is set.\n      */\n    --ion-safe-area-left: unset;\n    --ion-safe-area-right: 0px;\n  }\n}\n\nion-backdrop {\n  display: none;\n  opacity: 0.01;\n  z-index: -1;\n}\n\n@media (max-width: 340px) {\n  .menu-inner {\n    --width: 264px;\n  }\n}\n:host(.menu-type-reveal) {\n  z-index: 0;\n}\n\n:host(.menu-type-reveal.show-menu) .menu-inner {\n  transform: translate3d(0,  0,  0);\n}\n\n:host(.menu-type-overlay) {\n  z-index: 1000;\n}\n\n:host(.menu-type-overlay) .show-backdrop {\n  display: block;\n  cursor: pointer;\n}\n\n/**\n * The split pane styles for menu are defined\n * in the menu stylesheets instead in the split pane\n * stylesheets with ::slotted to allow for menus\n * to be wrapped in custom components.\n * If we used ::slotted to target the menu\n * then menus wrapped in components would never\n * receive these styles because they are not\n * children of the split pane.\n */\n/**\n * Do not pass CSS Variables down on larger\n * screens as we want them to affect the outer\n * `ion-menu` rather than the inner content\n */\n:host(.menu-pane-visible) {\n  flex: 0 1 auto;\n  width: var(--side-width, var(--width));\n  min-width: var(--side-min-width, var(--min-width));\n  max-width: var(--side-max-width, var(--max-width));\n}\n\n:host(.menu-pane-visible.split-pane-side) {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: relative;\n  box-shadow: none;\n  z-index: 0;\n}\n\n:host(.menu-pane-visible.split-pane-side.menu-enabled) {\n  display: flex;\n  flex-shrink: 0;\n}\n\n:host(.menu-pane-visible.split-pane-side) {\n  order: -1;\n}\n\n:host(.menu-pane-visible.split-pane-side[side=end]) {\n  order: 1;\n}\n\n:host(.menu-pane-visible) .menu-inner {\n  left: 0;\n  right: 0;\n  width: auto;\n  transform: none;\n  box-shadow: none;\n}\n\n:host(.menu-pane-visible) ion-backdrop {\n  /* stylelint-disable-next-line declaration-no-important */\n  display: hidden !important;\n}\n\n:host(.menu-pane-visible.split-pane-side) {\n  -webkit-border-start: 0;\n  border-inline-start: 0;\n  -webkit-border-end: var(--border);\n  border-inline-end: var(--border);\n  border-top: 0;\n  border-bottom: 0;\n  min-width: var(--side-min-width);\n  max-width: var(--side-max-width);\n}\n\n:host(.menu-pane-visible.split-pane-side[side=end]) {\n  -webkit-border-start: var(--border);\n  border-inline-start: var(--border);\n  -webkit-border-end: 0;\n  border-inline-end: 0;\n  border-top: 0;\n  border-bottom: 0;\n  min-width: var(--side-min-width);\n  max-width: var(--side-max-width);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host(.menu-type-push) {\n  z-index: 1000;\n}\n\n:host(.menu-type-push) .show-backdrop {\n  display: block;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the menu\n   *\n   * @prop --min-width: Minimum width of the menu\n   * @prop --width: Width of the menu\n   * @prop --max-width: Maximum width of the menu\n   *\n   * @prop --min-height: Minimum height of the menu\n   * @prop --height: Height of the menu\n   * @prop --max-height: Maximum height of the menu\n   */\n  --width: 304px;\n  --min-width: auto;\n  --max-width: auto;\n  --height: 100%;\n  --min-height: auto;\n  --max-height: auto;\n  --background: var(--ion-background-color, #fff);\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: none;\n  position: absolute;\n  contain: strict;\n}\n\n:host(.show-menu) {\n  display: block;\n}\n\n.menu-inner {\n  transform: translateX(-9999px);\n  display: flex;\n  position: absolute;\n  flex-direction: column;\n  justify-content: space-between;\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  background: var(--background);\n  contain: strict;\n}\n\n:host(.menu-side-start) .menu-inner {\n  /**\n    * Menu does not cover the whole screen so we need to set the safe area for the\n    * side that touches the screen edge only. Since safe area is not logical, it\n    * needs to be applied to the correct side depending on the language direction.\n    * Otherwise, the content will have less space on both sides.\n    *\n    * LTR:\n    * The left side of the menu touches the screen edge. The safe area padding has\n    * already been set in the core styles, so there's no need to set it again.\n    * The right side of the menu is not touching the screen edge. Padding is not\n    * applied to the right side of the menu. A value of 0 is set.\n    */\n  --ion-safe-area-right: 0px;\n  top: 0;\n  bottom: 0;\n}\n:host(.menu-side-start) .menu-inner {\n  inset-inline-start: 0;\n  inset-inline-end: auto;\n}\n\n:host-context([dir=rtl]):host(.menu-side-start) .menu-inner, :host-context([dir=rtl]).menu-side-start .menu-inner {\n  /**\n    * Menu does not cover the whole screen so we need to set the safe area for the\n    * side that touches the screen edge only. Since safe area is not logical, it\n    * needs to be applied to the correct side depending on the language direction.\n    * Otherwise, the content will have less space on both sides.\n    *\n    * RTL:\n    * The right side of the menu touches the screen edge.\n    * The right side needs to revert back to the default value that was set in the core styles, so we unset it here.\n    * This would keep the variable consistent with the core styles.\n    * Additionally, it would continue to allow users to override the variable if they choose to.\n    * The left side of the menu is not touching the screen edge. Padding is not\n    * applied to the left side of the menu. A value of 0 is set.\n    */\n  --ion-safe-area-right: unset;\n  --ion-safe-area-left: 0px;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.menu-side-start:dir(rtl)) .menu-inner {\n    /**\n      * Menu does not cover the whole screen so we need to set the safe area for the\n      * side that touches the screen edge only. Since safe area is not logical, it\n      * needs to be applied to the correct side depending on the language direction.\n      * Otherwise, the content will have less space on both sides.\n      *\n      * RTL:\n      * The right side of the menu touches the screen edge.\n      * The right side needs to revert back to the default value that was set in the core styles, so we unset it here.\n      * This would keep the variable consistent with the core styles.\n      * Additionally, it would continue to allow users to override the variable if they choose to.\n      * The left side of the menu is not touching the screen edge. Padding is not\n      * applied to the left side of the menu. A value of 0 is set.\n      */\n    --ion-safe-area-right: unset;\n    --ion-safe-area-left: 0px;\n  }\n}\n\n:host(.menu-side-end) .menu-inner {\n  /**\n    * Menu does not cover the whole screen so we need to set the safe area for the\n    * side that touches the screen edge only. Since safe area is not logical, it\n    * needs to be applied to the correct side depending on the language direction.\n    * Otherwise, the content will have less space on both sides.\n    *\n    * LTR:\n    * The right side of the menu touches the screen edge. The safe area padding has\n    * already been set in the core styles, so there's no need to set it again.\n    * The left side of the menu is not touching the screen edge. Padding is not\n    * applied to the left side of the menu. A value of 0 is set.\n    */\n  --ion-safe-area-left: 0px;\n  top: 0;\n  bottom: 0;\n}\n:host(.menu-side-end) .menu-inner {\n  inset-inline-start: auto;\n  inset-inline-end: 0;\n}\n\n:host-context([dir=rtl]):host(.menu-side-end) .menu-inner, :host-context([dir=rtl]).menu-side-end .menu-inner {\n  /**\n    * Menu does not cover the whole screen so we need to set the safe area for the\n    * side that touches the screen edge only. Since safe area is not logical, it\n    * needs to be applied to the correct side depending on the language direction.\n    * Otherwise, the content will have less space on both sides.\n    *\n    * RTL:\n    * The left side of the menu touches the screen edge.\n    * The left side needs to revert back to the default value that was set in the core styles, so we unset it here.\n    * This would keep the variable consistent with the core styles.\n    * Additionally, it would continue to allow users to override the variable if they choose to.\n    * The right side of the menu is not touching the screen edge. Padding is not\n    * applied to the right side of the menu. A value of 0 is set.\n    */\n  --ion-safe-area-left: unset;\n  --ion-safe-area-right: 0px;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.menu-side-end:dir(rtl)) .menu-inner {\n    /**\n      * Menu does not cover the whole screen so we need to set the safe area for the\n      * side that touches the screen edge only. Since safe area is not logical, it\n      * needs to be applied to the correct side depending on the language direction.\n      * Otherwise, the content will have less space on both sides.\n      *\n      * RTL:\n      * The left side of the menu touches the screen edge.\n      * The left side needs to revert back to the default value that was set in the core styles, so we unset it here.\n      * This would keep the variable consistent with the core styles.\n      * Additionally, it would continue to allow users to override the variable if they choose to.\n      * The right side of the menu is not touching the screen edge. Padding is not\n      * applied to the right side of the menu. A value of 0 is set.\n      */\n    --ion-safe-area-left: unset;\n    --ion-safe-area-right: 0px;\n  }\n}\n\nion-backdrop {\n  display: none;\n  opacity: 0.01;\n  z-index: -1;\n}\n\n@media (max-width: 340px) {\n  .menu-inner {\n    --width: 264px;\n  }\n}\n:host(.menu-type-reveal) {\n  z-index: 0;\n}\n\n:host(.menu-type-reveal.show-menu) .menu-inner {\n  transform: translate3d(0,  0,  0);\n}\n\n:host(.menu-type-overlay) {\n  z-index: 1000;\n}\n\n:host(.menu-type-overlay) .show-backdrop {\n  display: block;\n  cursor: pointer;\n}\n\n/**\n * The split pane styles for menu are defined\n * in the menu stylesheets instead in the split pane\n * stylesheets with ::slotted to allow for menus\n * to be wrapped in custom components.\n * If we used ::slotted to target the menu\n * then menus wrapped in components would never\n * receive these styles because they are not\n * children of the split pane.\n */\n/**\n * Do not pass CSS Variables down on larger\n * screens as we want them to affect the outer\n * `ion-menu` rather than the inner content\n */\n:host(.menu-pane-visible) {\n  flex: 0 1 auto;\n  width: var(--side-width, var(--width));\n  min-width: var(--side-min-width, var(--min-width));\n  max-width: var(--side-max-width, var(--max-width));\n}\n\n:host(.menu-pane-visible.split-pane-side) {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: relative;\n  box-shadow: none;\n  z-index: 0;\n}\n\n:host(.menu-pane-visible.split-pane-side.menu-enabled) {\n  display: flex;\n  flex-shrink: 0;\n}\n\n:host(.menu-pane-visible.split-pane-side) {\n  order: -1;\n}\n\n:host(.menu-pane-visible.split-pane-side[side=end]) {\n  order: 1;\n}\n\n:host(.menu-pane-visible) .menu-inner {\n  left: 0;\n  right: 0;\n  width: auto;\n  transform: none;\n  box-shadow: none;\n}\n\n:host(.menu-pane-visible) ion-backdrop {\n  /* stylelint-disable-next-line declaration-no-important */\n  display: hidden !important;\n}\n\n:host(.menu-pane-visible.split-pane-side) {\n  -webkit-border-start: 0;\n  border-inline-start: 0;\n  -webkit-border-end: var(--border);\n  border-inline-end: var(--border);\n  border-top: 0;\n  border-bottom: 0;\n  min-width: var(--side-min-width);\n  max-width: var(--side-max-width);\n}\n\n:host(.menu-pane-visible.split-pane-side[side=end]) {\n  -webkit-border-start: var(--border);\n  border-inline-start: var(--border);\n  -webkit-border-end: 0;\n  border-inline-end: 0;\n  border-top: 0;\n  border-bottom: 0;\n  min-width: var(--side-min-width);\n  max-width: var(--side-max-width);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host(.menu-type-overlay) .menu-inner {\n  box-shadow: 4px 0px 16px rgba(0, 0, 0, 0.18);\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Build, Host, h } from \"@stencil/core\";\nimport { getTimeGivenProgression } from \"../../utils/animation/cubic-bezier\";\nimport { focusFirstDescendant, focusLastDescendant } from \"../../utils/focus-trap\";\nimport { GESTURE_CONTROLLER } from \"../../utils/gesture/index\";\nimport { shouldUseCloseWatcher } from \"../../utils/hardware-back-button\";\nimport { inheritAriaAttributes, assert, clamp, isEndSide as isEnd } from \"../../utils/helpers\";\nimport { menuController } from \"../../utils/menu-controller/index\";\nimport { getPresentedOverlay } from \"../../utils/overlays\";\nimport { hostContext } from \"../../utils/theme\";\nimport { config } from \"../../global/config\";\nimport { getIonMode } from \"../../global/ionic-global\";\nconst iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\nconst mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\nconst iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\nconst mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\n/**\n * @part container - The container for the menu content.\n * @part backdrop - The backdrop that appears over the main content when the menu is open.\n */\nexport class Menu {\n    constructor() {\n        this.lastOnEnd = 0;\n        this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\n        this.didLoad = false;\n        /**\n         * Flag used to determine if an open/close\n         * operation was cancelled. For example, if\n         * an app calls \"menu.open\" then disables the menu\n         * part way through the animation, then this would\n         * be considered a cancelled operation.\n         */\n        this.operationCancelled = false;\n        this.isAnimating = false;\n        this._isOpen = false;\n        this.inheritedAttributes = {};\n        this.handleFocus = (ev) => {\n            /**\n             * Overlays have their own focus trapping listener\n             * so we do not want the two listeners to conflict\n             * with each other. If the top-most overlay that is\n             * open does not contain this ion-menu, then ion-menu's\n             * focus trapping should not run.\n             */\n            const lastOverlay = getPresentedOverlay(document);\n            if (lastOverlay && !lastOverlay.contains(this.el)) {\n                return;\n            }\n            this.trapKeyboardFocus(ev, document);\n        };\n        this.isPaneVisible = false;\n        this.isEndSide = false;\n        this.contentId = undefined;\n        this.menuId = undefined;\n        this.type = undefined;\n        this.disabled = false;\n        this.side = 'start';\n        this.swipeGesture = true;\n        this.maxEdgeStart = 50;\n    }\n    typeChanged(type, oldType) {\n        const contentEl = this.contentEl;\n        if (contentEl) {\n            if (oldType !== undefined) {\n                contentEl.classList.remove(`menu-content-${oldType}`);\n            }\n            contentEl.classList.add(`menu-content-${type}`);\n            contentEl.removeAttribute('style');\n        }\n        if (this.menuInnerEl) {\n            // Remove effects of previous animations\n            this.menuInnerEl.removeAttribute('style');\n        }\n        this.animation = undefined;\n    }\n    disabledChanged() {\n        this.updateState();\n        this.ionMenuChange.emit({\n            disabled: this.disabled,\n            open: this._isOpen,\n        });\n    }\n    sideChanged() {\n        this.isEndSide = isEnd(this.side);\n        /**\n         * Menu direction animation is calculated based on the document direction.\n         * If the document direction changes, we need to create a new animation.\n         */\n        this.animation = undefined;\n    }\n    swipeGestureChanged() {\n        this.updateState();\n    }\n    async connectedCallback() {\n        // TODO: connectedCallback is fired in CE build\n        // before WC is defined. This needs to be fixed in Stencil.\n        if (typeof customElements !== 'undefined' && customElements != null) {\n            await customElements.whenDefined('ion-menu');\n        }\n        if (this.type === undefined) {\n            this.type = config.get('menuType', 'overlay');\n        }\n        if (!Build.isBrowser) {\n            return;\n        }\n        const content = this.contentId !== undefined ? document.getElementById(this.contentId) : null;\n        if (content === null) {\n            console.error('Menu: must have a \"content\" element to listen for drag events on.');\n            return;\n        }\n        if (this.el.contains(content)) {\n            console.error(`Menu: \"contentId\" should refer to the main view's ion-content, not the ion-content inside of the ion-menu.`);\n        }\n        this.contentEl = content;\n        // add menu's content classes\n        content.classList.add('menu-content');\n        this.typeChanged(this.type, undefined);\n        this.sideChanged();\n        // register this menu with the app's menu controller\n        menuController._register(this);\n        this.menuChanged();\n        this.gesture = (await import('../../utils/gesture')).createGesture({\n            el: document,\n            gestureName: 'menu-swipe',\n            gesturePriority: 30,\n            threshold: 10,\n            blurOnStart: true,\n            canStart: (ev) => this.canStart(ev),\n            onWillStart: () => this.onWillStart(),\n            onStart: () => this.onStart(),\n            onMove: (ev) => this.onMove(ev),\n            onEnd: (ev) => this.onEnd(ev),\n        });\n        this.updateState();\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = inheritAriaAttributes(this.el);\n    }\n    async componentDidLoad() {\n        this.didLoad = true;\n        /**\n         * A menu inside of a split pane is assumed\n         * to be a side pane.\n         *\n         * When the menu is loaded it needs to\n         * see if it should be considered visible inside\n         * of the split pane. If the split pane is\n         * hidden then the menu should be too.\n         */\n        const splitPane = this.el.closest('ion-split-pane');\n        if (splitPane !== null) {\n            this.isPaneVisible = await splitPane.isVisible();\n        }\n        this.menuChanged();\n        this.updateState();\n    }\n    menuChanged() {\n        /**\n         * Inform dependent components such as ion-menu-button\n         * that the menu is ready. Note that we only want to do this\n         * once the menu has been rendered which is why we check for didLoad.\n         */\n        if (this.didLoad) {\n            this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\n        }\n    }\n    async disconnectedCallback() {\n        /**\n         * The menu should be closed when it is\n         * unmounted from the DOM.\n         * This is an async call, so we need to wait for\n         * this to finish otherwise contentEl\n         * will not have MENU_CONTENT_OPEN removed.\n         */\n        await this.close(false);\n        this.blocker.destroy();\n        menuController._unregister(this);\n        if (this.animation) {\n            this.animation.destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        this.animation = undefined;\n        this.contentEl = undefined;\n    }\n    onSplitPaneChanged(ev) {\n        const closestSplitPane = this.el.closest('ion-split-pane');\n        if (closestSplitPane !== null && closestSplitPane === ev.target) {\n            this.isPaneVisible = ev.detail.visible;\n            this.updateState();\n        }\n    }\n    onBackdropClick(ev) {\n        // TODO(FW-2832): type (CustomEvent triggers errors which should be sorted)\n        if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n            const shouldClose = ev.composedPath ? !ev.composedPath().includes(this.menuInnerEl) : false;\n            if (shouldClose) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                this.close();\n            }\n        }\n    }\n    onKeydown(ev) {\n        if (ev.key === 'Escape') {\n            this.close();\n        }\n    }\n    /**\n     * Returns `true` is the menu is open.\n     */\n    isOpen() {\n        return Promise.resolve(this._isOpen);\n    }\n    /**\n     * Returns `true` is the menu is active.\n     *\n     * A menu is active when it can be opened or closed, meaning it's enabled\n     * and it's not part of a `ion-split-pane`.\n     */\n    isActive() {\n        return Promise.resolve(this._isActive());\n    }\n    /**\n     * Opens the menu. If the menu is already open or it can't be opened,\n     * it returns `false`.\n     */\n    open(animated = true) {\n        return this.setOpen(true, animated);\n    }\n    /**\n     * Closes the menu. If the menu is already closed or it can't be closed,\n     * it returns `false`.\n     */\n    close(animated = true) {\n        return this.setOpen(false, animated);\n    }\n    /**\n     * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    toggle(animated = true) {\n        return this.setOpen(!this._isOpen, animated);\n    }\n    /**\n     * Opens or closes the button.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    setOpen(shouldOpen, animated = true) {\n        return menuController._setOpen(this, shouldOpen, animated);\n    }\n    trapKeyboardFocus(ev, doc) {\n        const target = ev.target;\n        if (!target) {\n            return;\n        }\n        /**\n         * If the target is inside the menu contents, let the browser\n         * focus as normal and keep a log of the last focused element.\n         */\n        if (this.el.contains(target)) {\n            this.lastFocus = target;\n        }\n        else {\n            /**\n             * Otherwise, we are about to have focus go out of the menu.\n             * Wrap the focus to either the first or last element.\n             */\n            const { el } = this;\n            /**\n             * Once we call `focusFirstDescendant`, another focus event\n             * will fire, which will cause `lastFocus` to be updated\n             * before we can run the code after that. We cache the value\n             * here to avoid that.\n             */\n            focusFirstDescendant(el);\n            /**\n             * If the cached last focused element is the same as the now-\n             * active element, that means the user was on the first element\n             * already and pressed Shift + Tab, so we need to wrap to the\n             * last descendant.\n             */\n            if (this.lastFocus === doc.activeElement) {\n                focusLastDescendant(el);\n            }\n        }\n    }\n    async _setOpen(shouldOpen, animated = true) {\n        // If the menu is disabled or it is currently being animated, let's do nothing\n        if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n            return false;\n        }\n        this.beforeAnimation(shouldOpen);\n        await this.loadAnimation();\n        await this.startAnimation(shouldOpen, animated);\n        /**\n         * If the animation was cancelled then\n         * return false because the operation\n         * did not succeed.\n         */\n        if (this.operationCancelled) {\n            this.operationCancelled = false;\n            return false;\n        }\n        this.afterAnimation(shouldOpen);\n        return true;\n    }\n    async loadAnimation() {\n        // Menu swipe animation takes the menu's inner width as parameter,\n        // If `offsetWidth` changes, we need to create a new animation.\n        const width = this.menuInnerEl.offsetWidth;\n        /**\n         * Menu direction animation is calculated based on the document direction.\n         * If the document direction changes, we need to create a new animation.\n         */\n        const isEndSide = isEnd(this.side);\n        if (width === this.width && this.animation !== undefined && isEndSide === this.isEndSide) {\n            return;\n        }\n        this.width = width;\n        this.isEndSide = isEndSide;\n        // Destroy existing animation\n        if (this.animation) {\n            this.animation.destroy();\n            this.animation = undefined;\n        }\n        // Create new animation\n        const animation = (this.animation = await menuController._createAnimation(this.type, this));\n        if (!config.getBoolean('animated', true)) {\n            animation.duration(0);\n        }\n        animation.fill('both');\n    }\n    async startAnimation(shouldOpen, animated) {\n        const isReversed = !shouldOpen;\n        const mode = getIonMode(this);\n        const easing = mode === 'ios' ? iosEasing : mdEasing;\n        const easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\n        const ani = this.animation\n            .direction(isReversed ? 'reverse' : 'normal')\n            .easing(isReversed ? easingReverse : easing);\n        if (animated) {\n            await ani.play();\n        }\n        else {\n            ani.play({ sync: true });\n        }\n        /**\n         * We run this after the play invocation\n         * instead of using ani.onFinish so that\n         * multiple onFinish callbacks do not get\n         * run if an animation is played, stopped,\n         * and then played again.\n         */\n        if (ani.getDirection() === 'reverse') {\n            ani.direction('normal');\n        }\n    }\n    _isActive() {\n        return !this.disabled && !this.isPaneVisible;\n    }\n    canSwipe() {\n        return this.swipeGesture && !this.isAnimating && this._isActive();\n    }\n    canStart(detail) {\n        // Do not allow swipe gesture if a modal is open\n        const isModalPresented = !!document.querySelector('ion-modal.show-modal');\n        if (isModalPresented || !this.canSwipe()) {\n            return false;\n        }\n        if (this._isOpen) {\n            return true;\n        }\n        else if (menuController._getOpenSync()) {\n            return false;\n        }\n        return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n    }\n    onWillStart() {\n        this.beforeAnimation(!this._isOpen);\n        return this.loadAnimation();\n    }\n    onStart() {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        // the cloned animation should not use an easing curve during seek\n        this.animation.progressStart(true, this._isOpen ? 1 : 0);\n    }\n    onMove(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n        const stepValue = delta / this.width;\n        this.animation.progressStep(this._isOpen ? 1 - stepValue : stepValue);\n    }\n    onEnd(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const isOpen = this._isOpen;\n        const isEndSide = this.isEndSide;\n        const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n        const width = this.width;\n        const stepValue = delta / width;\n        const velocity = detail.velocityX;\n        const z = width / 2.0;\n        const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n        const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n        const shouldComplete = isOpen\n            ? isEndSide\n                ? shouldCompleteRight\n                : shouldCompleteLeft\n            : isEndSide\n                ? shouldCompleteLeft\n                : shouldCompleteRight;\n        let shouldOpen = !isOpen && shouldComplete;\n        if (isOpen && !shouldComplete) {\n            shouldOpen = true;\n        }\n        this.lastOnEnd = detail.currentTime;\n        // Account for rounding errors in JS\n        let newStepValue = shouldComplete ? 0.001 : -0.001;\n        /**\n         * stepValue can sometimes return a negative\n         * value, but you can't have a negative time value\n         * for the cubic bezier curve (at least with web animations)\n         */\n        const adjustedStepValue = stepValue < 0 ? 0.01 : stepValue;\n        /**\n         * Animation will be reversed here, so need to\n         * reverse the easing curve as well\n         *\n         * Additionally, we need to account for the time relative\n         * to the new easing curve, as `stepValue` is going to be given\n         * in terms of a linear curve.\n         */\n        newStepValue +=\n            getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\n        const playTo = this._isOpen ? !shouldComplete : shouldComplete;\n        this.animation\n            .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\n            .onFinish(() => this.afterAnimation(shouldOpen), { oneTimeCallback: true })\n            .progressEnd(playTo ? 1 : 0, this._isOpen ? 1 - newStepValue : newStepValue, 300);\n    }\n    beforeAnimation(shouldOpen) {\n        assert(!this.isAnimating, '_before() should not be called while animating');\n        // this places the menu into the correct location before it animates in\n        // this css class doesn't actually kick off any animations\n        this.el.classList.add(SHOW_MENU);\n        /**\n         * We add a tabindex here so that focus trapping\n         * still works even if the menu does not have\n         * any focusable elements slotted inside. The\n         * focus trapping utility will fallback to focusing\n         * the menu so focus does not leave when the menu\n         * is open.\n         */\n        this.el.setAttribute('tabindex', '0');\n        if (this.backdropEl) {\n            this.backdropEl.classList.add(SHOW_BACKDROP);\n        }\n        // add css class and hide content behind menu from screen readers\n        if (this.contentEl) {\n            this.contentEl.classList.add(MENU_CONTENT_OPEN);\n            /**\n             * When the menu is open and overlaying the main\n             * content, the main content should not be announced\n             * by the screenreader as the menu is the main\n             * focus. This is useful with screenreaders that have\n             * \"read from top\" gestures that read the entire\n             * page from top to bottom when activated.\n             * This should be done before the animation starts\n             * so that users cannot accidentally scroll\n             * the content while dragging a menu open.\n             */\n            this.contentEl.setAttribute('aria-hidden', 'true');\n        }\n        this.blocker.block();\n        this.isAnimating = true;\n        if (shouldOpen) {\n            this.ionWillOpen.emit();\n        }\n        else {\n            this.ionWillClose.emit();\n        }\n    }\n    afterAnimation(isOpen) {\n        var _a;\n        // keep opening/closing the menu disabled for a touch more yet\n        // only add listeners/css if it's enabled and isOpen\n        // and only remove listeners/css if it's not open\n        // emit opened/closed events\n        this._isOpen = isOpen;\n        this.isAnimating = false;\n        if (!this._isOpen) {\n            this.blocker.unblock();\n        }\n        if (isOpen) {\n            // emit open event\n            this.ionDidOpen.emit();\n            /**\n             * Move focus to the menu to prepare focus trapping, as long as\n             * it isn't already focused. Use the host element instead of the\n             * first descendant to avoid the scroll position jumping around.\n             */\n            const focusedMenu = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.closest('ion-menu');\n            if (focusedMenu !== this.el) {\n                this.el.focus();\n            }\n            // start focus trapping\n            document.addEventListener('focus', this.handleFocus, true);\n        }\n        else {\n            // remove css classes and unhide content from screen readers\n            this.el.classList.remove(SHOW_MENU);\n            /**\n             * Remove tabindex from the menu component\n             * so that is cannot be tabbed to.\n             */\n            this.el.removeAttribute('tabindex');\n            if (this.contentEl) {\n                this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n                /**\n                 * Remove aria-hidden so screen readers\n                 * can announce the main content again\n                 * now that the menu is not the main focus.\n                 */\n                this.contentEl.removeAttribute('aria-hidden');\n            }\n            if (this.backdropEl) {\n                this.backdropEl.classList.remove(SHOW_BACKDROP);\n            }\n            if (this.animation) {\n                this.animation.stop();\n            }\n            // emit close event\n            this.ionDidClose.emit();\n            // undo focus trapping so multiple menus don't collide\n            document.removeEventListener('focus', this.handleFocus, true);\n        }\n    }\n    updateState() {\n        const isActive = this._isActive();\n        if (this.gesture) {\n            this.gesture.enable(isActive && this.swipeGesture);\n        }\n        /**\n         * If the menu is disabled but it is still open\n         * then we should close the menu immediately.\n         * Additionally, if the menu is in the process\n         * of animating {open, close} and the menu is disabled\n         * then it should still be closed immediately.\n         */\n        if (!isActive) {\n            /**\n             * It is possible to disable the menu while\n             * it is mid-animation. When this happens, we\n             * need to set the operationCancelled flag\n             * so that this._setOpen knows to return false\n             * and not run the \"afterAnimation\" callback.\n             */\n            if (this.isAnimating) {\n                this.operationCancelled = true;\n            }\n            /**\n             * If the menu is disabled then we should\n             * forcibly close the menu even if it is open.\n             */\n            this.afterAnimation(false);\n        }\n    }\n    render() {\n        const { type, disabled, el, isPaneVisible, inheritedAttributes, side } = this;\n        const mode = getIonMode(this);\n        /**\n         * If the Close Watcher is enabled then\n         * the ionBackButton listener in the menu controller\n         * will handle closing the menu when Escape is pressed.\n         */\n        return (h(Host, { key: '30c0c9bfb8973e4a6feb658f8c4ee8e362f464ed', onKeyDown: shouldUseCloseWatcher() ? null : this.onKeydown, role: \"navigation\", \"aria-label\": inheritedAttributes['aria-label'] || 'menu', class: {\n                [mode]: true,\n                [`menu-type-${type}`]: true,\n                'menu-enabled': !disabled,\n                [`menu-side-${side}`]: true,\n                'menu-pane-visible': isPaneVisible,\n                'split-pane-side': hostContext('ion-split-pane', el),\n            } }, h(\"div\", { key: '34b0e5840906862cf1bc27207e089004b0402c56', class: \"menu-inner\", part: \"container\", ref: (el) => (this.menuInnerEl = el) }, h(\"slot\", { key: '2cd7e61a8c0987ca4b3f1f8b33cba7152f1275fe' })), h(\"ion-backdrop\", { key: 'd190b1f9b66c76e276f27bfe074d3aab796180fb', ref: (el) => (this.backdropEl = el), class: \"menu-backdrop\", tappable: false, stopPropagation: false, part: \"backdrop\" })));\n    }\n    static get is() { return \"ion-menu\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"menu.ios.scss\"],\n            \"md\": [\"menu.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"menu.ios.css\"],\n            \"md\": [\"menu.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"contentId\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The `id` of the main content. When using\\na router this is typically `ion-router-outlet`.\\nWhen not using a router, this is typically\\nyour main view's `ion-content`. This is not the\\nid of the `ion-content` inside of your `ion-menu`.\"\n                },\n                \"attribute\": \"content-id\",\n                \"reflect\": true\n            },\n            \"menuId\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"An id for the menu.\"\n                },\n                \"attribute\": \"menu-id\",\n                \"reflect\": true\n            },\n            \"type\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"MenuType\",\n                    \"resolved\": \"\\\"overlay\\\" | \\\"push\\\" | \\\"reveal\\\" | undefined\",\n                    \"references\": {\n                        \"MenuType\": {\n                            \"location\": \"import\",\n                            \"path\": \"./menu-interface\",\n                            \"id\": \"src/components/menu/menu-interface.ts::MenuType\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The display type of the menu.\\nAvailable options: `\\\"overlay\\\"`, `\\\"reveal\\\"`, `\\\"push\\\"`.\"\n                },\n                \"attribute\": \"type\",\n                \"reflect\": false\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the menu is disabled.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"side\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Side\",\n                    \"resolved\": \"\\\"end\\\" | \\\"start\\\"\",\n                    \"references\": {\n                        \"Side\": {\n                            \"location\": \"import\",\n                            \"path\": \"./menu-interface\",\n                            \"id\": \"src/components/menu/menu-interface.ts::Side\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Which side of the view the menu should be placed.\"\n                },\n                \"attribute\": \"side\",\n                \"reflect\": true,\n                \"defaultValue\": \"'start'\"\n            },\n            \"swipeGesture\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, swiping the menu is enabled.\"\n                },\n                \"attribute\": \"swipe-gesture\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"maxEdgeStart\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The edge threshold for dragging the menu open.\\nIf a drag/swipe happens over this value, the menu is not triggered.\"\n                },\n                \"attribute\": \"max-edge-start\",\n                \"reflect\": false,\n                \"defaultValue\": \"50\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"isPaneVisible\": {},\n            \"isEndSide\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionWillOpen\",\n                \"name\": \"ionWillOpen\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the menu is about to be opened.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionWillClose\",\n                \"name\": \"ionWillClose\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the menu is about to be closed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionDidOpen\",\n                \"name\": \"ionDidOpen\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the menu is open.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionDidClose\",\n                \"name\": \"ionDidClose\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the menu is closed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionMenuChange\",\n                \"name\": \"ionMenuChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Emitted when the menu state is changed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"MenuChangeEventDetail\",\n                    \"resolved\": \"MenuChangeEventDetail\",\n                    \"references\": {\n                        \"MenuChangeEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"./menu-interface\",\n                            \"id\": \"src/components/menu/menu-interface.ts::MenuChangeEventDetail\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"isOpen\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<boolean>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Returns `true` is the menu is open.\",\n                    \"tags\": []\n                }\n            },\n            \"isActive\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<boolean>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Returns `true` is the menu is active.\\n\\nA menu is active when it can be opened or closed, meaning it's enabled\\nand it's not part of a `ion-split-pane`.\",\n                    \"tags\": []\n                }\n            },\n            \"open\": {\n                \"complexType\": {\n                    \"signature\": \"(animated?: boolean) => Promise<boolean>\",\n                    \"parameters\": [{\n                            \"name\": \"animated\",\n                            \"type\": \"boolean\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Opens the menu. If the menu is already open or it can't be opened,\\nit returns `false`.\",\n                    \"tags\": []\n                }\n            },\n            \"close\": {\n                \"complexType\": {\n                    \"signature\": \"(animated?: boolean) => Promise<boolean>\",\n                    \"parameters\": [{\n                            \"name\": \"animated\",\n                            \"type\": \"boolean\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Closes the menu. If the menu is already closed or it can't be closed,\\nit returns `false`.\",\n                    \"tags\": []\n                }\n            },\n            \"toggle\": {\n                \"complexType\": {\n                    \"signature\": \"(animated?: boolean) => Promise<boolean>\",\n                    \"parameters\": [{\n                            \"name\": \"animated\",\n                            \"type\": \"boolean\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\\nIf the operation can't be completed successfully, it returns `false`.\",\n                    \"tags\": []\n                }\n            },\n            \"setOpen\": {\n                \"complexType\": {\n                    \"signature\": \"(shouldOpen: boolean, animated?: boolean) => Promise<boolean>\",\n                    \"parameters\": [{\n                            \"name\": \"shouldOpen\",\n                            \"type\": \"boolean\",\n                            \"docs\": \"\"\n                        }, {\n                            \"name\": \"animated\",\n                            \"type\": \"boolean\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Opens or closes the button.\\nIf the operation can't be completed successfully, it returns `false`.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"type\",\n                \"methodName\": \"typeChanged\"\n            }, {\n                \"propName\": \"disabled\",\n                \"methodName\": \"disabledChanged\"\n            }, {\n                \"propName\": \"side\",\n                \"methodName\": \"sideChanged\"\n            }, {\n                \"propName\": \"swipeGesture\",\n                \"methodName\": \"swipeGestureChanged\"\n            }];\n    }\n    static get listeners() {\n        return [{\n                \"name\": \"ionSplitPaneVisible\",\n                \"method\": \"onSplitPaneChanged\",\n                \"target\": \"body\",\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"click\",\n                \"method\": \"onBackdropClick\",\n                \"target\": undefined,\n                \"capture\": true,\n                \"passive\": false\n            }];\n    }\n}\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n    return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n    if (isEndSide) {\n        return posX >= win.innerWidth - maxEdgeStart;\n    }\n    else {\n        return posX <= maxEdgeStart;\n    }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { menuController } from \"../../utils/menu-controller/index\";\n// Given a menu, return whether or not the menu toggle should be visible\nexport const updateVisibility = async (menu) => {\n    const menuEl = await menuController.get(menu);\n    return !!(menuEl && (await menuEl.isActive()));\n};\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --border-radius: Border radius of the menu button\n   *\n   * @prop --background: Background of the menu button\n   * @prop --background-hover: Background of the menu button on hover\n   * @prop --background-hover-opacity: Opacity of the background on hover\n   * @prop --background-focused: Background of the menu button when focused with the tab key\n   * @prop --background-focused-opacity: Opacity of the menu button background when focused with the tab key\n   *\n   * @prop --color: Color of the menu button\n   * @prop --color-hover: Color of the menu button on hover\n   * @prop --color-focused: Color of the menu button when focused with the tab key\n   *\n   * @prop --padding-top: Top padding of the button\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button\n   * @prop --padding-bottom: Bottom padding of the button\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button\n   */\n  --background: transparent;\n  --color-focused: currentColor;\n  --border-radius: initial;\n  --padding-top: 0;\n  --padding-bottom: 0;\n  color: var(--color);\n  text-align: center;\n  text-decoration: none;\n  text-overflow: ellipsis;\n  text-transform: none;\n  white-space: nowrap;\n  font-kerning: none;\n}\n\n.button-native {\n  border-radius: var(--border-radius);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  min-height: inherit;\n  border: 0;\n  outline: none;\n  background: var(--background);\n  line-height: 1;\n  cursor: pointer;\n  overflow: hidden;\n  user-select: none;\n  z-index: 0;\n  appearance: none;\n}\n\n.button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  min-height: inherit;\n  z-index: 1;\n}\n\nion-icon {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  pointer-events: none;\n}\n\n:host(.menu-button-hidden) {\n  display: none;\n}\n\n:host(.menu-button-disabled) {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n:host(.ion-focused) .button-native {\n  color: var(--color-focused);\n}\n:host(.ion-focused) .button-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n.button-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n@media (any-hover: hover) {\n  :host(:hover) .button-native {\n    color: var(--color-hover);\n  }\n  :host(:hover) .button-native::after {\n    background: var(--background-hover);\n    opacity: var(--background-hover-opacity, 0);\n  }\n}\n:host(.ion-color) .button-native {\n  color: var(--ion-color-base);\n}\n\n:host(.in-toolbar:not(.in-toolbar-color)) {\n  color: var(--ion-toolbar-color, var(--color));\n}\n\n:host {\n  --background-focused: currentColor;\n  --background-focused-opacity: .1;\n  --border-radius: 4px;\n  --color: var(--ion-color-primary, #0054e9);\n  --padding-start: 5px;\n  --padding-end: 5px;\n  min-height: 32px;\n  font-size: clamp(31px, 1.9375rem, 38.13px);\n}\n\n:host(.ion-activated) {\n  opacity: 0.4;\n}\n\n@media (any-hover: hover) {\n  :host(:hover) {\n    opacity: 0.6;\n  }\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --border-radius: Border radius of the menu button\n   *\n   * @prop --background: Background of the menu button\n   * @prop --background-hover: Background of the menu button on hover\n   * @prop --background-hover-opacity: Opacity of the background on hover\n   * @prop --background-focused: Background of the menu button when focused with the tab key\n   * @prop --background-focused-opacity: Opacity of the menu button background when focused with the tab key\n   *\n   * @prop --color: Color of the menu button\n   * @prop --color-hover: Color of the menu button on hover\n   * @prop --color-focused: Color of the menu button when focused with the tab key\n   *\n   * @prop --padding-top: Top padding of the button\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button\n   * @prop --padding-bottom: Bottom padding of the button\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button\n   */\n  --background: transparent;\n  --color-focused: currentColor;\n  --border-radius: initial;\n  --padding-top: 0;\n  --padding-bottom: 0;\n  color: var(--color);\n  text-align: center;\n  text-decoration: none;\n  text-overflow: ellipsis;\n  text-transform: none;\n  white-space: nowrap;\n  font-kerning: none;\n}\n\n.button-native {\n  border-radius: var(--border-radius);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  min-height: inherit;\n  border: 0;\n  outline: none;\n  background: var(--background);\n  line-height: 1;\n  cursor: pointer;\n  overflow: hidden;\n  user-select: none;\n  z-index: 0;\n  appearance: none;\n}\n\n.button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  min-height: inherit;\n  z-index: 1;\n}\n\nion-icon {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  pointer-events: none;\n}\n\n:host(.menu-button-hidden) {\n  display: none;\n}\n\n:host(.menu-button-disabled) {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n:host(.ion-focused) .button-native {\n  color: var(--color-focused);\n}\n:host(.ion-focused) .button-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n.button-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n@media (any-hover: hover) {\n  :host(:hover) .button-native {\n    color: var(--color-hover);\n  }\n  :host(:hover) .button-native::after {\n    background: var(--background-hover);\n    opacity: var(--background-hover-opacity, 0);\n  }\n}\n:host(.ion-color) .button-native {\n  color: var(--ion-color-base);\n}\n\n:host(.in-toolbar:not(.in-toolbar-color)) {\n  color: var(--ion-toolbar-color, var(--color));\n}\n\n:host {\n  --background-focused: currentColor;\n  --background-focused-opacity: .12;\n  --background-hover: currentColor;\n  --background-hover-opacity: .04;\n  --border-radius: 50%;\n  --color: initial;\n  --padding-start: 8px;\n  --padding-end: 8px;\n  width: 3rem;\n  height: 3rem;\n  font-size: 1.5rem;\n}\n\n:host(.ion-color.ion-focused)::after {\n  background: var(--ion-color-base);\n}\n\n@media (any-hover: hover) {\n  :host(.ion-color:hover) .button-native::after {\n    background: var(--ion-color-base);\n  }\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { inheritAriaAttributes } from \"../../utils/helpers\";\nimport { menuController } from \"../../utils/menu-controller/index\";\nimport { createColorClasses, hostContext } from \"../../utils/theme\";\nimport { menuOutline, menuSharp } from \"ionicons/icons\";\nimport { config } from \"../../global/config\";\nimport { getIonMode } from \"../../global/ionic-global\";\nimport { updateVisibility } from \"../menu-toggle/menu-toggle-util\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @part native - The native HTML button element that wraps all child elements.\n * @part icon - The menu button icon (uses ion-icon).\n */\nexport class MenuButton {\n    constructor() {\n        this.inheritedAttributes = {};\n        this.onClick = async () => {\n            return menuController.toggle(this.menu);\n        };\n        this.visible = false;\n        this.color = undefined;\n        this.disabled = false;\n        this.menu = undefined;\n        this.autoHide = true;\n        this.type = 'button';\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = inheritAriaAttributes(this.el);\n    }\n    componentDidLoad() {\n        this.visibilityChanged();\n    }\n    async visibilityChanged() {\n        this.visible = await updateVisibility(this.menu);\n    }\n    render() {\n        const { color, disabled, inheritedAttributes } = this;\n        const mode = getIonMode(this);\n        const menuIcon = config.get('menuIcon', mode === 'ios' ? menuOutline : menuSharp);\n        const hidden = this.autoHide && !this.visible;\n        const attrs = {\n            type: this.type,\n        };\n        const ariaLabel = inheritedAttributes['aria-label'] || 'menu';\n        return (h(Host, { key: '95a8b9f09c7fae9713a8dc003ed277f6f31403da', onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, \"aria-hidden\": hidden ? 'true' : null, class: createColorClasses(color, {\n                [mode]: true,\n                button: true, // ion-buttons target .button\n                'menu-button-hidden': hidden,\n                'menu-button-disabled': disabled,\n                'in-toolbar': hostContext('ion-toolbar', this.el),\n                'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n                'ion-activatable': true,\n                'ion-focusable': true,\n            }) }, h(\"button\", Object.assign({ key: '39f3ce20c400d2fac4890a042e8e44426709fca5' }, attrs, { disabled: disabled, class: \"button-native\", part: \"native\", \"aria-label\": ariaLabel }), h(\"span\", { key: '310978dc1cdef668de6720cde2a2304253679176', class: \"button-inner\" }, h(\"slot\", { key: '2a2b9de524c1fc3c526fe9559cb077b976852725' }, h(\"ion-icon\", { key: '9c22d7ea9fc3d76c32ec1c1b4b13d982c60b8c2d', part: \"icon\", icon: menuIcon, mode: mode, lazy: false, \"aria-hidden\": \"true\" }))), mode === 'md' && h(\"ion-ripple-effect\", { key: 'c58c9e29c763070383472f65a9d322a684bcb564', type: \"unbounded\" }))));\n    }\n    static get is() { return \"ion-menu-button\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"menu-button.ios.scss\"],\n            \"md\": [\"menu-button.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"menu-button.ios.css\"],\n            \"md\": [\"menu-button.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the menu button.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"menu\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Optional property that maps to a Menu's `menuId` prop. Can also be `start` or `end` for the menu side. This is used to find the correct menu to toggle\"\n                },\n                \"attribute\": \"menu\",\n                \"reflect\": false\n            },\n            \"autoHide\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Automatically hides the menu button when the corresponding menu is not active\"\n                },\n                \"attribute\": \"auto-hide\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"type\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'submit' | 'reset' | 'button'\",\n                    \"resolved\": \"\\\"button\\\" | \\\"reset\\\" | \\\"submit\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The type of the button.\"\n                },\n                \"attribute\": \"type\",\n                \"reflect\": false,\n                \"defaultValue\": \"'button'\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"visible\": {}\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get listeners() {\n        return [{\n                \"name\": \"ionMenuChange\",\n                \"method\": \"visibilityChanged\",\n                \"target\": \"body\",\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"ionSplitPaneVisible\",\n                \"method\": \"visibilityChanged\",\n                \"target\": \"body\",\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\n",":host(.menu-toggle-hidden) {\n  display: none;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { menuController } from \"../../utils/menu-controller/index\";\nimport { getIonMode } from \"../../global/ionic-global\";\nimport { updateVisibility } from \"./menu-toggle-util\";\n/**\n * @slot - Content is placed inside the toggle to act as the click target.\n */\nexport class MenuToggle {\n    constructor() {\n        this.onClick = () => {\n            return menuController.toggle(this.menu);\n        };\n        this.visible = false;\n        this.menu = undefined;\n        this.autoHide = true;\n    }\n    connectedCallback() {\n        this.visibilityChanged();\n    }\n    async visibilityChanged() {\n        this.visible = await updateVisibility(this.menu);\n    }\n    render() {\n        const mode = getIonMode(this);\n        const hidden = this.autoHide && !this.visible;\n        return (h(Host, { key: '90e621f09792383f1badcc1b402b1ac7d08c5f98', onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\n                [mode]: true,\n                'menu-toggle-hidden': hidden,\n            } }, h(\"slot\", { key: 'c0abdd1d91e9d80ee3704e3e374ebe1f29078460' })));\n    }\n    static get is() { return \"ion-menu-toggle\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"menu-toggle.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"menu-toggle.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"menu\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Optional property that maps to a Menu's `menuId` prop.\\nCan also be `start` or `end` for the menu side.\\nThis is used to find the correct menu to toggle.\\n\\nIf this property is not used, `ion-menu-toggle` will toggle the\\nfirst menu that is active.\"\n                },\n                \"attribute\": \"menu\",\n                \"reflect\": false\n            },\n            \"autoHide\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Automatically hides the content when the corresponding menu is not active.\\n\\nBy default, it's `true`. Change it to `false` in order to\\nkeep `ion-menu-toggle` always visible regardless the state of the menu.\"\n                },\n                \"attribute\": \"auto-hide\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"visible\": {}\n        };\n    }\n    static get listeners() {\n        return [{\n                \"name\": \"ionMenuChange\",\n                \"method\": \"visibilityChanged\",\n                \"target\": \"body\",\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"ionSplitPaneVisible\",\n                \"method\": \"visibilityChanged\",\n                \"target\": \"body\",\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the progress track, or the buffer bar if `buffer` is set\n   * @prop --progress-background: Background of the progress bar representing the current value\n   */\n  --background: rgba(var(--ion-color-primary-rgb, 0, 84, 233), 0.3);\n  --progress-background: var(--ion-color-primary, #0054e9);\n  display: block;\n  position: relative;\n  width: 100%;\n  contain: strict;\n  direction: ltr;\n  overflow: hidden;\n}\n\n.progress,\n.progress-indeterminate,\n.indeterminate-bar-primary,\n.indeterminate-bar-secondary,\n.progress-buffer-bar {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n\n.buffer-circles-container,\n.buffer-circles {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n}\n\n.buffer-circles {\n  /* stylelint-disable property-disallowed-list */\n  right: -10px;\n  left: -10px;\n  /* stylelint-enable property-disallowed-list */\n}\n\n.progress,\n.progress-buffer-bar,\n.buffer-circles-container {\n  /* stylelint-disable-next-line property-disallowed-list */\n  transform-origin: left top;\n  transition: transform 150ms linear;\n}\n\n.progress,\n.progress-indeterminate {\n  background: var(--progress-background);\n  z-index: 2;\n}\n\n.progress-buffer-bar {\n  background: var(--background);\n  z-index: 1;\n}\n\n.buffer-circles-container {\n  overflow: hidden;\n}\n\n.indeterminate-bar-primary {\n  /* stylelint-disable property-disallowed-list */\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: -145.166611%;\n  /* stylelint-enable property-disallowed-list */\n  animation: primary-indeterminate-translate 2s infinite linear;\n}\n.indeterminate-bar-primary .progress-indeterminate {\n  animation: primary-indeterminate-scale 2s infinite linear;\n  animation-play-state: inherit;\n}\n\n.indeterminate-bar-secondary {\n  /* stylelint-disable property-disallowed-list */\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: -54.888891%;\n  /* stylelint-enable property-disallowed-list */\n  animation: secondary-indeterminate-translate 2s infinite linear;\n}\n.indeterminate-bar-secondary .progress-indeterminate {\n  animation: secondary-indeterminate-scale 2s infinite linear;\n  animation-play-state: inherit;\n}\n\n.buffer-circles {\n  background-image: radial-gradient(ellipse at center, var(--background) 0%, var(--background) 30%, transparent 30%);\n  /* stylelint-disable property-disallowed-list */\n  background-repeat: repeat-x;\n  background-position: 5px center;\n  background-size: 10px 10px;\n  /* stylelint-enable property-disallowed-list */\n  z-index: 0;\n  animation: buffering 450ms infinite linear;\n}\n\n:host(.progress-bar-reversed) {\n  transform: scaleX(-1);\n}\n\n:host(.progress-paused) .indeterminate-bar-secondary,\n:host(.progress-paused) .indeterminate-bar-primary,\n:host(.progress-paused) .buffer-circles {\n  animation-play-state: paused;\n}\n\n:host(.ion-color) .buffer-circles {\n  background-image: radial-gradient(ellipse at center, rgba(var(--ion-color-base-rgb), 0.3) 0%, rgba(var(--ion-color-base-rgb), 0.3) 30%, transparent 30%);\n}\n\n:host(.ion-color) .progress,\n:host(.ion-color) .progress-indeterminate {\n  background: var(--ion-color-base);\n}\n\n@keyframes primary-indeterminate-translate {\n  0% {\n    transform: translateX(0);\n  }\n  20% {\n    animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\n    transform: translateX(0);\n  }\n  59.15% {\n    animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\n    transform: translateX(83.67142%);\n  }\n  100% {\n    transform: translateX(200.611057%);\n  }\n}\n@keyframes primary-indeterminate-scale {\n  0% {\n    transform: scaleX(0.08);\n  }\n  36.65% {\n    animation-timing-function: cubic-bezier(0.334731, 0.12482, 0.785844, 1);\n    transform: scaleX(0.08);\n  }\n  69.15% {\n    animation-timing-function: cubic-bezier(0.06, 0.11, 0.6, 1);\n    transform: scaleX(0.661479);\n  }\n  100% {\n    transform: scaleX(0.08);\n  }\n}\n@keyframes secondary-indeterminate-translate {\n  0% {\n    animation-timing-function: cubic-bezier(0.15, 0, 0.515058, 0.409685);\n    transform: translateX(0);\n  }\n  25% {\n    animation-timing-function: cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);\n    transform: translateX(37.651913%);\n  }\n  48.35% {\n    animation-timing-function: cubic-bezier(0.4, 0.627035, 0.6, 0.902026);\n    transform: translateX(84.386165%);\n  }\n  100% {\n    transform: translateX(160.277782%);\n  }\n}\n@keyframes secondary-indeterminate-scale {\n  0% {\n    animation-timing-function: cubic-bezier(0.205028, 0.057051, 0.57661, 0.453971);\n    transform: scaleX(0.08);\n  }\n  19.15% {\n    animation-timing-function: cubic-bezier(0.152313, 0.196432, 0.648374, 1.004315);\n    transform: scaleX(0.457104);\n  }\n  44.15% {\n    animation-timing-function: cubic-bezier(0.257759, -0.003163, 0.211762, 1.38179);\n    transform: scaleX(0.72796);\n  }\n  100% {\n    transform: scaleX(0.08);\n  }\n}\n@keyframes buffering {\n  to {\n    transform: translateX(-10px);\n  }\n}\n:host {\n  border-radius: 9999px;\n  height: 4px;\n}\n\n:host(.progress-bar-solid) {\n  /**\n   * On iOS the unfilled portion of the progress bar\n   * is always a consistent background color. We\n   * only apply this style when the progress bar is\n   * solid (with a buffer value of 1). This maintains\n   * the custom Ionic appearance for a buffered progress bar.\n   */\n  --background: var(--ion-color-step-100, var(--ion-background-color-step-100, #e6e6e6));\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the progress track, or the buffer bar if `buffer` is set\n   * @prop --progress-background: Background of the progress bar representing the current value\n   */\n  --background: rgba(var(--ion-color-primary-rgb, 0, 84, 233), 0.3);\n  --progress-background: var(--ion-color-primary, #0054e9);\n  display: block;\n  position: relative;\n  width: 100%;\n  contain: strict;\n  direction: ltr;\n  overflow: hidden;\n}\n\n.progress,\n.progress-indeterminate,\n.indeterminate-bar-primary,\n.indeterminate-bar-secondary,\n.progress-buffer-bar {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n\n.buffer-circles-container,\n.buffer-circles {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n}\n\n.buffer-circles {\n  /* stylelint-disable property-disallowed-list */\n  right: -10px;\n  left: -10px;\n  /* stylelint-enable property-disallowed-list */\n}\n\n.progress,\n.progress-buffer-bar,\n.buffer-circles-container {\n  /* stylelint-disable-next-line property-disallowed-list */\n  transform-origin: left top;\n  transition: transform 150ms linear;\n}\n\n.progress,\n.progress-indeterminate {\n  background: var(--progress-background);\n  z-index: 2;\n}\n\n.progress-buffer-bar {\n  background: var(--background);\n  z-index: 1;\n}\n\n.buffer-circles-container {\n  overflow: hidden;\n}\n\n.indeterminate-bar-primary {\n  /* stylelint-disable property-disallowed-list */\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: -145.166611%;\n  /* stylelint-enable property-disallowed-list */\n  animation: primary-indeterminate-translate 2s infinite linear;\n}\n.indeterminate-bar-primary .progress-indeterminate {\n  animation: primary-indeterminate-scale 2s infinite linear;\n  animation-play-state: inherit;\n}\n\n.indeterminate-bar-secondary {\n  /* stylelint-disable property-disallowed-list */\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: -54.888891%;\n  /* stylelint-enable property-disallowed-list */\n  animation: secondary-indeterminate-translate 2s infinite linear;\n}\n.indeterminate-bar-secondary .progress-indeterminate {\n  animation: secondary-indeterminate-scale 2s infinite linear;\n  animation-play-state: inherit;\n}\n\n.buffer-circles {\n  background-image: radial-gradient(ellipse at center, var(--background) 0%, var(--background) 30%, transparent 30%);\n  /* stylelint-disable property-disallowed-list */\n  background-repeat: repeat-x;\n  background-position: 5px center;\n  background-size: 10px 10px;\n  /* stylelint-enable property-disallowed-list */\n  z-index: 0;\n  animation: buffering 450ms infinite linear;\n}\n\n:host(.progress-bar-reversed) {\n  transform: scaleX(-1);\n}\n\n:host(.progress-paused) .indeterminate-bar-secondary,\n:host(.progress-paused) .indeterminate-bar-primary,\n:host(.progress-paused) .buffer-circles {\n  animation-play-state: paused;\n}\n\n:host(.ion-color) .buffer-circles {\n  background-image: radial-gradient(ellipse at center, rgba(var(--ion-color-base-rgb), 0.3) 0%, rgba(var(--ion-color-base-rgb), 0.3) 30%, transparent 30%);\n}\n\n:host(.ion-color) .progress,\n:host(.ion-color) .progress-indeterminate {\n  background: var(--ion-color-base);\n}\n\n@keyframes primary-indeterminate-translate {\n  0% {\n    transform: translateX(0);\n  }\n  20% {\n    animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\n    transform: translateX(0);\n  }\n  59.15% {\n    animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\n    transform: translateX(83.67142%);\n  }\n  100% {\n    transform: translateX(200.611057%);\n  }\n}\n@keyframes primary-indeterminate-scale {\n  0% {\n    transform: scaleX(0.08);\n  }\n  36.65% {\n    animation-timing-function: cubic-bezier(0.334731, 0.12482, 0.785844, 1);\n    transform: scaleX(0.08);\n  }\n  69.15% {\n    animation-timing-function: cubic-bezier(0.06, 0.11, 0.6, 1);\n    transform: scaleX(0.661479);\n  }\n  100% {\n    transform: scaleX(0.08);\n  }\n}\n@keyframes secondary-indeterminate-translate {\n  0% {\n    animation-timing-function: cubic-bezier(0.15, 0, 0.515058, 0.409685);\n    transform: translateX(0);\n  }\n  25% {\n    animation-timing-function: cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);\n    transform: translateX(37.651913%);\n  }\n  48.35% {\n    animation-timing-function: cubic-bezier(0.4, 0.627035, 0.6, 0.902026);\n    transform: translateX(84.386165%);\n  }\n  100% {\n    transform: translateX(160.277782%);\n  }\n}\n@keyframes secondary-indeterminate-scale {\n  0% {\n    animation-timing-function: cubic-bezier(0.205028, 0.057051, 0.57661, 0.453971);\n    transform: scaleX(0.08);\n  }\n  19.15% {\n    animation-timing-function: cubic-bezier(0.152313, 0.196432, 0.648374, 1.004315);\n    transform: scaleX(0.457104);\n  }\n  44.15% {\n    animation-timing-function: cubic-bezier(0.257759, -0.003163, 0.211762, 1.38179);\n    transform: scaleX(0.72796);\n  }\n  100% {\n    transform: scaleX(0.08);\n  }\n}\n@keyframes buffering {\n  to {\n    transform: translateX(-10px);\n  }\n}\n:host {\n  height: 4px;\n}\n\n:host(.ion-color) .progress-buffer-bar {\n  background: rgba(var(--ion-color-base-rgb), 0.3);\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { clamp } from \"../../utils/helpers\";\nimport { createColorClasses } from \"../../utils/theme\";\nimport { config } from \"../../global/config\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @part progress - The progress bar that shows the current value when `type` is `\"determinate\"` and slides back and forth when `type` is `\"indeterminate\"`.\n * @part stream - The animated circles that appear while buffering. This only shows when `buffer` is set and `type` is `\"determinate\"`.\n * @part track - The track bar behind the progress bar. If the `buffer` property is set and `type` is `\"determinate\"` the track will be the\n * width of the `buffer` value.\n */\nexport class ProgressBar {\n    constructor() {\n        this.type = 'determinate';\n        this.reversed = false;\n        this.value = 0;\n        this.buffer = 1;\n        this.color = undefined;\n    }\n    render() {\n        const { color, type, reversed, value, buffer } = this;\n        const paused = config.getBoolean('_testing');\n        const mode = getIonMode(this);\n        // If the progress is displayed as a solid bar.\n        const progressSolid = buffer === 1;\n        return (h(Host, { key: 'b293f4475bcdaa7851b41ebfda659037f0365120', role: \"progressbar\", \"aria-valuenow\": type === 'determinate' ? value : null, \"aria-valuemin\": \"0\", \"aria-valuemax\": \"1\", class: createColorClasses(color, {\n                [mode]: true,\n                [`progress-bar-${type}`]: true,\n                'progress-paused': paused,\n                'progress-bar-reversed': document.dir === 'rtl' ? !reversed : reversed,\n                'progress-bar-solid': progressSolid,\n            }) }, type === 'indeterminate' ? renderIndeterminate() : renderProgress(value, buffer)));\n    }\n    static get is() { return \"ion-progress-bar\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"progress-bar.ios.scss\"],\n            \"md\": [\"progress-bar.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"progress-bar.ios.css\"],\n            \"md\": [\"progress-bar.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"type\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'determinate' | 'indeterminate'\",\n                    \"resolved\": \"\\\"determinate\\\" | \\\"indeterminate\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The state of the progress bar, based on if the time the process takes is known or not.\\nDefault options are: `\\\"determinate\\\"` (no animation), `\\\"indeterminate\\\"` (animate from left to right).\"\n                },\n                \"attribute\": \"type\",\n                \"reflect\": false,\n                \"defaultValue\": \"'determinate'\"\n            },\n            \"reversed\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If true, reverse the progress bar direction.\"\n                },\n                \"attribute\": \"reversed\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"value\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The value determines how much of the active bar should display when the\\n`type` is `\\\"determinate\\\"`.\\nThe value should be between [0, 1].\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": false,\n                \"defaultValue\": \"0\"\n            },\n            \"buffer\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If the buffer and value are smaller than 1, the buffer circles will show.\\nThe buffer should be between [0, 1].\"\n                },\n                \"attribute\": \"buffer\",\n                \"reflect\": false,\n                \"defaultValue\": \"1\"\n            },\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            }\n        };\n    }\n}\nconst renderIndeterminate = () => {\n    return (h(\"div\", { part: \"track\", class: \"progress-buffer-bar\" }, h(\"div\", { class: \"indeterminate-bar-primary\" }, h(\"span\", { part: \"progress\", class: \"progress-indeterminate\" })), h(\"div\", { class: \"indeterminate-bar-secondary\" }, h(\"span\", { part: \"progress\", class: \"progress-indeterminate\" }))));\n};\nconst renderProgress = (value, buffer) => {\n    const finalValue = clamp(0, value, 1);\n    const finalBuffer = clamp(0, buffer, 1);\n    return [\n        h(\"div\", { part: \"progress\", class: \"progress\", style: { transform: `scaleX(${finalValue})` } }),\n        /**\n         * Buffer circles with two container to move\n         * the circles behind the buffer progress\n         * with respecting the animation.\n         * When finalBuffer === 1, we use display: none\n         * instead of removing the element to avoid flickering.\n         */\n        h(\"div\", { class: { 'buffer-circles-container': true, 'ion-hide': finalBuffer === 1 }, style: { transform: `translateX(${finalBuffer * 100}%)` } }, h(\"div\", { class: \"buffer-circles-container\", style: { transform: `translateX(-${finalBuffer * 100}%)` } }, h(\"div\", { part: \"stream\", class: \"buffer-circles\" }))),\n        h(\"div\", { part: \"track\", class: \"progress-buffer-bar\", style: { transform: `scaleX(${finalBuffer})` } }),\n    ];\n};\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the select\n   * @prop --padding-top: Top padding of the select\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the select\n   * @prop --padding-bottom: Bottom padding of the select\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the select\n   *\n   * @prop --placeholder-color: Color of the select placeholder text\n   * @prop --placeholder-opacity: Opacity of the select placeholder text\n   *\n   * @prop --highlight-height: The height of the highlight on the select. Only applies to md mode.\n   * @prop --highlight-color-focused: The color of the highlight on the select when focused\n   * @prop --highlight-color-invalid: The color of the highlight on the select when invalid\n   * @prop --highlight-color-valid: The color of the highlight on the select when valid\n   *\n   * @prop --border-color: Color of the select border\n   * @prop --border-radius: Radius of the select border. A large radius may display unevenly when using fill=\"outline\"; if needed, use shape=\"round\" instead or increase --padding-start.\n   * @prop --border-style: Style of the select border\n   * @prop --border-width: Width of the select border\n   *\n   * @prop --ripple-color: The color of the ripple effect on MD mode.\n   */\n  --padding-top: 0px;\n  --padding-end: 0px;\n  --padding-bottom: 0px;\n  --padding-start: 0px;\n  --placeholder-color: currentColor;\n  --placeholder-opacity: var(--ion-placeholder-opacity, 0.6);\n  --background: transparent;\n  --border-style: solid;\n  --highlight-color-focused: var(--ion-color-primary, #0054e9);\n  --highlight-color-valid: var(--ion-color-success, #2dd55b);\n  --highlight-color-invalid: var(--ion-color-danger, #c5000f);\n  /**\n   * This is a private API that is used to switch\n   * out the highlight color based on the state\n   * of the component without having to write\n   * different selectors for different fill variants.\n   */\n  --highlight-color: var(--highlight-color-focused);\n  display: block;\n  position: relative;\n  width: 100%;\n  min-height: 44px;\n  font-family: var(--ion-font-family, inherit);\n  white-space: nowrap;\n  cursor: pointer;\n  z-index: 2;\n}\n\n/**\n * Since the label sits on top of the element,\n * the component needs to be taller otherwise the\n * label will appear too close to the select text.\n */\n:host(.select-label-placement-floating),\n:host(.select-label-placement-stacked) {\n  min-height: 56px;\n}\n\n:host(.ion-color) {\n  --highlight-color-focused: var(--ion-color-base);\n}\n\n:host(.in-item) {\n  flex: 1 1 0;\n}\n\n:host(.select-disabled) {\n  pointer-events: none;\n}\n\n:host(.ion-focused) button {\n  border: 2px solid #5e9ed6;\n}\n\n/**\n * Select can be slotted\n * in components such as item and\n * toolbar which is why we do not\n * limit the below behavior to just ion-item.\n */\n:host([slot=start]),\n:host([slot=end]) {\n  width: auto;\n}\n\n.select-placeholder {\n  color: var(--placeholder-color);\n  opacity: var(--placeholder-opacity);\n}\n\nbutton {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n  opacity: 0;\n  overflow: hidden;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n.select-icon {\n  -webkit-margin-start: 4px;\n  margin-inline-start: 4px;\n  -webkit-margin-end: 0;\n  margin-inline-end: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  position: relative;\n  /**\n   * Prevent the icon from shrinking when the label and/or\n   * selected item text is long enough to fill the rest of\n   * the container.\n   */\n  flex-shrink: 0;\n}\n\n/**\n * Ensure that the select icon has\n * the correct color contrast when\n * used inside of an item.\n */\n:host(.in-item-color) .select-icon {\n  color: inherit;\n}\n\n/**\n * The select icon should be centered with\n * the entire container not just the control\n * with floating/stacked labels.\n */\n:host(.select-label-placement-stacked) .select-icon,\n:host(.select-label-placement-floating) .select-icon {\n  position: absolute;\n  height: 100%;\n}\n\n/**\n * This positions the icon at the correct\n * edge of the component with LTR and RTL\n * text directions. The position mixin cannot be\n * used here because the icon is in the Shadow DOM.\n */\n:host(.select-ltr.select-label-placement-stacked) .select-icon,\n:host(.select-ltr.select-label-placement-floating) .select-icon {\n  right: var(--padding-end, 0);\n}\n\n:host(.select-rtl.select-label-placement-stacked) .select-icon,\n:host(.select-rtl.select-label-placement-floating) .select-icon {\n  left: var(--padding-start, 0);\n}\n\n.select-text {\n  flex: 1;\n  min-width: 16px;\n  font-size: inherit;\n  text-overflow: ellipsis;\n  white-space: inherit;\n  overflow: hidden;\n}\n\n.select-wrapper {\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  border-radius: var(--border-radius);\n  display: flex;\n  position: relative;\n  flex-grow: 1;\n  align-items: center;\n  height: inherit;\n  /**\n   * This allows developers to set the height\n   * on the host of the element but still have\n   * the label take up the full height\n   * of the parent.\n   */\n  min-height: inherit;\n  transition: background-color 15ms linear;\n  background: var(--background);\n  line-height: normal;\n  cursor: inherit;\n  box-sizing: border-box;\n}\n\n.select-wrapper .select-placeholder {\n  /**\n   * When the floating label appears on top of the\n   * select, we need to fade the text out so that the\n   * label does not overlap with the placeholder.\n   */\n  transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.select-wrapper-inner {\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n}\n\n:host(.select-label-placement-stacked) .select-wrapper-inner,\n:host(.select-label-placement-floating) .select-wrapper-inner {\n  /**\n   * When using a stacked/floating label, the inner wrapper is\n   * stacked vertically under the label container. This line\n   * ensures that the inner wrapper fills all the remaining height\n   * of the component.\n   */\n  flex-grow: 1;\n}\n\n:host(.ion-touched.ion-invalid) {\n  --highlight-color: var(--highlight-color-invalid);\n}\n\n/**\n * The component highlight is only shown\n * on focus, so we can safely set the valid\n * color state when touched/valid. If we\n * set it when .has-focus is present then\n * the highlight color would change\n * from the valid color to the component's\n * color during the transition after the\n * component loses focus.\n */\n:host(.ion-valid) {\n  --highlight-color: var(--highlight-color-valid);\n}\n\n.label-text-wrapper {\n  /**\n   * This causes the label to take up\n   * the entire height of its container\n   * while still keeping the text centered.\n   */\n  display: flex;\n  align-items: center;\n  /**\n   * Label text should not extend\n   * beyond the bounds of the select.\n   * However, we do not set the max\n   * width to 100% because then\n   * only the label would show and users\n   * would not be able to see what they are typing.\n   */\n  max-width: 200px;\n  transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1), transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  /**\n   * This ensures that double tapping this text\n   * clicks the <label> and focuses the input\n   * when a screen reader is enabled.\n   */\n  pointer-events: none;\n}\n\n/**\n * We need to use two elements instead of\n * one. The .label-text-wrapper is responsible\n * for centering the label text vertically regardless\n * of the input height using flexbox.\n *\n * The .label-text element is responsible for controlling\n * overflow when label-placement=\"fixed\".\n * We want the ellipses to show up when the\n * fixed label overflows, but text-overflow: ellipsis only\n * works on block-level elements. A flex item is\n * considered blockified (https://www.w3.org/TR/css-display-3/#blockify).\n */\n.label-text,\n::slotted([slot=label]) {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n/**\n * If no label text is placed into the slot\n * then the element should be hidden otherwise\n * there will be additional margins added.\n */\n.label-text-wrapper-hidden,\n.select-outline-notch-hidden {\n  display: none;\n}\n\n.native-wrapper {\n  display: flex;\n  align-items: center;\n  /**\n   * When the floating label appears on top of the\n   * input, we need to fade the input out so that the\n   * label does not overlap with the placeholder.\n   */\n  transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  /**\n   * This ensures that the .select-text gets\n   * truncated with ellipses when the text is\n   * too long for the screen.\n   */\n  overflow: hidden;\n}\n\n:host(.select-justify-space-between) .select-wrapper {\n  justify-content: space-between;\n}\n\n:host(.select-justify-start) .select-wrapper {\n  justify-content: start;\n}\n\n:host(.select-justify-end) .select-wrapper {\n  justify-content: end;\n}\n\n/**\n * Label is on the left of the input in LTR and\n * on the right in RTL.\n */\n:host(.select-label-placement-start) .select-wrapper {\n  flex-direction: row;\n}\n\n:host(.select-label-placement-start) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the select should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n/**\n * Label is on the right of the select in LTR and\n * on the left in RTL.\n */\n:host(.select-label-placement-end) .select-wrapper {\n  flex-direction: row-reverse;\n}\n\n/**\n * The margin between the label and\n * the select should be on the start\n * when the label sits at the end.\n */\n:host(.select-label-placement-end) .label-text-wrapper {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 0;\n  margin-inline-end: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n:host(.select-label-placement-fixed) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the select should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n/**\n * Label is on the left of the select in LTR and\n * on the right in RTL. Label also has a fixed width.\n */\n:host(.select-label-placement-fixed) .label-text-wrapper {\n  flex: 0 0 100px;\n  width: 100px;\n  min-width: 100px;\n  max-width: 200px;\n}\n\n/**\n * Stacked: Label sits above the select and is scaled down.\n * Floating: Label sits over the select when the select has no\n * value and is blurred. Label sits above the input and is scaled\n * down when the select is focused or has a value.\n *\n */\n:host(.select-label-placement-stacked) .select-wrapper,\n:host(.select-label-placement-floating) .select-wrapper {\n  flex-direction: column;\n  align-items: start;\n}\n\n/**\n * Ensures that the label animates\n * up and to the left in LTR or\n * up and to the right in RTL.\n */\n:host(.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-label-placement-floating) .label-text-wrapper {\n  max-width: 100%;\n}\n\n:host(.select-ltr.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-ltr.select-label-placement-floating) .label-text-wrapper {\n  transform-origin: left top;\n}\n\n:host(.select-rtl.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-rtl.select-label-placement-floating) .label-text-wrapper {\n  transform-origin: right top;\n}\n\n/**\n * Ensures the select does not\n * overlap the label.\n * Also ensure that the native wrapper\n * takes up the remaining available height and width.\n */\n:host(.select-label-placement-stacked) .native-wrapper,\n:host(.select-label-placement-floating) .native-wrapper {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 1px;\n  margin-bottom: 0;\n  flex-grow: 1;\n  width: 100%;\n}\n\n/**\n * This makes the label sit over the select\n * when the select is blurred and has no value.\n * The label should not sit over the select if the\n * select has a placeholder.\n * Note: This is different from what ion-input does\n * because the activating the select causes an overlay\n * to appear. This makes it hard to read the placeholder.\n * With ion-input, the input just focuses and the placeholder\n * is still easy to read.\n */\n:host(.select-label-placement-floating) .label-text-wrapper {\n  transform: translateY(100%) scale(1);\n}\n\n/**\n * The placeholder should be hidden when the label\n * is on top of the select. This prevents the label\n * from overlapping any placeholder value.\n *\n * TODO(FW-5592): Remove :not(.label-floating) piece\n */\n:host(.select-label-placement-floating:not(.label-floating)) .native-wrapper .select-placeholder {\n  opacity: 0;\n}\n\n/**\n * We don't use .label-floating here because that would\n * also include the case where the label is floating due\n * to content in the start/end slot. We want the opacity\n * to remain at the default in this case, since the select\n * isn't being actively interacted with.\n *\n * TODO(FW-5592): Change entire selector to:\n * :host(.label-floating.select-label-placement-floating) .native-wrapper .select-placeholder\n */\n:host(.select-expanded.select-label-placement-floating) .native-wrapper .select-placeholder,\n:host(.ion-focused.select-label-placement-floating) .native-wrapper .select-placeholder,\n:host(.has-value.select-label-placement-floating) .native-wrapper .select-placeholder {\n  opacity: 1;\n}\n\n/**\n * This makes the label sit above the input.\n */\n:host(.label-floating) .label-text-wrapper {\n  transform: translateY(50%) scale(0.75);\n  /**\n   * Label text should not extend\n   * beyond the bounds of the input.\n   */\n  max-width: calc(100% / 0.75);\n}\n\n::slotted([slot=start]), ::slotted([slot=end]) {\n  /**\n   * Prevent the slots from shrinking when the label and/or\n   * selected item text is long enough to fill the rest of\n   * the container.\n   */\n  flex-shrink: 0;\n}\n\n::slotted([slot=start]:last-of-type) {\n  margin-inline-end: 16px;\n  margin-inline-start: 0;\n}\n\n::slotted([slot=end]:first-of-type) {\n  margin-inline-start: 16px;\n  margin-inline-end: 0;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --highlight-height: 0px;\n}\n\n.select-icon {\n  width: 1.125rem;\n  height: 1.125rem;\n  color: var(--ion-color-step-650, var(--ion-text-color-step-350, #595959));\n}\n\n:host(.select-label-placement-stacked) .select-wrapper-inner,\n:host(.select-label-placement-floating) .select-wrapper-inner {\n  width: calc(100% - 1.125rem - 4px);\n}\n\n:host(.select-disabled) {\n  opacity: 0.3;\n}\n\n/**\n * Slotted buttons have a lot of default padding that can\n * cause them to look misaligned from other pieces such\n * as the control's label, especially when using a clear\n * fill. We also make them circular to ensure that non-\n * clear buttons and the focus/hover state on clear ones\n * don't look too crowded.\n */\n::slotted(ion-button[slot=start].button-has-icon-only),\n::slotted(ion-button[slot=end].button-has-icon-only) {\n  --border-radius: 50%;\n  --padding-start: 0;\n  --padding-end: 0;\n  --padding-top: 0;\n  --padding-bottom: 0;\n  aspect-ratio: 1;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the select\n   * @prop --padding-top: Top padding of the select\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the select\n   * @prop --padding-bottom: Bottom padding of the select\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the select\n   *\n   * @prop --placeholder-color: Color of the select placeholder text\n   * @prop --placeholder-opacity: Opacity of the select placeholder text\n   *\n   * @prop --highlight-height: The height of the highlight on the select. Only applies to md mode.\n   * @prop --highlight-color-focused: The color of the highlight on the select when focused\n   * @prop --highlight-color-invalid: The color of the highlight on the select when invalid\n   * @prop --highlight-color-valid: The color of the highlight on the select when valid\n   *\n   * @prop --border-color: Color of the select border\n   * @prop --border-radius: Radius of the select border. A large radius may display unevenly when using fill=\"outline\"; if needed, use shape=\"round\" instead or increase --padding-start.\n   * @prop --border-style: Style of the select border\n   * @prop --border-width: Width of the select border\n   *\n   * @prop --ripple-color: The color of the ripple effect on MD mode.\n   */\n  --padding-top: 0px;\n  --padding-end: 0px;\n  --padding-bottom: 0px;\n  --padding-start: 0px;\n  --placeholder-color: currentColor;\n  --placeholder-opacity: var(--ion-placeholder-opacity, 0.6);\n  --background: transparent;\n  --border-style: solid;\n  --highlight-color-focused: var(--ion-color-primary, #0054e9);\n  --highlight-color-valid: var(--ion-color-success, #2dd55b);\n  --highlight-color-invalid: var(--ion-color-danger, #c5000f);\n  /**\n   * This is a private API that is used to switch\n   * out the highlight color based on the state\n   * of the component without having to write\n   * different selectors for different fill variants.\n   */\n  --highlight-color: var(--highlight-color-focused);\n  display: block;\n  position: relative;\n  width: 100%;\n  min-height: 44px;\n  font-family: var(--ion-font-family, inherit);\n  white-space: nowrap;\n  cursor: pointer;\n  z-index: 2;\n}\n\n/**\n * Since the label sits on top of the element,\n * the component needs to be taller otherwise the\n * label will appear too close to the select text.\n */\n:host(.select-label-placement-floating),\n:host(.select-label-placement-stacked) {\n  min-height: 56px;\n}\n\n:host(.ion-color) {\n  --highlight-color-focused: var(--ion-color-base);\n}\n\n:host(.in-item) {\n  flex: 1 1 0;\n}\n\n:host(.select-disabled) {\n  pointer-events: none;\n}\n\n:host(.ion-focused) button {\n  border: 2px solid #5e9ed6;\n}\n\n/**\n * Select can be slotted\n * in components such as item and\n * toolbar which is why we do not\n * limit the below behavior to just ion-item.\n */\n:host([slot=start]),\n:host([slot=end]) {\n  width: auto;\n}\n\n.select-placeholder {\n  color: var(--placeholder-color);\n  opacity: var(--placeholder-opacity);\n}\n\nbutton {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n  opacity: 0;\n  overflow: hidden;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n.select-icon {\n  -webkit-margin-start: 4px;\n  margin-inline-start: 4px;\n  -webkit-margin-end: 0;\n  margin-inline-end: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  position: relative;\n  /**\n   * Prevent the icon from shrinking when the label and/or\n   * selected item text is long enough to fill the rest of\n   * the container.\n   */\n  flex-shrink: 0;\n}\n\n/**\n * Ensure that the select icon has\n * the correct color contrast when\n * used inside of an item.\n */\n:host(.in-item-color) .select-icon {\n  color: inherit;\n}\n\n/**\n * The select icon should be centered with\n * the entire container not just the control\n * with floating/stacked labels.\n */\n:host(.select-label-placement-stacked) .select-icon,\n:host(.select-label-placement-floating) .select-icon {\n  position: absolute;\n  height: 100%;\n}\n\n/**\n * This positions the icon at the correct\n * edge of the component with LTR and RTL\n * text directions. The position mixin cannot be\n * used here because the icon is in the Shadow DOM.\n */\n:host(.select-ltr.select-label-placement-stacked) .select-icon,\n:host(.select-ltr.select-label-placement-floating) .select-icon {\n  right: var(--padding-end, 0);\n}\n\n:host(.select-rtl.select-label-placement-stacked) .select-icon,\n:host(.select-rtl.select-label-placement-floating) .select-icon {\n  left: var(--padding-start, 0);\n}\n\n.select-text {\n  flex: 1;\n  min-width: 16px;\n  font-size: inherit;\n  text-overflow: ellipsis;\n  white-space: inherit;\n  overflow: hidden;\n}\n\n.select-wrapper {\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  border-radius: var(--border-radius);\n  display: flex;\n  position: relative;\n  flex-grow: 1;\n  align-items: center;\n  height: inherit;\n  /**\n   * This allows developers to set the height\n   * on the host of the element but still have\n   * the label take up the full height\n   * of the parent.\n   */\n  min-height: inherit;\n  transition: background-color 15ms linear;\n  background: var(--background);\n  line-height: normal;\n  cursor: inherit;\n  box-sizing: border-box;\n}\n\n.select-wrapper .select-placeholder {\n  /**\n   * When the floating label appears on top of the\n   * select, we need to fade the text out so that the\n   * label does not overlap with the placeholder.\n   */\n  transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.select-wrapper-inner {\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n}\n\n:host(.select-label-placement-stacked) .select-wrapper-inner,\n:host(.select-label-placement-floating) .select-wrapper-inner {\n  /**\n   * When using a stacked/floating label, the inner wrapper is\n   * stacked vertically under the label container. This line\n   * ensures that the inner wrapper fills all the remaining height\n   * of the component.\n   */\n  flex-grow: 1;\n}\n\n:host(.ion-touched.ion-invalid) {\n  --highlight-color: var(--highlight-color-invalid);\n}\n\n/**\n * The component highlight is only shown\n * on focus, so we can safely set the valid\n * color state when touched/valid. If we\n * set it when .has-focus is present then\n * the highlight color would change\n * from the valid color to the component's\n * color during the transition after the\n * component loses focus.\n */\n:host(.ion-valid) {\n  --highlight-color: var(--highlight-color-valid);\n}\n\n.label-text-wrapper {\n  /**\n   * This causes the label to take up\n   * the entire height of its container\n   * while still keeping the text centered.\n   */\n  display: flex;\n  align-items: center;\n  /**\n   * Label text should not extend\n   * beyond the bounds of the select.\n   * However, we do not set the max\n   * width to 100% because then\n   * only the label would show and users\n   * would not be able to see what they are typing.\n   */\n  max-width: 200px;\n  transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1), transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  /**\n   * This ensures that double tapping this text\n   * clicks the <label> and focuses the input\n   * when a screen reader is enabled.\n   */\n  pointer-events: none;\n}\n\n/**\n * We need to use two elements instead of\n * one. The .label-text-wrapper is responsible\n * for centering the label text vertically regardless\n * of the input height using flexbox.\n *\n * The .label-text element is responsible for controlling\n * overflow when label-placement=\"fixed\".\n * We want the ellipses to show up when the\n * fixed label overflows, but text-overflow: ellipsis only\n * works on block-level elements. A flex item is\n * considered blockified (https://www.w3.org/TR/css-display-3/#blockify).\n */\n.label-text,\n::slotted([slot=label]) {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n/**\n * If no label text is placed into the slot\n * then the element should be hidden otherwise\n * there will be additional margins added.\n */\n.label-text-wrapper-hidden,\n.select-outline-notch-hidden {\n  display: none;\n}\n\n.native-wrapper {\n  display: flex;\n  align-items: center;\n  /**\n   * When the floating label appears on top of the\n   * input, we need to fade the input out so that the\n   * label does not overlap with the placeholder.\n   */\n  transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  /**\n   * This ensures that the .select-text gets\n   * truncated with ellipses when the text is\n   * too long for the screen.\n   */\n  overflow: hidden;\n}\n\n:host(.select-justify-space-between) .select-wrapper {\n  justify-content: space-between;\n}\n\n:host(.select-justify-start) .select-wrapper {\n  justify-content: start;\n}\n\n:host(.select-justify-end) .select-wrapper {\n  justify-content: end;\n}\n\n/**\n * Label is on the left of the input in LTR and\n * on the right in RTL.\n */\n:host(.select-label-placement-start) .select-wrapper {\n  flex-direction: row;\n}\n\n:host(.select-label-placement-start) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the select should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n/**\n * Label is on the right of the select in LTR and\n * on the left in RTL.\n */\n:host(.select-label-placement-end) .select-wrapper {\n  flex-direction: row-reverse;\n}\n\n/**\n * The margin between the label and\n * the select should be on the start\n * when the label sits at the end.\n */\n:host(.select-label-placement-end) .label-text-wrapper {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 0;\n  margin-inline-end: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n:host(.select-label-placement-fixed) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the select should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n/**\n * Label is on the left of the select in LTR and\n * on the right in RTL. Label also has a fixed width.\n */\n:host(.select-label-placement-fixed) .label-text-wrapper {\n  flex: 0 0 100px;\n  width: 100px;\n  min-width: 100px;\n  max-width: 200px;\n}\n\n/**\n * Stacked: Label sits above the select and is scaled down.\n * Floating: Label sits over the select when the select has no\n * value and is blurred. Label sits above the input and is scaled\n * down when the select is focused or has a value.\n *\n */\n:host(.select-label-placement-stacked) .select-wrapper,\n:host(.select-label-placement-floating) .select-wrapper {\n  flex-direction: column;\n  align-items: start;\n}\n\n/**\n * Ensures that the label animates\n * up and to the left in LTR or\n * up and to the right in RTL.\n */\n:host(.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-label-placement-floating) .label-text-wrapper {\n  max-width: 100%;\n}\n\n:host(.select-ltr.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-ltr.select-label-placement-floating) .label-text-wrapper {\n  transform-origin: left top;\n}\n\n:host(.select-rtl.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-rtl.select-label-placement-floating) .label-text-wrapper {\n  transform-origin: right top;\n}\n\n/**\n * Ensures the select does not\n * overlap the label.\n * Also ensure that the native wrapper\n * takes up the remaining available height and width.\n */\n:host(.select-label-placement-stacked) .native-wrapper,\n:host(.select-label-placement-floating) .native-wrapper {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 1px;\n  margin-bottom: 0;\n  flex-grow: 1;\n  width: 100%;\n}\n\n/**\n * This makes the label sit over the select\n * when the select is blurred and has no value.\n * The label should not sit over the select if the\n * select has a placeholder.\n * Note: This is different from what ion-input does\n * because the activating the select causes an overlay\n * to appear. This makes it hard to read the placeholder.\n * With ion-input, the input just focuses and the placeholder\n * is still easy to read.\n */\n:host(.select-label-placement-floating) .label-text-wrapper {\n  transform: translateY(100%) scale(1);\n}\n\n/**\n * The placeholder should be hidden when the label\n * is on top of the select. This prevents the label\n * from overlapping any placeholder value.\n *\n * TODO(FW-5592): Remove :not(.label-floating) piece\n */\n:host(.select-label-placement-floating:not(.label-floating)) .native-wrapper .select-placeholder {\n  opacity: 0;\n}\n\n/**\n * We don't use .label-floating here because that would\n * also include the case where the label is floating due\n * to content in the start/end slot. We want the opacity\n * to remain at the default in this case, since the select\n * isn't being actively interacted with.\n *\n * TODO(FW-5592): Change entire selector to:\n * :host(.label-floating.select-label-placement-floating) .native-wrapper .select-placeholder\n */\n:host(.select-expanded.select-label-placement-floating) .native-wrapper .select-placeholder,\n:host(.ion-focused.select-label-placement-floating) .native-wrapper .select-placeholder,\n:host(.has-value.select-label-placement-floating) .native-wrapper .select-placeholder {\n  opacity: 1;\n}\n\n/**\n * This makes the label sit above the input.\n */\n:host(.label-floating) .label-text-wrapper {\n  transform: translateY(50%) scale(0.75);\n  /**\n   * Label text should not extend\n   * beyond the bounds of the input.\n   */\n  max-width: calc(100% / 0.75);\n}\n\n::slotted([slot=start]), ::slotted([slot=end]) {\n  /**\n   * Prevent the slots from shrinking when the label and/or\n   * selected item text is long enough to fill the rest of\n   * the container.\n   */\n  flex-shrink: 0;\n}\n\n::slotted([slot=start]:last-of-type) {\n  margin-inline-end: 16px;\n  margin-inline-start: 0;\n}\n\n::slotted([slot=end]:first-of-type) {\n  margin-inline-start: 16px;\n  margin-inline-end: 0;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host(.select-fill-solid) {\n  --background: var(--ion-color-step-50, var(--ion-background-color-step-50, #f2f2f2));\n  --border-color: var(--ion-color-step-500, var(--ion-background-color-step-500, gray));\n  --border-radius: 4px;\n  --padding-start: 16px;\n  --padding-end: 16px;\n  min-height: 56px;\n}\n\n/**\n * The solid fill style has a border\n * at the bottom of the select wrapper.\n * As a result, the border on the \"bottom\n * content\" is not needed.\n */\n:host(.select-fill-solid) .select-wrapper {\n  border-bottom: var(--border-width) var(--border-style) var(--border-color);\n}\n\n/**\n * If the select has a validity state, the\n * border should reflect that as a color.\n */\n:host(.has-focus.select-fill-solid.ion-valid),\n:host(.select-fill-solid.ion-touched.ion-invalid) {\n  --border-color: var(--highlight-color);\n}\n\n:host(.select-fill-solid) .select-bottom {\n  border-top: none;\n}\n\n/**\n * Background and border should be\n * slightly darker on hover.\n */\n@media (any-hover: hover) {\n  :host(.select-fill-solid:hover) {\n    --background: var(--ion-color-step-100, var(--ion-background-color-step-100, #e6e6e6));\n    --border-color: var(--ion-color-step-750, var(--ion-background-color-step-750, #404040));\n  }\n}\n/**\n * Background and border should be\n * much darker on focus.\n */\n:host(.select-fill-solid.select-expanded),\n:host(.select-fill-solid.ion-focused) {\n  --background: var(--ion-color-step-150, var(--ion-background-color-step-150, #d9d9d9));\n  --border-color: var(--ion-color-step-750, var(--ion-background-color-step-750, #404040));\n}\n\n:host(.select-fill-solid) .select-wrapper {\n  /**\n   * Only the top left and top right borders should.\n   * have a radius when using a solid fill.\n   */\n  border-start-start-radius: var(--border-radius);\n  border-start-end-radius: var(--border-radius);\n  border-end-end-radius: 0px;\n  border-end-start-radius: 0px;\n}\n\n:host(.label-floating.select-fill-solid) .label-text-wrapper {\n  /**\n   * Label text should not extend\n   * beyond the bounds of the select.\n   */\n  max-width: calc(100% / 0.75);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host(.select-fill-outline) {\n  --border-color: var(--ion-color-step-300, var(--ion-background-color-step-300, #b3b3b3));\n  --border-radius: 4px;\n  --padding-start: 16px;\n  --padding-end: 16px;\n  min-height: 56px;\n}\n\n:host(.select-fill-outline.select-shape-round) {\n  --border-radius: 28px;\n  --padding-start: 32px;\n  --padding-end: 32px;\n}\n\n/**\n * If the select has a validity state, the\n * border should reflect that as a color.\n */\n:host(.has-focus.select-fill-outline.ion-valid),\n:host(.select-fill-outline.ion-touched.ion-invalid) {\n  --border-color: var(--highlight-color);\n}\n\n/**\n * Border should be\n * slightly darker on hover.\n */\n@media (any-hover: hover) {\n  :host(.select-fill-outline:hover) {\n    --border-color: var(--ion-color-step-750, var(--ion-background-color-step-750, #404040));\n  }\n}\n/**\n * The border should get thicker\n * and take on component color when\n * the select is focused.\n */\n:host(.select-fill-outline.select-expanded),\n:host(.select-fill-outline.ion-focused) {\n  --border-width: var(--highlight-height);\n  --border-color: var(--highlight-color);\n}\n\n/**\n * The bottom content should never have\n * a border with the outline style.\n */\n:host(.select-fill-outline) .select-bottom {\n  border-top: none;\n}\n\n/**\n * Outline selects do not have a bottom border.\n * Instead, they have a border that wraps the\n * select + label.\n */\n:host(.select-fill-outline) .select-wrapper {\n  border-bottom: none;\n}\n\n:host(.select-ltr.select-fill-outline.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-ltr.select-fill-outline.select-label-placement-floating) .label-text-wrapper {\n  transform-origin: left top;\n}\n\n:host(.select-rtl.select-fill-outline.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-rtl.select-fill-outline.select-label-placement-floating) .label-text-wrapper {\n  transform-origin: right top;\n}\n\n:host(.select-fill-outline.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-fill-outline.select-label-placement-floating) .label-text-wrapper {\n  position: absolute;\n  /**\n   * Label text should not extend\n   * beyond the bounds of the select.\n   */\n  max-width: calc(100% - var(--padding-start) - var(--padding-end));\n}\n\n/**\n * The label should appear on top of an outline\n * container that overlaps it so it is always clickable.\n */\n:host(.select-fill-outline) .label-text-wrapper,\n:host(.select-fill-outline) .label-text-wrapper {\n  position: relative;\n  z-index: 1;\n}\n\n/**\n * This makes the label sit above the select.\n */\n:host(.label-floating.select-fill-outline) .label-text-wrapper {\n  transform: translateY(-32%) scale(0.75);\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  /**\n   * Label text should not extend\n   * beyond the bounds of the select.\n   */\n  max-width: calc((100% - var(--padding-start) - var(--padding-end) - 8px) / 0.75);\n}\n\n/**\n * This ensures that the select does not\n * overlap the floating label while still\n * remaining visually centered.\n */\n:host(.select-fill-outline.select-label-placement-stacked) select,\n:host(.select-fill-outline.select-label-placement-floating) select {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\n\n:host(.select-fill-outline) .select-outline-container {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n\n:host(.select-fill-outline) .select-outline-start,\n:host(.select-fill-outline) .select-outline-end {\n  pointer-events: none;\n}\n\n/**\n * By default, each piece of the container should have\n * a top and bottom border. This gives the appearance\n * of a unified container with a border.\n */\n:host(.select-fill-outline) .select-outline-start,\n:host(.select-fill-outline) .select-outline-notch,\n:host(.select-fill-outline) .select-outline-end {\n  border-top: var(--border-width) var(--border-style) var(--border-color);\n  border-bottom: var(--border-width) var(--border-style) var(--border-color);\n  /**\n   * `border-box` is applied in the global\n   * Ionic stylesheet, but since this is in\n   * the Shadow DOM, these elements do not\n   * receive the global style. The outline\n   * pieces for `ion-input` do because that\n   * component is in the Light DOM.\n   */\n  box-sizing: border-box;\n}\n\n/**\n * Ensures long labels do not cause the notch to flow\n * out of bounds.\n */\n:host(.select-fill-outline) .select-outline-notch {\n  max-width: calc(100% - var(--padding-start) - var(--padding-end));\n}\n\n/**\n * This element ensures that the notch used\n * the size of the scaled text so that the\n * border cut out is the correct width.\n * The text in this element should not\n * be interactive.\n */\n:host(.select-fill-outline) .notch-spacer {\n  /**\n   * We need $select-md-floating-label-padding of padding on the right.\n   * However, we also subtracted $select-md-floating-label-padding from\n   * the width of .select-outline-start\n   * to create space, so we need to take\n   * that into consideration here.\n   */\n  -webkit-padding-end: 8px;\n  padding-inline-end: 8px;\n  font-size: calc(1em * 0.75);\n  opacity: 0;\n  pointer-events: none;\n}\n\n:host(.select-fill-outline) .select-outline-start {\n  -webkit-border-start: var(--border-width) var(--border-style) var(--border-color);\n  border-inline-start: var(--border-width) var(--border-style) var(--border-color);\n}\n\n:host(.select-fill-outline) .select-outline-start {\n  border-start-start-radius: var(--border-radius);\n  border-start-end-radius: 0px;\n  border-end-end-radius: 0px;\n  border-end-start-radius: var(--border-radius);\n}\n\n:host(.select-fill-outline) .select-outline-start {\n  /**\n   * There should be spacing between the translated text\n   * and .select-outline-start. However, we can't add this\n   * spacing onto the notch because it would cause the\n   * label to look like it is not aligned with the\n   * text select. Instead, we subtract a few pixels from\n   * this element.\n   */\n  width: calc(var(--padding-start) - 4px);\n}\n\n:host(.select-fill-outline) .select-outline-end {\n  -webkit-border-end: var(--border-width) var(--border-style) var(--border-color);\n  border-inline-end: var(--border-width) var(--border-style) var(--border-color);\n}\n\n:host(.select-fill-outline) .select-outline-end {\n  border-start-start-radius: 0px;\n  border-start-end-radius: var(--border-radius);\n  border-end-end-radius: var(--border-radius);\n  border-end-start-radius: 0px;\n}\n\n:host(.select-fill-outline) .select-outline-end {\n  /**\n   * The ending outline fragment\n   * should take up the remaining free space.\n   */\n  flex-grow: 1;\n}\n\n/**\n * When the select either has focus or a value,\n * there should be a \"cut out\" at the top for\n * the floating/stacked label. We simulate this \"cut out\"\n * by removing the top border from the notch fragment.\n */\n:host(.label-floating.select-fill-outline) .select-outline-notch {\n  border-top: none;\n}\n\n:host {\n  --border-width: 1px;\n  --border-color: var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, var(--ion-background-color-step-150, rgba(0, 0, 0, 0.13)))));\n  --highlight-height: 2px;\n}\n\n.select-icon {\n  width: 0.8125rem;\n  transition: transform 0.15s cubic-bezier(0.4, 0, 0.2, 1);\n  color: var(--ion-color-step-500, var(--ion-text-color-step-500, gray));\n}\n\n/**\n * When the select is focused the label should\n * take on the highlight color. This should\n * only apply to floating or stacked labels.\n */\n:host(.select-label-placement-floating.select-expanded) .label-text-wrapper,\n:host(.select-label-placement-floating.ion-focused) .label-text-wrapper,\n:host(.select-label-placement-stacked.select-expanded) .label-text-wrapper,\n:host(.select-label-placement-stacked.ion-focused) .label-text-wrapper {\n  color: var(--highlight-color);\n}\n\n:host(.has-focus.select-label-placement-floating.ion-valid) .label-text-wrapper,\n:host(.select-label-placement-floating.ion-touched.ion-invalid) .label-text-wrapper,\n:host(.has-focus.select-label-placement-stacked.ion-valid) .label-text-wrapper,\n:host(.select-label-placement-stacked.ion-touched.ion-invalid) .label-text-wrapper {\n  color: var(--highlight-color);\n}\n\n.select-highlight {\n  bottom: -1px;\n  position: absolute;\n  width: 100%;\n  height: var(--highlight-height);\n  transform: scale(0);\n  transition: transform 200ms;\n  background: var(--highlight-color);\n}\n.select-highlight {\n  inset-inline-start: 0;\n}\n\n:host(.select-expanded) .select-highlight,\n:host(.ion-focused) .select-highlight {\n  transform: scale(1);\n}\n\n/**\n * Adjust the highlight up by 1px\n * so it is not cut off by the\n * the item's line (if one is present).\n */\n:host(.in-item) .select-highlight {\n  bottom: 0;\n}\n:host(.in-item) .select-highlight {\n  inset-inline-start: 0;\n}\n\n/**\n * This rotates the chevron icon\n * when the select is activated.\n * This should only happen on MD.\n */\n:host(.select-expanded:not(.has-expanded-icon)) .select-icon {\n  transform: rotate(180deg);\n}\n\n/**\n * When the select is focused the icon should\n * take on the highlight color.\n * The icon should also take on the highlight\n * color if there is a validation state.\n */\n:host(.select-expanded) .select-wrapper .select-icon,\n:host(.has-focus.ion-valid) .select-wrapper .select-icon,\n:host(.ion-touched.ion-invalid) .select-wrapper .select-icon,\n:host(.ion-focused) .select-wrapper .select-icon {\n  color: var(--highlight-color);\n}\n\n:host(.select-shape-round) {\n  --border-radius: 16px;\n}\n\n:host(.select-label-placement-stacked) .select-wrapper-inner,\n:host(.select-label-placement-floating) .select-wrapper-inner {\n  width: calc(100% - 0.8125rem - 4px);\n}\n\n:host(.select-disabled) {\n  opacity: 0.38;\n}\n\n/**\n * Slotted buttons have a lot of default padding that can\n * cause them to look misaligned from other pieces such\n * as the control's label, especially when using a clear\n * fill. We also make them circular to ensure that non-\n * clear buttons and the focus/hover state on clear ones\n * don't look too crowded.\n */\n::slotted(ion-button[slot=start].button-has-icon-only),\n::slotted(ion-button[slot=end].button-has-icon-only) {\n  --border-radius: 50%;\n  --padding-start: 8px;\n  --padding-end: 8px;\n  --padding-top: 8px;\n  --padding-bottom: 8px;\n  aspect-ratio: 1;\n  min-height: 40px;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h, forceUpdate } from \"@stencil/core\";\nimport { compareOptions, createNotchController, isOptionSelected } from \"../../utils/forms/index\";\nimport { focusVisibleElement, renderHiddenInput, inheritAttributes } from \"../../utils/helpers\";\nimport { actionSheetController, alertController, popoverController } from \"../../utils/overlays\";\nimport { isRTL } from \"../../utils/rtl/index\";\nimport { createColorClasses, hostContext } from \"../../utils/theme\";\nimport { watchForOptions } from \"../../utils/watch-options\";\nimport { caretDownSharp, chevronExpand } from \"ionicons/icons\";\nimport { getIonMode } from \"../../global/ionic-global\";\n// TODO(FW-2832): types\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @slot label - The label text to associate with the select. Use the `labelPlacement` property to control where the label is placed relative to the select. Use this if you need to render a label with custom HTML.\n * @slot start - Content to display at the leading edge of the select.\n * @slot end - Content to display at the trailing edge of the select.\n *\n * @part placeholder - The text displayed in the select when there is no value.\n * @part text - The displayed value of the select.\n * @part icon - The select icon container.\n * @part container - The container for the selected text or placeholder.\n * @part label - The label text describing the select.\n */\nexport class Select {\n    constructor() {\n        this.inputId = `ion-sel-${selectIds++}`;\n        this.inheritedAttributes = {};\n        this.onClick = (ev) => {\n            const target = ev.target;\n            const closestSlot = target.closest('[slot=\"start\"], [slot=\"end\"]');\n            if (target === this.el || closestSlot === null) {\n                this.setFocus();\n                this.open(ev);\n            }\n            else {\n                /**\n                 * Prevent clicks to the start/end slots from opening the select.\n                 * We ensure the target isn't this element in case the select is slotted\n                 * in, for example, an item. This would prevent the select from ever\n                 * being opened since the element itself has slot=\"start\"/\"end\".\n                 *\n                 * Clicking a slotted element also causes a click\n                 * on the <label> element (since it wraps the slots).\n                 * Clicking <label> dispatches another click event on\n                 * the native form control that then bubbles up to this\n                 * listener. This additional event targets the host\n                 * element, so the select overlay is opened.\n                 *\n                 * When the slotted elements are clicked (and therefore\n                 * the ancestor <label> element) we want to prevent the label\n                 * from dispatching another click event.\n                 *\n                 * Do not call stopPropagation() because this will cause\n                 * click handlers on the slotted elements to never fire in React.\n                 * When developers do onClick in React a native \"click\" listener\n                 * is added on the root element, not the slotted element. When that\n                 * native click listener fires, React then dispatches the synthetic\n                 * click event on the slotted element. However, if stopPropagation\n                 * is called then the native click event will never bubble up\n                 * to the root element.\n                 */\n                ev.preventDefault();\n            }\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.isExpanded = false;\n        this.cancelText = 'Cancel';\n        this.color = undefined;\n        this.compareWith = undefined;\n        this.disabled = false;\n        this.fill = undefined;\n        this.interface = 'alert';\n        this.interfaceOptions = {};\n        this.justify = 'space-between';\n        this.label = undefined;\n        this.labelPlacement = 'start';\n        this.multiple = false;\n        this.name = this.inputId;\n        this.okText = 'OK';\n        this.placeholder = undefined;\n        this.selectedText = undefined;\n        this.toggleIcon = undefined;\n        this.expandedIcon = undefined;\n        this.shape = undefined;\n        this.value = undefined;\n    }\n    styleChanged() {\n        this.emitStyle();\n    }\n    setValue(value) {\n        this.value = value;\n        this.ionChange.emit({ value });\n    }\n    async connectedCallback() {\n        const { el } = this;\n        this.notchController = createNotchController(el, () => this.notchSpacerEl, () => this.labelSlot);\n        this.updateOverlayOptions();\n        this.emitStyle();\n        this.mutationO = watchForOptions(this.el, 'ion-select-option', async () => {\n            this.updateOverlayOptions();\n            /**\n             * We need to re-render the component\n             * because one of the new ion-select-option\n             * elements may match the value. In this case,\n             * the rendered selected text should be updated.\n             */\n            forceUpdate(this);\n        });\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = inheritAttributes(this.el, ['aria-label']);\n    }\n    componentDidLoad() {\n        /**\n         * If any of the conditions that trigger the styleChanged callback\n         * are met on component load, it is possible the event emitted\n         * prior to a parent web component registering an event listener.\n         *\n         * To ensure the parent web component receives the event, we\n         * emit the style event again after the component has loaded.\n         *\n         * This is often seen in Angular with the `dist` output target.\n         */\n        this.emitStyle();\n    }\n    disconnectedCallback() {\n        if (this.mutationO) {\n            this.mutationO.disconnect();\n            this.mutationO = undefined;\n        }\n        if (this.notchController) {\n            this.notchController.destroy();\n            this.notchController = undefined;\n        }\n    }\n    /**\n     * Open the select overlay. The overlay is either an alert, action sheet, or popover,\n     * depending on the `interface` property on the `ion-select`.\n     *\n     * @param event The user interface event that called the open.\n     */\n    async open(event) {\n        if (this.disabled || this.isExpanded) {\n            return undefined;\n        }\n        this.isExpanded = true;\n        const overlay = (this.overlay = await this.createOverlay(event));\n        overlay.onDidDismiss().then(() => {\n            this.overlay = undefined;\n            this.isExpanded = false;\n            this.ionDismiss.emit();\n            this.setFocus();\n        });\n        await overlay.present();\n        // focus selected option for popovers\n        if (this.interface === 'popover') {\n            const indexOfSelected = this.childOpts.map((o) => o.value).indexOf(this.value);\n            if (indexOfSelected > -1) {\n                const selectedItem = overlay.querySelector(`.select-interface-option:nth-child(${indexOfSelected + 1})`);\n                if (selectedItem) {\n                    focusVisibleElement(selectedItem);\n                    /**\n                     * Browsers such as Firefox do not\n                     * correctly delegate focus when manually\n                     * focusing an element with delegatesFocus.\n                     * We work around this by manually focusing\n                     * the interactive element.\n                     * ion-radio and ion-checkbox are the only\n                     * elements that ion-select-popover uses, so\n                     * we only need to worry about those two components\n                     * when focusing.\n                     */\n                    const interactiveEl = selectedItem.querySelector('ion-radio, ion-checkbox');\n                    if (interactiveEl) {\n                        interactiveEl.focus();\n                    }\n                }\n            }\n            else {\n                /**\n                 * If no value is set then focus the first enabled option.\n                 */\n                const firstEnabledOption = overlay.querySelector('ion-radio:not(.radio-disabled), ion-checkbox:not(.checkbox-disabled)');\n                if (firstEnabledOption) {\n                    focusVisibleElement(firstEnabledOption.closest('ion-item'));\n                    /**\n                     * Focus the option for the same reason as we do above.\n                     */\n                    firstEnabledOption.focus();\n                }\n            }\n        }\n        return overlay;\n    }\n    createOverlay(ev) {\n        let selectInterface = this.interface;\n        if (selectInterface === 'action-sheet' && this.multiple) {\n            console.warn(`Select interface cannot be \"${selectInterface}\" with a multi-value select. Using the \"alert\" interface instead.`);\n            selectInterface = 'alert';\n        }\n        if (selectInterface === 'popover' && !ev) {\n            console.warn(`Select interface cannot be a \"${selectInterface}\" without passing an event. Using the \"alert\" interface instead.`);\n            selectInterface = 'alert';\n        }\n        if (selectInterface === 'action-sheet') {\n            return this.openActionSheet();\n        }\n        if (selectInterface === 'popover') {\n            return this.openPopover(ev);\n        }\n        return this.openAlert();\n    }\n    updateOverlayOptions() {\n        const overlay = this.overlay;\n        if (!overlay) {\n            return;\n        }\n        const childOpts = this.childOpts;\n        const value = this.value;\n        switch (this.interface) {\n            case 'action-sheet':\n                overlay.buttons = this.createActionSheetButtons(childOpts, value);\n                break;\n            case 'popover':\n                const popover = overlay.querySelector('ion-select-popover');\n                if (popover) {\n                    popover.options = this.createPopoverOptions(childOpts, value);\n                }\n                break;\n            case 'alert':\n                const inputType = this.multiple ? 'checkbox' : 'radio';\n                overlay.inputs = this.createAlertInputs(childOpts, inputType, value);\n                break;\n        }\n    }\n    createActionSheetButtons(data, selectValue) {\n        const actionSheetButtons = data.map((option) => {\n            const value = getOptionValue(option);\n            // Remove hydrated before copying over classes\n            const copyClasses = Array.from(option.classList)\n                .filter((cls) => cls !== 'hydrated')\n                .join(' ');\n            const optClass = `${OPTION_CLASS} ${copyClasses}`;\n            return {\n                role: isOptionSelected(selectValue, value, this.compareWith) ? 'selected' : '',\n                text: option.textContent,\n                cssClass: optClass,\n                handler: () => {\n                    this.setValue(value);\n                },\n            };\n        });\n        // Add \"cancel\" button\n        actionSheetButtons.push({\n            text: this.cancelText,\n            role: 'cancel',\n            handler: () => {\n                this.ionCancel.emit();\n            },\n        });\n        return actionSheetButtons;\n    }\n    createAlertInputs(data, inputType, selectValue) {\n        const alertInputs = data.map((option) => {\n            const value = getOptionValue(option);\n            // Remove hydrated before copying over classes\n            const copyClasses = Array.from(option.classList)\n                .filter((cls) => cls !== 'hydrated')\n                .join(' ');\n            const optClass = `${OPTION_CLASS} ${copyClasses}`;\n            return {\n                type: inputType,\n                cssClass: optClass,\n                label: option.textContent || '',\n                value,\n                checked: isOptionSelected(selectValue, value, this.compareWith),\n                disabled: option.disabled,\n            };\n        });\n        return alertInputs;\n    }\n    createPopoverOptions(data, selectValue) {\n        const popoverOptions = data.map((option) => {\n            const value = getOptionValue(option);\n            // Remove hydrated before copying over classes\n            const copyClasses = Array.from(option.classList)\n                .filter((cls) => cls !== 'hydrated')\n                .join(' ');\n            const optClass = `${OPTION_CLASS} ${copyClasses}`;\n            return {\n                text: option.textContent || '',\n                cssClass: optClass,\n                value,\n                checked: isOptionSelected(selectValue, value, this.compareWith),\n                disabled: option.disabled,\n                handler: (selected) => {\n                    this.setValue(selected);\n                    if (!this.multiple) {\n                        this.close();\n                    }\n                },\n            };\n        });\n        return popoverOptions;\n    }\n    async openPopover(ev) {\n        const { fill, labelPlacement } = this;\n        const interfaceOptions = this.interfaceOptions;\n        const mode = getIonMode(this);\n        const showBackdrop = mode === 'md' ? false : true;\n        const multiple = this.multiple;\n        const value = this.value;\n        let event = ev;\n        let size = 'auto';\n        const hasFloatingOrStackedLabel = labelPlacement === 'floating' || labelPlacement === 'stacked';\n        /**\n         * The popover should take up the full width\n         * when using a fill in MD mode or if the\n         * label is floating/stacked.\n         */\n        if (hasFloatingOrStackedLabel || (mode === 'md' && fill !== undefined)) {\n            size = 'cover';\n            /**\n             * Otherwise the popover\n             * should be positioned relative\n             * to the native element.\n             */\n        }\n        else {\n            event = Object.assign(Object.assign({}, ev), { detail: {\n                    ionShadowTarget: this.nativeWrapperEl,\n                } });\n        }\n        const popoverOpts = Object.assign(Object.assign({ mode,\n            event, alignment: 'center', size,\n            showBackdrop }, interfaceOptions), { component: 'ion-select-popover', cssClass: ['select-popover', interfaceOptions.cssClass], componentProps: {\n                header: interfaceOptions.header,\n                subHeader: interfaceOptions.subHeader,\n                message: interfaceOptions.message,\n                multiple,\n                value,\n                options: this.createPopoverOptions(this.childOpts, value),\n            } });\n        /**\n         * Workaround for Stencil to autodefine\n         * ion-select-popover and ion-popover when\n         * using Custom Elements build.\n         */\n        // eslint-disable-next-line\n        if (false) {\n            // eslint-disable-next-line\n            // @ts-ignore\n            document.createElement('ion-select-popover');\n            document.createElement('ion-popover');\n        }\n        return popoverController.create(popoverOpts);\n    }\n    async openActionSheet() {\n        const mode = getIonMode(this);\n        const interfaceOptions = this.interfaceOptions;\n        const actionSheetOpts = Object.assign(Object.assign({ mode }, interfaceOptions), { buttons: this.createActionSheetButtons(this.childOpts, this.value), cssClass: ['select-action-sheet', interfaceOptions.cssClass] });\n        /**\n         * Workaround for Stencil to autodefine\n         * ion-action-sheet when\n         * using Custom Elements build.\n         */\n        // eslint-disable-next-line\n        if (false) {\n            // eslint-disable-next-line\n            // @ts-ignore\n            document.createElement('ion-action-sheet');\n        }\n        return actionSheetController.create(actionSheetOpts);\n    }\n    async openAlert() {\n        const interfaceOptions = this.interfaceOptions;\n        const inputType = this.multiple ? 'checkbox' : 'radio';\n        const mode = getIonMode(this);\n        const alertOpts = Object.assign(Object.assign({ mode }, interfaceOptions), { header: interfaceOptions.header ? interfaceOptions.header : this.labelText, inputs: this.createAlertInputs(this.childOpts, inputType, this.value), buttons: [\n                {\n                    text: this.cancelText,\n                    role: 'cancel',\n                    handler: () => {\n                        this.ionCancel.emit();\n                    },\n                },\n                {\n                    text: this.okText,\n                    handler: (selectedValues) => {\n                        this.setValue(selectedValues);\n                    },\n                },\n            ], cssClass: [\n                'select-alert',\n                interfaceOptions.cssClass,\n                this.multiple ? 'multiple-select-alert' : 'single-select-alert',\n            ] });\n        /**\n         * Workaround for Stencil to autodefine\n         * ion-alert when\n         * using Custom Elements build.\n         */\n        // eslint-disable-next-line\n        if (false) {\n            // eslint-disable-next-line\n            // @ts-ignore\n            document.createElement('ion-alert');\n        }\n        return alertController.create(alertOpts);\n    }\n    /**\n     * Close the select interface.\n     */\n    close() {\n        if (!this.overlay) {\n            return Promise.resolve(false);\n        }\n        return this.overlay.dismiss();\n    }\n    hasValue() {\n        return this.getText() !== '';\n    }\n    get childOpts() {\n        return Array.from(this.el.querySelectorAll('ion-select-option'));\n    }\n    /**\n     * Returns any plaintext associated with\n     * the label (either prop or slot).\n     * Note: This will not return any custom\n     * HTML. Use the `hasLabel` getter if you\n     * want to know if any slotted label content\n     * was passed.\n     */\n    get labelText() {\n        const { label } = this;\n        if (label !== undefined) {\n            return label;\n        }\n        const { labelSlot } = this;\n        if (labelSlot !== null) {\n            return labelSlot.textContent;\n        }\n        return;\n    }\n    getText() {\n        const selectedText = this.selectedText;\n        if (selectedText != null && selectedText !== '') {\n            return selectedText;\n        }\n        return generateText(this.childOpts, this.value, this.compareWith);\n    }\n    setFocus() {\n        if (this.focusEl) {\n            this.focusEl.focus();\n        }\n    }\n    emitStyle() {\n        const { disabled } = this;\n        const style = {\n            'interactive-disabled': disabled,\n        };\n        this.ionStyle.emit(style);\n    }\n    renderLabel() {\n        const { label } = this;\n        return (h(\"div\", { class: {\n                'label-text-wrapper': true,\n                'label-text-wrapper-hidden': !this.hasLabel,\n            }, part: \"label\" }, label === undefined ? h(\"slot\", { name: \"label\" }) : h(\"div\", { class: \"label-text\" }, label)));\n    }\n    componentDidRender() {\n        var _a;\n        (_a = this.notchController) === null || _a === void 0 ? void 0 : _a.calculateNotchWidth();\n    }\n    /**\n     * Gets any content passed into the `label` slot,\n     * not the <slot> definition.\n     */\n    get labelSlot() {\n        return this.el.querySelector('[slot=\"label\"]');\n    }\n    /**\n     * Returns `true` if label content is provided\n     * either by a prop or a content. If you want\n     * to get the plaintext value of the label use\n     * the `labelText` getter instead.\n     */\n    get hasLabel() {\n        return this.label !== undefined || this.labelSlot !== null;\n    }\n    /**\n     * Renders the border container\n     * when fill=\"outline\".\n     */\n    renderLabelContainer() {\n        const mode = getIonMode(this);\n        const hasOutlineFill = mode === 'md' && this.fill === 'outline';\n        if (hasOutlineFill) {\n            /**\n             * The outline fill has a special outline\n             * that appears around the select and the label.\n             * Certain stacked and floating label placements cause the\n             * label to translate up and create a \"cut out\"\n             * inside of that border by using the notch-spacer element.\n             */\n            return [\n                h(\"div\", { class: \"select-outline-container\" }, h(\"div\", { class: \"select-outline-start\" }), h(\"div\", { class: {\n                        'select-outline-notch': true,\n                        'select-outline-notch-hidden': !this.hasLabel,\n                    } }, h(\"div\", { class: \"notch-spacer\", \"aria-hidden\": \"true\", ref: (el) => (this.notchSpacerEl = el) }, this.label)), h(\"div\", { class: \"select-outline-end\" })),\n                this.renderLabel(),\n            ];\n        }\n        /**\n         * If not using the outline style,\n         * we can render just the label.\n         */\n        return this.renderLabel();\n    }\n    /**\n     * Renders either the placeholder\n     * or the selected values based on\n     * the state of the select.\n     */\n    renderSelectText() {\n        const { placeholder } = this;\n        const displayValue = this.getText();\n        let addPlaceholderClass = false;\n        let selectText = displayValue;\n        if (selectText === '' && placeholder !== undefined) {\n            selectText = placeholder;\n            addPlaceholderClass = true;\n        }\n        const selectTextClasses = {\n            'select-text': true,\n            'select-placeholder': addPlaceholderClass,\n        };\n        const textPart = addPlaceholderClass ? 'placeholder' : 'text';\n        return (h(\"div\", { \"aria-hidden\": \"true\", class: selectTextClasses, part: textPart }, selectText));\n    }\n    /**\n     * Renders the chevron icon\n     * next to the select text.\n     */\n    renderSelectIcon() {\n        const mode = getIonMode(this);\n        const { isExpanded, toggleIcon, expandedIcon } = this;\n        let icon;\n        if (isExpanded && expandedIcon !== undefined) {\n            icon = expandedIcon;\n        }\n        else {\n            const defaultIcon = mode === 'ios' ? chevronExpand : caretDownSharp;\n            icon = toggleIcon !== null && toggleIcon !== void 0 ? toggleIcon : defaultIcon;\n        }\n        return h(\"ion-icon\", { class: \"select-icon\", part: \"icon\", \"aria-hidden\": \"true\", icon: icon });\n    }\n    get ariaLabel() {\n        var _a;\n        const { placeholder, inheritedAttributes } = this;\n        const displayValue = this.getText();\n        // The aria label should be preferred over visible text if both are specified\n        const definedLabel = (_a = inheritedAttributes['aria-label']) !== null && _a !== void 0 ? _a : this.labelText;\n        /**\n         * If developer has specified a placeholder\n         * and there is nothing selected, the selectText\n         * should have the placeholder value.\n         */\n        let renderedLabel = displayValue;\n        if (renderedLabel === '' && placeholder !== undefined) {\n            renderedLabel = placeholder;\n        }\n        /**\n         * If there is a developer-defined label,\n         * then we need to concatenate the developer label\n         * string with the current current value.\n         * The label for the control should be read\n         * before the values of the control.\n         */\n        if (definedLabel !== undefined) {\n            renderedLabel = renderedLabel === '' ? definedLabel : `${definedLabel}, ${renderedLabel}`;\n        }\n        return renderedLabel;\n    }\n    renderListbox() {\n        const { disabled, inputId, isExpanded } = this;\n        return (h(\"button\", { disabled: disabled, id: inputId, \"aria-label\": this.ariaLabel, \"aria-haspopup\": \"dialog\", \"aria-expanded\": `${isExpanded}`, onFocus: this.onFocus, onBlur: this.onBlur, ref: (focusEl) => (this.focusEl = focusEl) }));\n    }\n    render() {\n        const { disabled, el, isExpanded, expandedIcon, labelPlacement, justify, placeholder, fill, shape, name, value } = this;\n        const mode = getIonMode(this);\n        const hasFloatingOrStackedLabel = labelPlacement === 'floating' || labelPlacement === 'stacked';\n        const justifyEnabled = !hasFloatingOrStackedLabel;\n        const rtl = isRTL(el) ? 'rtl' : 'ltr';\n        const inItem = hostContext('ion-item', this.el);\n        const shouldRenderHighlight = mode === 'md' && fill !== 'outline' && !inItem;\n        const hasValue = this.hasValue();\n        const hasStartEndSlots = el.querySelector('[slot=\"start\"], [slot=\"end\"]') !== null;\n        renderHiddenInput(true, el, name, parseValue(value), disabled);\n        /**\n         * If the label is stacked, it should always sit above the select.\n         * For floating labels, the label should move above the select if\n         * the select has a value, is open, or has anything in either\n         * the start or end slot.\n         *\n         * If there is content in the start slot, the label would overlap\n         * it if not forced to float. This is also applied to the end slot\n         * because with the default or solid fills, the select is not\n         * vertically centered in the container, but the label is. This\n         * causes the slots and label to appear vertically offset from each\n         * other when the label isn't floating above the input. This doesn't\n         * apply to the outline fill, but this was not accounted for to keep\n         * things consistent.\n         *\n         * TODO(FW-5592): Remove hasStartEndSlots condition\n         */\n        const labelShouldFloat = labelPlacement === 'stacked' || (labelPlacement === 'floating' && (hasValue || isExpanded || hasStartEndSlots));\n        return (h(Host, { key: 'e14586e887c0b73457b9f1e8f0585dfc7d590051', onClick: this.onClick, class: createColorClasses(this.color, {\n                [mode]: true,\n                'in-item': inItem,\n                'in-item-color': hostContext('ion-item.ion-color', el),\n                'select-disabled': disabled,\n                'select-expanded': isExpanded,\n                'has-expanded-icon': expandedIcon !== undefined,\n                'has-value': hasValue,\n                'label-floating': labelShouldFloat,\n                'has-placeholder': placeholder !== undefined,\n                'ion-focusable': true,\n                [`select-${rtl}`]: true,\n                [`select-fill-${fill}`]: fill !== undefined,\n                [`select-justify-${justify}`]: justifyEnabled,\n                [`select-shape-${shape}`]: shape !== undefined,\n                [`select-label-placement-${labelPlacement}`]: true,\n            }) }, h(\"label\", { key: 'b44929542c809f2dca25afc588701762a083edd1', class: \"select-wrapper\", id: \"select-label\" }, this.renderLabelContainer(), h(\"div\", { key: '195e3fad9cea0363ff00bf257ec2975fe5aa6887', class: \"select-wrapper-inner\" }, h(\"slot\", { key: '9da7161a69b92d6fd124a478348d3fa420092f26', name: \"start\" }), h(\"div\", { key: '49c589c164d167de0ba5741a0c80fba58ea0bec6', class: \"native-wrapper\", ref: (el) => (this.nativeWrapperEl = el), part: \"container\" }, this.renderSelectText(), this.renderListbox()), h(\"slot\", { key: 'de1536d910fceb8e2dbdda13abcf88ee969888b8', name: \"end\" }), !hasFloatingOrStackedLabel && this.renderSelectIcon()), hasFloatingOrStackedLabel && this.renderSelectIcon(), shouldRenderHighlight && h(\"div\", { key: 'e821b7b32cd1996eaa6d471df9b531ad0d491098', class: \"select-highlight\" }))));\n    }\n    static get is() { return \"ion-select\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"select.ios.scss\"],\n            \"md\": [\"select.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"select.ios.css\"],\n            \"md\": [\"select.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"cancelText\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The text to display on the cancel button.\"\n                },\n                \"attribute\": \"cancel-text\",\n                \"reflect\": false,\n                \"defaultValue\": \"'Cancel'\"\n            },\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\\n\\nThis property is only available when using the modern select syntax.\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"compareWith\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | SelectCompareFn | null\",\n                    \"resolved\": \"((currentValue: any, compareValue: any) => boolean) | null | string | undefined\",\n                    \"references\": {\n                        \"SelectCompareFn\": {\n                            \"location\": \"import\",\n                            \"path\": \"./select-interface\",\n                            \"id\": \"src/components/select/select-interface.ts::SelectCompareFn\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"This property allows developers to specify a custom function or property\\nname for comparing objects when determining the selected option in the\\nion-select. When not specified, the default behavior will use strict\\nequality (===) for comparison.\"\n                },\n                \"attribute\": \"compare-with\",\n                \"reflect\": false\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the select.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"fill\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'outline' | 'solid'\",\n                    \"resolved\": \"\\\"outline\\\" | \\\"solid\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The fill for the item. If `\\\"solid\\\"` the item will have a background. If\\n`\\\"outline\\\"` the item will be transparent with a border. Only available in `md` mode.\"\n                },\n                \"attribute\": \"fill\",\n                \"reflect\": false\n            },\n            \"interface\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"SelectInterface\",\n                    \"resolved\": \"\\\"action-sheet\\\" | \\\"alert\\\" | \\\"popover\\\"\",\n                    \"references\": {\n                        \"SelectInterface\": {\n                            \"location\": \"import\",\n                            \"path\": \"./select-interface\",\n                            \"id\": \"src/components/select/select-interface.ts::SelectInterface\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The interface the select should use: `action-sheet`, `popover` or `alert`.\"\n                },\n                \"attribute\": \"interface\",\n                \"reflect\": false,\n                \"defaultValue\": \"'alert'\"\n            },\n            \"interfaceOptions\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"any\",\n                    \"resolved\": \"any\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Any additional options that the `alert`, `action-sheet` or `popover` interface\\ncan take. See the [ion-alert docs](./alert), the\\n[ion-action-sheet docs](./action-sheet) and the\\n[ion-popover docs](./popover) for the\\ncreate options for each interface.\\n\\nNote: `interfaceOptions` will not override `inputs` or `buttons` with the `alert` interface.\"\n                },\n                \"attribute\": \"interface-options\",\n                \"reflect\": false,\n                \"defaultValue\": \"{}\"\n            },\n            \"justify\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'start' | 'end' | 'space-between'\",\n                    \"resolved\": \"\\\"end\\\" | \\\"space-between\\\" | \\\"start\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"How to pack the label and select within a line.\\n`justify` does not apply when the label and select\\nare on different lines when `labelPlacement` is set to\\n`\\\"floating\\\"` or `\\\"stacked\\\"`.\\n`\\\"start\\\"`: The label and select will appear on the left in LTR and\\non the right in RTL.\\n`\\\"end\\\"`: The label and select will appear on the right in LTR and\\non the left in RTL.\\n`\\\"space-between\\\"`: The label and select will appear on opposite\\nends of the line with space between the two elements.\"\n                },\n                \"attribute\": \"justify\",\n                \"reflect\": false,\n                \"defaultValue\": \"'space-between'\"\n            },\n            \"label\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The visible label associated with the select.\\n\\nUse this if you need to render a plaintext label.\\n\\nThe `label` property will take priority over the `label` slot if both are used.\"\n                },\n                \"attribute\": \"label\",\n                \"reflect\": false\n            },\n            \"labelPlacement\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'start' | 'end' | 'floating' | 'stacked' | 'fixed'\",\n                    \"resolved\": \"\\\"end\\\" | \\\"fixed\\\" | \\\"floating\\\" | \\\"stacked\\\" | \\\"start\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Where to place the label relative to the select.\\n`\\\"start\\\"`: The label will appear to the left of the select in LTR and to the right in RTL.\\n`\\\"end\\\"`: The label will appear to the right of the select in LTR and to the left in RTL.\\n`\\\"floating\\\"`: The label will appear smaller and above the select when the select is focused or it has a value. Otherwise it will appear on top of the select.\\n`\\\"stacked\\\"`: The label will appear smaller and above the select regardless even when the select is blurred or has no value.\\n`\\\"fixed\\\"`: The label has the same behavior as `\\\"start\\\"` except it also has a fixed width. Long text will be truncated with ellipses (\\\"...\\\").\\nWhen using `\\\"floating\\\"` or `\\\"stacked\\\"` we recommend initializing the select with either a `value` or a `placeholder`.\"\n                },\n                \"attribute\": \"label-placement\",\n                \"reflect\": false,\n                \"defaultValue\": \"'start'\"\n            },\n            \"multiple\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the select can accept multiple values.\"\n                },\n                \"attribute\": \"multiple\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The name of the control, which is submitted with the form data.\"\n                },\n                \"attribute\": \"name\",\n                \"reflect\": false,\n                \"defaultValue\": \"this.inputId\"\n            },\n            \"okText\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The text to display on the ok button.\"\n                },\n                \"attribute\": \"ok-text\",\n                \"reflect\": false,\n                \"defaultValue\": \"'OK'\"\n            },\n            \"placeholder\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The text to display when the select is empty.\"\n                },\n                \"attribute\": \"placeholder\",\n                \"reflect\": false\n            },\n            \"selectedText\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | null\",\n                    \"resolved\": \"null | string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The text to display instead of the selected option's value.\"\n                },\n                \"attribute\": \"selected-text\",\n                \"reflect\": false\n            },\n            \"toggleIcon\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The toggle icon to use. Defaults to `chevronExpand` for `ios` mode,\\nor `caretDownSharp` for `md` mode.\"\n                },\n                \"attribute\": \"toggle-icon\",\n                \"reflect\": false\n            },\n            \"expandedIcon\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The toggle icon to show when the select is open. If defined, the icon\\nrotation behavior in `md` mode will be disabled. If undefined, `toggleIcon`\\nwill be used for when the select is both open and closed.\"\n                },\n                \"attribute\": \"expanded-icon\",\n                \"reflect\": false\n            },\n            \"shape\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'round'\",\n                    \"resolved\": \"\\\"round\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The shape of the select. If \\\"round\\\" it will have an increased border radius.\"\n                },\n                \"attribute\": \"shape\",\n                \"reflect\": false\n            },\n            \"value\": {\n                \"type\": \"any\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"any | null\",\n                    \"resolved\": \"any\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The value of the select.\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"isExpanded\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionChange\",\n                \"name\": \"ionChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the value has changed.\\n\\nThis event will not emit when programmatically setting the `value` property.\"\n                },\n                \"complexType\": {\n                    \"original\": \"SelectChangeEventDetail\",\n                    \"resolved\": \"SelectChangeEventDetail<any>\",\n                    \"references\": {\n                        \"SelectChangeEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"./select-interface\",\n                            \"id\": \"src/components/select/select-interface.ts::SelectChangeEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"ionCancel\",\n                \"name\": \"ionCancel\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the selection is cancelled.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionDismiss\",\n                \"name\": \"ionDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the overlay is dismissed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionFocus\",\n                \"name\": \"ionFocus\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the select has focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionBlur\",\n                \"name\": \"ionBlur\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the select loses focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionStyle\",\n                \"name\": \"ionStyle\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Emitted when the styles change.\"\n                },\n                \"complexType\": {\n                    \"original\": \"StyleEventDetail\",\n                    \"resolved\": \"StyleEventDetail\",\n                    \"references\": {\n                        \"StyleEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::StyleEventDetail\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"open\": {\n                \"complexType\": {\n                    \"signature\": \"(event?: UIEvent) => Promise<any>\",\n                    \"parameters\": [{\n                            \"name\": \"event\",\n                            \"type\": \"UIEvent | undefined\",\n                            \"docs\": \"The user interface event that called the open.\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"UIEvent\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::UIEvent\"\n                        },\n                        \"HTMLElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLElement\"\n                        }\n                    },\n                    \"return\": \"Promise<any>\"\n                },\n                \"docs\": {\n                    \"text\": \"Open the select overlay. The overlay is either an alert, action sheet, or popover,\\ndepending on the `interface` property on the `ion-select`.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"event The user interface event that called the open.\"\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"disabled\",\n                \"methodName\": \"styleChanged\"\n            }, {\n                \"propName\": \"isExpanded\",\n                \"methodName\": \"styleChanged\"\n            }, {\n                \"propName\": \"placeholder\",\n                \"methodName\": \"styleChanged\"\n            }, {\n                \"propName\": \"value\",\n                \"methodName\": \"styleChanged\"\n            }];\n    }\n}\nconst getOptionValue = (el) => {\n    const value = el.value;\n    return value === undefined ? el.textContent || '' : value;\n};\nconst parseValue = (value) => {\n    if (value == null) {\n        return undefined;\n    }\n    if (Array.isArray(value)) {\n        return value.join(',');\n    }\n    return value.toString();\n};\nconst generateText = (opts, value, compareWith) => {\n    if (value === undefined) {\n        return '';\n    }\n    if (Array.isArray(value)) {\n        return value\n            .map((v) => textForValue(opts, v, compareWith))\n            .filter((opt) => opt !== null)\n            .join(', ');\n    }\n    else {\n        return textForValue(opts, value, compareWith) || '';\n    }\n};\nconst textForValue = (opts, value, compareWith) => {\n    const selectOpt = opts.find((opt) => {\n        return compareOptions(value, getOptionValue(opt), compareWith);\n    });\n    return selectOpt ? selectOpt.textContent : null;\n};\nlet selectIds = 0;\nconst OPTION_CLASS = 'select-interface-option';\n",":host {\n  display: none;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { getIonMode } from \"../../global/ionic-global\";\nexport class SelectOption {\n    constructor() {\n        this.inputId = `ion-selopt-${selectOptionIds++}`;\n        this.disabled = false;\n        this.value = undefined;\n    }\n    render() {\n        return h(Host, { key: 'ba5a9c695c53fe0802af11a49f4305a9b8f71773', role: \"option\", id: this.inputId, class: getIonMode(this) });\n    }\n    static get is() { return \"ion-select-option\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"select-option.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"select-option.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the select option. This property does not apply when `interface=\\\"action-sheet\\\"` as `ion-action-sheet` does not allow for disabled buttons.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"value\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"any | null\",\n                    \"resolved\": \"any\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The text value of the option.\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\nlet selectOptionIds = 0;\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --border: Border between panes\n   * @prop --side-min-width: Minimum width of the side pane. Does not apply when split pane is collapsed.\n   * @prop --side-max-width: Maximum width of the side pane. Does not apply when split pane is collapsed.\n   * @prop --side-width: Width of the side pane. Does not apply when split pane is collapsed.\n   */\n  --side-width: 100%;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  position: absolute;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  contain: strict;\n}\n\n:host(.split-pane-visible) ::slotted(.split-pane-main) {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: relative;\n  flex: 1;\n  box-shadow: none;\n  /**\n   * Content can overflow outside of a router outlet\n   * or a nav container to allow for the translucent\n   * tab bar effect to work. However, this can cause\n   * iOS page transitions to flow outside of the container\n   * and overlap the menu on larger viewports. As a result,\n   * we disable the overflow when that is the case.\n   */\n  overflow: hidden;\n  z-index: 0;\n}\n\n::slotted(.split-pane-side:not(ion-menu)) {\n  display: none;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --border: 0.55px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, var(--ion-background-color-step-250, #c8c7cc))));\n  --side-min-width: 270px;\n  --side-max-width: 28%;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --border: Border between panes\n   * @prop --side-min-width: Minimum width of the side pane. Does not apply when split pane is collapsed.\n   * @prop --side-max-width: Maximum width of the side pane. Does not apply when split pane is collapsed.\n   * @prop --side-width: Width of the side pane. Does not apply when split pane is collapsed.\n   */\n  --side-width: 100%;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  position: absolute;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  contain: strict;\n}\n\n:host(.split-pane-visible) ::slotted(.split-pane-main) {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: relative;\n  flex: 1;\n  box-shadow: none;\n  /**\n   * Content can overflow outside of a router outlet\n   * or a nav container to allow for the translucent\n   * tab bar effect to work. However, this can cause\n   * iOS page transitions to flow outside of the container\n   * and overlap the menu on larger viewports. As a result,\n   * we disable the overflow when that is the case.\n   */\n  overflow: hidden;\n  z-index: 0;\n}\n\n::slotted(.split-pane-side:not(ion-menu)) {\n  display: none;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --border: 1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, var(--ion-background-color-step-150, rgba(0, 0, 0, 0.13)))));\n  --side-min-width: 270px;\n  --side-max-width: 28%;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Build, Host, h } from \"@stencil/core\";\nimport { getIonMode } from \"../../global/ionic-global\";\n// TODO(FW-2832): types\nconst SPLIT_PANE_MAIN = 'split-pane-main';\nconst SPLIT_PANE_SIDE = 'split-pane-side';\nconst QUERY = {\n    xs: '(min-width: 0px)',\n    sm: '(min-width: 576px)',\n    md: '(min-width: 768px)',\n    lg: '(min-width: 992px)',\n    xl: '(min-width: 1200px)',\n    never: '',\n};\nexport class SplitPane {\n    constructor() {\n        this.visible = false;\n        this.contentId = undefined;\n        this.disabled = false;\n        this.when = QUERY['lg'];\n    }\n    visibleChanged(visible) {\n        this.ionSplitPaneVisible.emit({ visible });\n    }\n    /**\n     * @internal\n     */\n    async isVisible() {\n        return Promise.resolve(this.visible);\n    }\n    async connectedCallback() {\n        // TODO: connectedCallback is fired in CE build\n        // before WC is defined. This needs to be fixed in Stencil.\n        if (typeof customElements !== 'undefined' && customElements != null) {\n            await customElements.whenDefined('ion-split-pane');\n        }\n        this.styleMainElement();\n        this.updateState();\n    }\n    disconnectedCallback() {\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n    }\n    updateState() {\n        if (!Build.isBrowser) {\n            return;\n        }\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n        // Check if the split-pane is disabled\n        if (this.disabled) {\n            this.visible = false;\n            return;\n        }\n        // When query is a boolean\n        const query = this.when;\n        if (typeof query === 'boolean') {\n            this.visible = query;\n            return;\n        }\n        // When query is a string, let's find first if it is a shortcut\n        const mediaQuery = QUERY[query] || query;\n        // Media query is empty or null, we hide it\n        if (mediaQuery.length === 0) {\n            this.visible = false;\n            return;\n        }\n        // Listen on media query\n        const callback = (q) => {\n            this.visible = q.matches;\n        };\n        const mediaList = window.matchMedia(mediaQuery);\n        // TODO FW-5869\n        mediaList.addListener(callback);\n        this.rmL = () => mediaList.removeListener(callback);\n        this.visible = mediaList.matches;\n    }\n    /**\n     * Attempt to find the main content\n     * element inside of the split pane.\n     * If found, set it as the main node.\n     *\n     * We assume that the main node\n     * is available in the DOM on split\n     * pane load.\n     */\n    styleMainElement() {\n        if (!Build.isBrowser) {\n            return;\n        }\n        const contentId = this.contentId;\n        const children = this.el.children;\n        const nu = this.el.childElementCount;\n        let foundMain = false;\n        for (let i = 0; i < nu; i++) {\n            const child = children[i];\n            const isMain = contentId !== undefined && child.id === contentId;\n            if (isMain) {\n                if (foundMain) {\n                    console.warn('split pane cannot have more than one main node');\n                    return;\n                }\n                else {\n                    setPaneClass(child, isMain);\n                    foundMain = true;\n                }\n            }\n        }\n        if (!foundMain) {\n            console.warn('split pane does not have a specified main node');\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: 'd54c356cd4bff7e55325160882dea8249f47f388', class: {\n                [mode]: true,\n                // Used internally for styling\n                [`split-pane-${mode}`]: true,\n                'split-pane-visible': this.visible,\n            } }, h(\"slot\", { key: 'af62690d0fd686cfbd29d888c79eda9001f13e2f' })));\n    }\n    static get is() { return \"ion-split-pane\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"split-pane.ios.scss\"],\n            \"md\": [\"split-pane.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"split-pane.ios.css\"],\n            \"md\": [\"split-pane.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"contentId\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The `id` of the main content. When using\\na router this is typically `ion-router-outlet`.\\nWhen not using a router, this is typically\\nyour main view's `ion-content`. This is not the\\nid of the `ion-content` inside of your `ion-menu`.\"\n                },\n                \"attribute\": \"content-id\",\n                \"reflect\": true\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the split pane will be hidden.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"when\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | boolean\",\n                    \"resolved\": \"boolean | string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When the split-pane should be shown.\\nCan be a CSS media query expression, or a shortcut expression.\\nCan also be a boolean expression.\"\n                },\n                \"attribute\": \"when\",\n                \"reflect\": false,\n                \"defaultValue\": \"QUERY['lg']\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"visible\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionSplitPaneVisible\",\n                \"name\": \"ionSplitPaneVisible\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Expression to be called when the split-pane visibility has changed\"\n                },\n                \"complexType\": {\n                    \"original\": \"{ visible: boolean }\",\n                    \"resolved\": \"{ visible: boolean; }\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"isVisible\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<boolean>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"visible\",\n                \"methodName\": \"visibleChanged\"\n            }, {\n                \"propName\": \"disabled\",\n                \"methodName\": \"updateState\"\n            }, {\n                \"propName\": \"when\",\n                \"methodName\": \"updateState\"\n            }];\n    }\n}\nconst setPaneClass = (el, isMain) => {\n    let toAdd;\n    let toRemove;\n    if (isMain) {\n        toAdd = SPLIT_PANE_MAIN;\n        toRemove = SPLIT_PANE_SIDE;\n    }\n    else {\n        toAdd = SPLIT_PANE_SIDE;\n        toRemove = SPLIT_PANE_MAIN;\n    }\n    const classList = el.classList;\n    classList.add(toAdd);\n    classList.remove(toRemove);\n};\n",":host(.tab-hidden) {\n  /* stylelint-disable-next-line declaration-no-important */\n  display: none !important;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Build, Host, h } from \"@stencil/core\";\nimport { attachComponent } from \"../../utils/framework-delegate\";\nexport class Tab {\n    constructor() {\n        this.loaded = false;\n        this.active = false;\n        this.delegate = undefined;\n        this.tab = undefined;\n        this.component = undefined;\n    }\n    async componentWillLoad() {\n        if (Build.isDev) {\n            if (this.component !== undefined && this.el.childElementCount > 0) {\n                console.error('You can not use a lazy-loaded component in a tab and inlined content at the same time.' +\n                    `- Remove the component attribute in: <ion-tab component=\"${this.component}\">` +\n                    ` or` +\n                    `- Remove the embedded content inside the ion-tab: <ion-tab></ion-tab>`);\n            }\n        }\n        if (this.active) {\n            await this.setActive();\n        }\n    }\n    /** Set the active component for the tab */\n    async setActive() {\n        await this.prepareLazyLoaded();\n        this.active = true;\n    }\n    changeActive(isActive) {\n        if (isActive) {\n            this.prepareLazyLoaded();\n        }\n    }\n    prepareLazyLoaded() {\n        if (!this.loaded && this.component != null) {\n            this.loaded = true;\n            try {\n                return attachComponent(this.delegate, this.el, this.component, ['ion-page']);\n            }\n            catch (e) {\n                console.error(e);\n            }\n        }\n        return Promise.resolve(undefined);\n    }\n    render() {\n        const { tab, active, component } = this;\n        return (h(Host, { key: '46d5498418f5379861c3d7465e8021dec45f1200', role: \"tabpanel\", \"aria-hidden\": !active ? 'true' : null, \"aria-labelledby\": `tab-button-${tab}`, class: {\n                'ion-page': component === undefined,\n                'tab-hidden': !active,\n            } }, h(\"slot\", { key: 'b45045dccb87dfe75e3f5a5a474bb48b6c98e922' })));\n    }\n    static get is() { return \"ion-tab\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"tab.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"tab.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"active\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"active\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"delegate\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"FrameworkDelegate\",\n                    \"resolved\": \"FrameworkDelegate | undefined\",\n                    \"references\": {\n                        \"FrameworkDelegate\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::FrameworkDelegate\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                }\n            },\n            \"tab\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"A tab id must be provided for each `ion-tab`. It's used internally to reference\\nthe selected tab or by the router to switch between them.\"\n                },\n                \"attribute\": \"tab\",\n                \"reflect\": false\n            },\n            \"component\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"ComponentRef\",\n                    \"resolved\": \"Function | HTMLElement | null | string | undefined\",\n                    \"references\": {\n                        \"ComponentRef\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::ComponentRef\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The component to display inside of the tab.\"\n                },\n                \"attribute\": \"component\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get methods() {\n        return {\n            \"setActive\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Set the active component for the tab\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"active\",\n                \"methodName\": \"changeActive\"\n            }];\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the tab bar\n   * @prop --border: Border of the tab bar\n   * @prop --color: Color of the tab bar\n   */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: auto;\n  /* stylelint-disable */\n  padding-right: var(--ion-safe-area-right);\n  padding-bottom: var(--ion-safe-area-bottom, 0);\n  padding-left: var(--ion-safe-area-left);\n  /* stylelint-enable */\n  border-top: var(--border);\n  background: var(--background);\n  color: var(--color);\n  text-align: center;\n  contain: strict;\n  user-select: none;\n  z-index: 10;\n  /* stylelint-disable-next-line declaration-no-important */\n  box-sizing: content-box !important;\n}\n\n:host(.ion-color) ::slotted(ion-tab-button) {\n  --background-focused: var(--ion-color-shade);\n  --color-selected: var(--ion-color-contrast);\n}\n\n:host(.ion-color) ::slotted(.tab-selected) {\n  color: var(--ion-color-contrast);\n}\n\n:host(.ion-color),\n:host(.ion-color) ::slotted(ion-tab-button) {\n  color: rgba(var(--ion-color-contrast-rgb), 0.7);\n}\n\n:host(.ion-color),\n:host(.ion-color) ::slotted(ion-tab-button) {\n  background: var(--ion-color-base);\n}\n\n:host(.ion-color) ::slotted(ion-tab-button.ion-focused),\n:host(.tab-bar-translucent) ::slotted(ion-tab-button.ion-focused) {\n  background: var(--background-focused);\n}\n\n:host(.tab-bar-translucent) ::slotted(ion-tab-button) {\n  background: transparent;\n}\n\n:host([slot=top]) {\n  padding-top: var(--ion-safe-area-top, 0);\n  padding-bottom: 0;\n  border-top: 0;\n  border-bottom: var(--border);\n}\n\n:host(.tab-bar-hidden) {\n  /* stylelint-disable-next-line declaration-no-important */\n  display: none !important;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: var(--ion-tab-bar-background, var(--ion-color-step-50, var(--ion-background-color-step-50, #f7f7f7)));\n  --background-focused: var(--ion-tab-bar-background-focused, #e0e0e0);\n  --border: 0.55px solid var(--ion-tab-bar-border-color, var(--ion-border-color, var(--ion-color-step-150, var(--ion-background-color-step-150, rgba(0, 0, 0, 0.2)))));\n  --color: var(--ion-tab-bar-color, var(--ion-color-step-600, var(--ion-text-color-step-400, #666666)));\n  --color-selected: var(--ion-tab-bar-color-selected, var(--ion-color-primary, #0054e9));\n  height: 50px;\n}\n\n@supports (backdrop-filter: blur(0)) {\n  :host(.tab-bar-translucent) {\n    --background: rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8);\n    backdrop-filter: saturate(210%) blur(20px);\n  }\n  :host(.ion-color.tab-bar-translucent) {\n    background: rgba(var(--ion-color-base-rgb), 0.8);\n  }\n  :host(.tab-bar-translucent) ::slotted(ion-tab-button.ion-focused) {\n    background: rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.6);\n  }\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the tab bar\n   * @prop --border: Border of the tab bar\n   * @prop --color: Color of the tab bar\n   */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: auto;\n  /* stylelint-disable */\n  padding-right: var(--ion-safe-area-right);\n  padding-bottom: var(--ion-safe-area-bottom, 0);\n  padding-left: var(--ion-safe-area-left);\n  /* stylelint-enable */\n  border-top: var(--border);\n  background: var(--background);\n  color: var(--color);\n  text-align: center;\n  contain: strict;\n  user-select: none;\n  z-index: 10;\n  /* stylelint-disable-next-line declaration-no-important */\n  box-sizing: content-box !important;\n}\n\n:host(.ion-color) ::slotted(ion-tab-button) {\n  --background-focused: var(--ion-color-shade);\n  --color-selected: var(--ion-color-contrast);\n}\n\n:host(.ion-color) ::slotted(.tab-selected) {\n  color: var(--ion-color-contrast);\n}\n\n:host(.ion-color),\n:host(.ion-color) ::slotted(ion-tab-button) {\n  color: rgba(var(--ion-color-contrast-rgb), 0.7);\n}\n\n:host(.ion-color),\n:host(.ion-color) ::slotted(ion-tab-button) {\n  background: var(--ion-color-base);\n}\n\n:host(.ion-color) ::slotted(ion-tab-button.ion-focused),\n:host(.tab-bar-translucent) ::slotted(ion-tab-button.ion-focused) {\n  background: var(--background-focused);\n}\n\n:host(.tab-bar-translucent) ::slotted(ion-tab-button) {\n  background: transparent;\n}\n\n:host([slot=top]) {\n  padding-top: var(--ion-safe-area-top, 0);\n  padding-bottom: 0;\n  border-top: 0;\n  border-bottom: var(--border);\n}\n\n:host(.tab-bar-hidden) {\n  /* stylelint-disable-next-line declaration-no-important */\n  display: none !important;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: var(--ion-tab-bar-background, var(--ion-background-color, #fff));\n  --background-focused: var(--ion-tab-bar-background-focused, #e0e0e0);\n  --border: 1px solid var(--ion-tab-bar-border-color, var(--ion-border-color, var(--ion-color-step-150, var(--ion-background-color-step-150, rgba(0, 0, 0, 0.07)))));\n  --color: var(--ion-tab-bar-color, var(--ion-color-step-650, var(--ion-text-color-step-350, #595959)));\n  --color-selected: var(--ion-tab-bar-color-selected, var(--ion-color-primary, #0054e9));\n  height: 56px;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { createKeyboardController } from \"../../utils/keyboard/keyboard-controller\";\nimport { createColorClasses } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class TabBar {\n    constructor() {\n        this.keyboardCtrl = null;\n        this.keyboardVisible = false;\n        this.color = undefined;\n        this.selectedTab = undefined;\n        this.translucent = false;\n    }\n    selectedTabChanged() {\n        if (this.selectedTab !== undefined) {\n            this.ionTabBarChanged.emit({\n                tab: this.selectedTab,\n            });\n        }\n    }\n    componentWillLoad() {\n        this.selectedTabChanged();\n    }\n    async connectedCallback() {\n        this.keyboardCtrl = await createKeyboardController(async (keyboardOpen, waitForResize) => {\n            /**\n             * If the keyboard is hiding, then we need to wait\n             * for the webview to resize. Otherwise, the tab bar\n             * will flicker before the webview resizes.\n             */\n            if (keyboardOpen === false && waitForResize !== undefined) {\n                await waitForResize;\n            }\n            this.keyboardVisible = keyboardOpen; // trigger re-render by updating state\n        });\n    }\n    disconnectedCallback() {\n        if (this.keyboardCtrl) {\n            this.keyboardCtrl.destroy();\n        }\n    }\n    componentDidLoad() {\n        this.ionTabBarLoaded.emit();\n    }\n    render() {\n        const { color, translucent, keyboardVisible } = this;\n        const mode = getIonMode(this);\n        const shouldHide = keyboardVisible && this.el.getAttribute('slot') !== 'top';\n        return (h(Host, { key: '3a8595dd83f89e8319471a7a7f9f64b2565b384c', role: \"tablist\", \"aria-hidden\": shouldHide ? 'true' : null, class: createColorClasses(color, {\n                [mode]: true,\n                'tab-bar-translucent': translucent,\n                'tab-bar-hidden': shouldHide,\n            }) }, h(\"slot\", { key: '8b65eceb922f6abfa15f41046261586fb94b981f' })));\n    }\n    static get is() { return \"ion-tab-bar\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"tab-bar.ios.scss\"],\n            \"md\": [\"tab-bar.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"tab-bar.ios.css\"],\n            \"md\": [\"tab-bar.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"selectedTab\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The selected tab component\"\n                },\n                \"attribute\": \"selected-tab\",\n                \"reflect\": false\n            },\n            \"translucent\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the tab bar will be translucent.\\nOnly applies when the mode is `\\\"ios\\\"` and the device supports\\n[`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\"\n                },\n                \"attribute\": \"translucent\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"keyboardVisible\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionTabBarChanged\",\n                \"name\": \"ionTabBarChanged\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"TabBarChangedEventDetail\",\n                    \"resolved\": \"TabBarChangedEventDetail\",\n                    \"references\": {\n                        \"TabBarChangedEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"./tab-bar-interface\",\n                            \"id\": \"src/components/tab-bar/tab-bar-interface.ts::TabBarChangedEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"ionTabBarLoaded\",\n                \"name\": \"ionTabBarLoaded\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": \"This event is used in IonContent to correctly\\ncalculate the fullscreen content offsets\\nwhen IonTabBar is used.\"\n                        }],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"selectedTab\",\n                \"methodName\": \"selectedTabChanged\"\n            }];\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the tab button\n   * @prop --background-focused: Background of the tab button when focused with the tab key\n   * @prop --background-focused-opacity: Opacity of the tab button background when focused with the tab key\n   *\n   * @prop --color: Color of the tab button\n   * @prop --color-focused: Color of the tab button when focused with the tab key\n   * @prop --color-selected: Color of the selected tab button\n   *\n   * @prop --padding-top: Top padding of the tab button\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the tab button\n   * @prop --padding-bottom: Bottom padding of the tab button\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the tab button\n   *\n   * @prop --ripple-color: Color of the button ripple effect\n   */\n  --ripple-color: var(--color-selected);\n  --background-focused-opacity: 1;\n  flex: 1;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  outline: none;\n  background: var(--background);\n  color: var(--color);\n}\n\n.button-native {\n  border-radius: inherit;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  display: flex;\n  position: relative;\n  flex-direction: inherit;\n  align-items: inherit;\n  justify-content: inherit;\n  width: 100%;\n  height: 100%;\n  border: 0;\n  outline: none;\n  background: transparent;\n  text-decoration: none;\n  cursor: pointer;\n  overflow: hidden;\n  box-sizing: border-box;\n  -webkit-user-drag: none;\n}\n\n.button-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n.button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: inherit;\n  align-items: inherit;\n  justify-content: inherit;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n}\n\n:host(.ion-focused) .button-native {\n  color: var(--color-focused);\n}\n:host(.ion-focused) .button-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n@media (any-hover: hover) {\n  a:hover {\n    color: var(--color-selected);\n  }\n}\n:host(.tab-selected) {\n  color: var(--color-selected);\n}\n\n:host(.tab-hidden) {\n  /* stylelint-disable-next-line declaration-no-important */\n  display: none !important;\n}\n\n:host(.tab-disabled) {\n  pointer-events: none;\n  opacity: 0.4;\n}\n\n::slotted(ion-label),\n::slotted(ion-icon) {\n  display: block;\n  align-self: center;\n  max-width: 100%;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  box-sizing: border-box;\n}\n\n::slotted(ion-label) {\n  order: 0;\n}\n\n::slotted(ion-icon) {\n  order: -1;\n  height: 1em;\n}\n\n:host(.tab-has-label-only) ::slotted(ion-label) {\n  white-space: normal;\n}\n\n::slotted(ion-badge) {\n  box-sizing: border-box;\n  position: absolute;\n  z-index: 1;\n}\n\n:host(.tab-layout-icon-start) {\n  flex-direction: row;\n}\n\n:host(.tab-layout-icon-end) {\n  flex-direction: row-reverse;\n}\n\n:host(.tab-layout-icon-bottom) {\n  flex-direction: column-reverse;\n}\n\n:host(.tab-layout-icon-hide) ::slotted(ion-icon) {\n  display: none;\n}\n\n:host(.tab-layout-label-hide) ::slotted(ion-label) {\n  display: none;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --padding-top: 0;\n  --padding-end: 2px;\n  --padding-bottom: 0;\n  --padding-start: 2px;\n  max-width: 240px;\n  font-size: 10px;\n}\n\n::slotted(ion-badge) {\n  -webkit-padding-start: 6px;\n  padding-inline-start: 6px;\n  -webkit-padding-end: 6px;\n  padding-inline-end: 6px;\n  padding-top: 1px;\n  padding-bottom: 1px;\n  top: 4px;\n  height: auto;\n  font-size: 12px;\n  line-height: 16px;\n}\n::slotted(ion-badge) {\n  inset-inline-start: calc(50% + 6px);\n}\n\n::slotted(ion-icon) {\n  margin-top: 2px;\n  margin-bottom: 2px;\n  font-size: 24px;\n}\n\n::slotted(ion-icon::before) {\n  vertical-align: top;\n}\n\n::slotted(ion-label) {\n  margin-top: 0;\n  margin-bottom: 1px;\n  min-height: 11px;\n  font-weight: 500;\n}\n\n:host(.tab-has-label-only) ::slotted(ion-label) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  font-size: 12px;\n  font-size: 14px;\n  line-height: 1.1;\n}\n\n:host(.tab-layout-icon-end) ::slotted(ion-label),\n:host(.tab-layout-icon-start) ::slotted(ion-label),\n:host(.tab-layout-icon-hide) ::slotted(ion-label) {\n  margin-top: 2px;\n  margin-bottom: 2px;\n  font-size: 14px;\n  line-height: 1.1;\n}\n\n:host(.tab-layout-icon-end) ::slotted(ion-icon),\n:host(.tab-layout-icon-start) ::slotted(ion-icon) {\n  min-width: 24px;\n  height: 26px;\n  margin-top: 2px;\n  margin-bottom: 1px;\n  font-size: 24px;\n}\n\n:host(.tab-layout-icon-bottom) ::slotted(ion-badge) {\n  inset-inline-start: calc(50% + 12px);\n}\n\n:host(.tab-layout-icon-bottom) ::slotted(ion-icon) {\n  margin-top: 0;\n  margin-bottom: 1px;\n}\n\n:host(.tab-layout-icon-bottom) ::slotted(ion-label) {\n  margin-top: 4px;\n}\n\n:host(.tab-layout-icon-start) ::slotted(ion-badge),\n:host(.tab-layout-icon-end) ::slotted(ion-badge) {\n  top: 10px;\n}\n:host(.tab-layout-icon-start) ::slotted(ion-badge),\n:host(.tab-layout-icon-end) ::slotted(ion-badge) {\n  inset-inline-start: calc(50% + 35px);\n}\n\n:host(.tab-layout-icon-hide) ::slotted(ion-badge),\n:host(.tab-has-label-only) ::slotted(ion-badge) {\n  top: 10px;\n}\n:host(.tab-layout-icon-hide) ::slotted(ion-badge),\n:host(.tab-has-label-only) ::slotted(ion-badge) {\n  inset-inline-start: calc(50% + 30px);\n}\n\n:host(.tab-layout-label-hide) ::slotted(ion-badge),\n:host(.tab-has-icon-only) ::slotted(ion-badge) {\n  top: 10px;\n}\n\n:host(.tab-layout-label-hide) ::slotted(ion-icon) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n:host(.tab-layout-label-hide) ::slotted(ion-icon),\n:host(.tab-has-icon-only) ::slotted(ion-icon) {\n  font-size: 30px;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the tab button\n   * @prop --background-focused: Background of the tab button when focused with the tab key\n   * @prop --background-focused-opacity: Opacity of the tab button background when focused with the tab key\n   *\n   * @prop --color: Color of the tab button\n   * @prop --color-focused: Color of the tab button when focused with the tab key\n   * @prop --color-selected: Color of the selected tab button\n   *\n   * @prop --padding-top: Top padding of the tab button\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the tab button\n   * @prop --padding-bottom: Bottom padding of the tab button\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the tab button\n   *\n   * @prop --ripple-color: Color of the button ripple effect\n   */\n  --ripple-color: var(--color-selected);\n  --background-focused-opacity: 1;\n  flex: 1;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  outline: none;\n  background: var(--background);\n  color: var(--color);\n}\n\n.button-native {\n  border-radius: inherit;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  display: flex;\n  position: relative;\n  flex-direction: inherit;\n  align-items: inherit;\n  justify-content: inherit;\n  width: 100%;\n  height: 100%;\n  border: 0;\n  outline: none;\n  background: transparent;\n  text-decoration: none;\n  cursor: pointer;\n  overflow: hidden;\n  box-sizing: border-box;\n  -webkit-user-drag: none;\n}\n\n.button-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n.button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: inherit;\n  align-items: inherit;\n  justify-content: inherit;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n}\n\n:host(.ion-focused) .button-native {\n  color: var(--color-focused);\n}\n:host(.ion-focused) .button-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n@media (any-hover: hover) {\n  a:hover {\n    color: var(--color-selected);\n  }\n}\n:host(.tab-selected) {\n  color: var(--color-selected);\n}\n\n:host(.tab-hidden) {\n  /* stylelint-disable-next-line declaration-no-important */\n  display: none !important;\n}\n\n:host(.tab-disabled) {\n  pointer-events: none;\n  opacity: 0.4;\n}\n\n::slotted(ion-label),\n::slotted(ion-icon) {\n  display: block;\n  align-self: center;\n  max-width: 100%;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  box-sizing: border-box;\n}\n\n::slotted(ion-label) {\n  order: 0;\n}\n\n::slotted(ion-icon) {\n  order: -1;\n  height: 1em;\n}\n\n:host(.tab-has-label-only) ::slotted(ion-label) {\n  white-space: normal;\n}\n\n::slotted(ion-badge) {\n  box-sizing: border-box;\n  position: absolute;\n  z-index: 1;\n}\n\n:host(.tab-layout-icon-start) {\n  flex-direction: row;\n}\n\n:host(.tab-layout-icon-end) {\n  flex-direction: row-reverse;\n}\n\n:host(.tab-layout-icon-bottom) {\n  flex-direction: column-reverse;\n}\n\n:host(.tab-layout-icon-hide) ::slotted(ion-icon) {\n  display: none;\n}\n\n:host(.tab-layout-label-hide) ::slotted(ion-label) {\n  display: none;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --padding-top: 0;\n  --padding-end: 12px;\n  --padding-bottom: 0;\n  --padding-start: 12px;\n  max-width: 168px;\n  font-size: 12px;\n  font-weight: normal;\n  letter-spacing: 0.03em;\n}\n\n::slotted(ion-label) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  text-transform: none;\n}\n\n::slotted(ion-icon) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 16px;\n  margin-bottom: 16px;\n  transform-origin: center center;\n  font-size: 22px;\n}\n:host-context([dir=rtl]) ::slotted(ion-icon) {\n  transform-origin: calc(100% - center) center;\n}\n\n[dir=rtl] ::slotted(ion-icon) {\n  transform-origin: calc(100% - center) center;\n}\n\n@supports selector(:dir(rtl)) {\n  ::slotted(ion-icon):dir(rtl) {\n    transform-origin: calc(100% - center) center;\n  }\n}\n\n::slotted(ion-badge) {\n  border-radius: 8px;\n  -webkit-padding-start: 2px;\n  padding-inline-start: 2px;\n  -webkit-padding-end: 2px;\n  padding-inline-end: 2px;\n  padding-top: 3px;\n  padding-bottom: 2px;\n  top: 8px;\n  min-width: 12px;\n  font-size: 8px;\n  font-weight: normal;\n}\n::slotted(ion-badge) {\n  inset-inline-start: calc(50% + 6px);\n}\n\n::slotted(ion-badge:empty) {\n  display: block;\n  min-width: 8px;\n  height: 8px;\n}\n\n:host(.tab-layout-icon-top) ::slotted(ion-icon) {\n  margin-top: 6px;\n  margin-bottom: 2px;\n}\n\n:host(.tab-layout-icon-top) ::slotted(ion-label) {\n  margin-top: 0;\n  margin-bottom: 6px;\n}\n\n:host(.tab-layout-icon-bottom) ::slotted(ion-badge) {\n  top: 8px;\n}\n:host(.tab-layout-icon-bottom) ::slotted(ion-badge) {\n  inset-inline-start: 70%;\n}\n\n:host(.tab-layout-icon-bottom) ::slotted(ion-icon) {\n  margin-top: 0;\n  margin-bottom: 6px;\n}\n\n:host(.tab-layout-icon-bottom) ::slotted(ion-label) {\n  margin-top: 6px;\n  margin-bottom: 0;\n}\n\n:host(.tab-layout-icon-start) ::slotted(ion-badge),\n:host(.tab-layout-icon-end) ::slotted(ion-badge) {\n  top: 16px;\n}\n:host(.tab-layout-icon-start) ::slotted(ion-badge),\n:host(.tab-layout-icon-end) ::slotted(ion-badge) {\n  inset-inline-start: 80%;\n}\n\n:host(.tab-layout-icon-start) ::slotted(ion-icon) {\n  -webkit-margin-end: 6px;\n  margin-inline-end: 6px;\n}\n\n:host(.tab-layout-icon-end) ::slotted(ion-icon) {\n  -webkit-margin-start: 6px;\n  margin-inline-start: 6px;\n}\n\n:host(.tab-layout-icon-hide) ::slotted(ion-badge),\n:host(.tab-has-label-only) ::slotted(ion-badge) {\n  top: 16px;\n}\n:host(.tab-layout-icon-hide) ::slotted(ion-badge),\n:host(.tab-has-label-only) ::slotted(ion-badge) {\n  inset-inline-start: 70%;\n}\n\n:host(.tab-layout-icon-hide) ::slotted(ion-label),\n:host(.tab-has-label-only) ::slotted(ion-label) {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n:host(.tab-layout-label-hide) ::slotted(ion-badge),\n:host(.tab-has-icon-only) ::slotted(ion-badge) {\n  top: 16px;\n}\n\n:host(.tab-layout-label-hide) ::slotted(ion-icon),\n:host(.tab-has-icon-only) ::slotted(ion-icon) {\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 24px;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { inheritAttributes } from \"../../utils/helpers\";\nimport { config } from \"../../global/config\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @part native - The native HTML anchor element that wraps all child elements.\n */\nexport class TabButton {\n    constructor() {\n        this.inheritedAttributes = {};\n        this.onKeyUp = (ev) => {\n            if (ev.key === 'Enter' || ev.key === ' ') {\n                this.selectTab(ev);\n            }\n        };\n        this.onClick = (ev) => {\n            this.selectTab(ev);\n        };\n        this.disabled = false;\n        this.download = undefined;\n        this.href = undefined;\n        this.rel = undefined;\n        this.layout = undefined;\n        this.selected = false;\n        this.tab = undefined;\n        this.target = undefined;\n    }\n    onTabBarChanged(ev) {\n        const dispatchedFrom = ev.target;\n        const parent = this.el.parentElement;\n        if (ev.composedPath().includes(parent) || (dispatchedFrom === null || dispatchedFrom === void 0 ? void 0 : dispatchedFrom.contains(this.el))) {\n            this.selected = this.tab === ev.detail.tab;\n        }\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = Object.assign({}, inheritAttributes(this.el, ['aria-label']));\n        if (this.layout === undefined) {\n            this.layout = config.get('tabButtonLayout', 'icon-top');\n        }\n    }\n    selectTab(ev) {\n        if (this.tab !== undefined) {\n            if (!this.disabled) {\n                this.ionTabButtonClick.emit({\n                    tab: this.tab,\n                    href: this.href,\n                    selected: this.selected,\n                });\n            }\n            ev.preventDefault();\n        }\n    }\n    get hasLabel() {\n        return !!this.el.querySelector('ion-label');\n    }\n    get hasIcon() {\n        return !!this.el.querySelector('ion-icon');\n    }\n    render() {\n        const { disabled, hasIcon, hasLabel, href, rel, target, layout, selected, tab, inheritedAttributes } = this;\n        const mode = getIonMode(this);\n        const attrs = {\n            download: this.download,\n            href,\n            rel,\n            target,\n        };\n        return (h(Host, { key: '4b528ce31f67e10ad849e0c99bd034bba675c227', onClick: this.onClick, onKeyup: this.onKeyUp, id: tab !== undefined ? `tab-button-${tab}` : null, class: {\n                [mode]: true,\n                'tab-selected': selected,\n                'tab-disabled': disabled,\n                'tab-has-label': hasLabel,\n                'tab-has-icon': hasIcon,\n                'tab-has-label-only': hasLabel && !hasIcon,\n                'tab-has-icon-only': hasIcon && !hasLabel,\n                [`tab-layout-${layout}`]: true,\n                'ion-activatable': true,\n                'ion-selectable': true,\n                'ion-focusable': true,\n            } }, h(\"a\", Object.assign({ key: '0da8784b1b243ffaaaf04dd7adb55d6881ed0c08' }, attrs, { class: \"button-native\", part: \"native\", role: \"tab\", \"aria-selected\": selected ? 'true' : null, \"aria-disabled\": disabled ? 'true' : null, tabindex: disabled ? '-1' : undefined }, inheritedAttributes), h(\"span\", { key: '2c628e8f1ebc129f84876c01530468cb97d8bf3a', class: \"button-inner\" }, h(\"slot\", { key: '8052a171d197a7de1a7eb12b091c35f73ae1ee21' })), mode === 'md' && h(\"ion-ripple-effect\", { key: '4186bdb5ed045ec16f495a14fa30ac864c576227', type: \"unbounded\" }))));\n    }\n    static get is() { return \"ion-tab-button\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"tab-button.ios.scss\"],\n            \"md\": [\"tab-button.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"tab-button.ios.css\"],\n            \"md\": [\"tab-button.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the tab button.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"download\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"This attribute instructs browsers to download a URL instead of navigating to\\nit, so the user will be prompted to save it as a local file. If the attribute\\nhas a value, it is used as the pre-filled file name in the Save prompt\\n(the user can still change the file name if they want).\"\n                },\n                \"attribute\": \"download\",\n                \"reflect\": false\n            },\n            \"href\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Contains a URL or a URL fragment that the hyperlink points to.\\nIf this property is set, an anchor tag will be rendered.\"\n                },\n                \"attribute\": \"href\",\n                \"reflect\": false\n            },\n            \"rel\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the relationship of the target object to the link object.\\nThe value is a space-separated list of [link types](https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types).\"\n                },\n                \"attribute\": \"rel\",\n                \"reflect\": false\n            },\n            \"layout\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"TabButtonLayout\",\n                    \"resolved\": \"\\\"icon-bottom\\\" | \\\"icon-end\\\" | \\\"icon-hide\\\" | \\\"icon-start\\\" | \\\"icon-top\\\" | \\\"label-hide\\\" | undefined\",\n                    \"references\": {\n                        \"TabButtonLayout\": {\n                            \"location\": \"import\",\n                            \"path\": \"../tab-bar/tab-bar-interface\",\n                            \"id\": \"src/components/tab-bar/tab-bar-interface.ts::TabButtonLayout\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Set the layout of the text and icon in the tab bar.\\nIt defaults to `\\\"icon-top\\\"`.\"\n                },\n                \"attribute\": \"layout\",\n                \"reflect\": false\n            },\n            \"selected\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The selected tab component\"\n                },\n                \"attribute\": \"selected\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"tab\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"A tab id must be provided for each `ion-tab`. It's used internally to reference\\nthe selected tab or by the router to switch between them.\"\n                },\n                \"attribute\": \"tab\",\n                \"reflect\": false\n            },\n            \"target\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies where to display the linked URL.\\nOnly applies when an `href` is provided.\\nSpecial keywords: `\\\"_blank\\\"`, `\\\"_self\\\"`, `\\\"_parent\\\"`, `\\\"_top\\\"`.\"\n                },\n                \"attribute\": \"target\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionTabButtonClick\",\n                \"name\": \"ionTabButtonClick\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Emitted when the tab bar is clicked\"\n                },\n                \"complexType\": {\n                    \"original\": \"TabButtonClickEventDetail\",\n                    \"resolved\": \"TabButtonClickEventDetail\",\n                    \"references\": {\n                        \"TabButtonClickEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../tab-bar/tab-bar-interface\",\n                            \"id\": \"src/components/tab-bar/tab-bar-interface.ts::TabButtonClickEventDetail\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get elementRef() { return \"el\"; }\n    static get listeners() {\n        return [{\n                \"name\": \"ionTabBarChanged\",\n                \"method\": \"onTabBarChanged\",\n                \"target\": \"window\",\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  position: absolute;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  contain: layout size style;\n  z-index: 0;\n}\n\n.tabs-inner {\n  position: relative;\n  flex: 1;\n  contain: layout size style;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\n/**\n * @slot - Content is placed between the named slots if provided without a slot.\n * @slot top - Content is placed at the top of the screen.\n * @slot bottom - Content is placed at the bottom of the screen.\n */\nexport class Tabs {\n    constructor() {\n        this.transitioning = false;\n        this.onTabClicked = (ev) => {\n            const { href, tab } = ev.detail;\n            if (this.useRouter && href !== undefined) {\n                const router = document.querySelector('ion-router');\n                if (router) {\n                    router.push(href);\n                }\n            }\n            else {\n                this.select(tab);\n            }\n        };\n        this.selectedTab = undefined;\n        this.useRouter = false;\n    }\n    async componentWillLoad() {\n        if (!this.useRouter) {\n            this.useRouter = !!document.querySelector('ion-router') && !this.el.closest('[no-router]');\n        }\n        if (!this.useRouter) {\n            const tabs = this.tabs;\n            if (tabs.length > 0) {\n                await this.select(tabs[0]);\n            }\n        }\n        this.ionNavWillLoad.emit();\n    }\n    componentWillRender() {\n        const tabBar = this.el.querySelector('ion-tab-bar');\n        if (tabBar) {\n            const tab = this.selectedTab ? this.selectedTab.tab : undefined;\n            tabBar.selectedTab = tab;\n        }\n    }\n    /**\n     * Select a tab by the value of its `tab` property or an element reference. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.\n     *\n     * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n     */\n    async select(tab) {\n        const selectedTab = getTab(this.tabs, tab);\n        if (!this.shouldSwitch(selectedTab)) {\n            return false;\n        }\n        await this.setActive(selectedTab);\n        await this.notifyRouter();\n        this.tabSwitch();\n        return true;\n    }\n    /**\n     * Get a specific tab by the value of its `tab` property or an element reference. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.\n     *\n     * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n     */\n    async getTab(tab) {\n        return getTab(this.tabs, tab);\n    }\n    /**\n     * Get the currently selected tab. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.\n     */\n    getSelected() {\n        return Promise.resolve(this.selectedTab ? this.selectedTab.tab : undefined);\n    }\n    /** @internal */\n    async setRouteId(id) {\n        const selectedTab = getTab(this.tabs, id);\n        if (!this.shouldSwitch(selectedTab)) {\n            return { changed: false, element: this.selectedTab };\n        }\n        await this.setActive(selectedTab);\n        return {\n            changed: true,\n            element: this.selectedTab,\n            markVisible: () => this.tabSwitch(),\n        };\n    }\n    /** @internal */\n    async getRouteId() {\n        var _a;\n        const tabId = (_a = this.selectedTab) === null || _a === void 0 ? void 0 : _a.tab;\n        return tabId !== undefined ? { id: tabId, element: this.selectedTab } : undefined;\n    }\n    setActive(selectedTab) {\n        if (this.transitioning) {\n            return Promise.reject('transitioning already happening');\n        }\n        this.transitioning = true;\n        this.leavingTab = this.selectedTab;\n        this.selectedTab = selectedTab;\n        this.ionTabsWillChange.emit({ tab: selectedTab.tab });\n        selectedTab.active = true;\n        return Promise.resolve();\n    }\n    tabSwitch() {\n        const selectedTab = this.selectedTab;\n        const leavingTab = this.leavingTab;\n        this.leavingTab = undefined;\n        this.transitioning = false;\n        if (!selectedTab) {\n            return;\n        }\n        if (leavingTab !== selectedTab) {\n            if (leavingTab) {\n                leavingTab.active = false;\n            }\n            this.ionTabsDidChange.emit({ tab: selectedTab.tab });\n        }\n    }\n    notifyRouter() {\n        if (this.useRouter) {\n            const router = document.querySelector('ion-router');\n            if (router) {\n                return router.navChanged('forward');\n            }\n        }\n        return Promise.resolve(false);\n    }\n    shouldSwitch(selectedTab) {\n        const leavingTab = this.selectedTab;\n        return selectedTab !== undefined && selectedTab !== leavingTab && !this.transitioning;\n    }\n    get tabs() {\n        return Array.from(this.el.querySelectorAll('ion-tab'));\n    }\n    render() {\n        return (h(Host, { key: '239bdb2ff2ec5cfcc74c51812cf6240f48acc617', onIonTabButtonClick: this.onTabClicked }, h(\"slot\", { key: '2b266d0f87c7c82e992fe0d9b5c8f25569b118e3', name: \"top\" }), h(\"div\", { key: '4cbbd010f0b0b1cd82714db7d098d28fab6d5218', class: \"tabs-inner\" }, h(\"slot\", { key: '72b2a02cd29d5b30e47758f3d6daaa1021916256' })), h(\"slot\", { key: '25494076dbbf7606d477b44f1b969719e7b4a805', name: \"bottom\" })));\n    }\n    static get is() { return \"ion-tabs\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"tabs.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"tabs.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"useRouter\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"use-router\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"selectedTab\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionNavWillLoad\",\n                \"name\": \"ionNavWillLoad\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Emitted when the navigation will load a component.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionTabsWillChange\",\n                \"name\": \"ionTabsWillChange\",\n                \"bubbles\": false,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the navigation is about to transition to a new component.\"\n                },\n                \"complexType\": {\n                    \"original\": \"{ tab: string }\",\n                    \"resolved\": \"{ tab: string; }\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionTabsDidChange\",\n                \"name\": \"ionTabsDidChange\",\n                \"bubbles\": false,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the navigation has finished transitioning to a new component.\"\n                },\n                \"complexType\": {\n                    \"original\": \"{ tab: string }\",\n                    \"resolved\": \"{ tab: string; }\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"select\": {\n                \"complexType\": {\n                    \"signature\": \"(tab: string | HTMLIonTabElement) => Promise<boolean>\",\n                    \"parameters\": [{\n                            \"name\": \"tab\",\n                            \"type\": \"string | HTMLIonTabElement\",\n                            \"docs\": \"The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"HTMLIonTabElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLIonTabElement\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Select a tab by the value of its `tab` property or an element reference. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n                        }]\n                }\n            },\n            \"getTab\": {\n                \"complexType\": {\n                    \"signature\": \"(tab: string | HTMLIonTabElement) => Promise<HTMLIonTabElement | undefined>\",\n                    \"parameters\": [{\n                            \"name\": \"tab\",\n                            \"type\": \"string | HTMLIonTabElement\",\n                            \"docs\": \"The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"HTMLIonTabElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLIonTabElement\"\n                        }\n                    },\n                    \"return\": \"Promise<HTMLIonTabElement | undefined>\"\n                },\n                \"docs\": {\n                    \"text\": \"Get a specific tab by the value of its `tab` property or an element reference. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n                        }]\n                }\n            },\n            \"getSelected\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<string | undefined>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<string | undefined>\"\n                },\n                \"docs\": {\n                    \"text\": \"Get the currently selected tab. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.\",\n                    \"tags\": []\n                }\n            },\n            \"setRouteId\": {\n                \"complexType\": {\n                    \"signature\": \"(id: string) => Promise<RouteWrite>\",\n                    \"parameters\": [{\n                            \"name\": \"id\",\n                            \"type\": \"string\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"RouteWrite\": {\n                            \"location\": \"import\",\n                            \"path\": \"../router/utils/interface\",\n                            \"id\": \"src/components/router/utils/interface.ts::RouteWrite\"\n                        }\n                    },\n                    \"return\": \"Promise<RouteWrite>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            },\n            \"getRouteId\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<RouteID | undefined>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"RouteID\": {\n                            \"location\": \"import\",\n                            \"path\": \"../router/utils/interface\",\n                            \"id\": \"src/components/router/utils/interface.ts::RouteID\"\n                        }\n                    },\n                    \"return\": \"Promise<RouteID | undefined>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\nconst getTab = (tabs, tab) => {\n    const tabEl = typeof tab === 'string' ? tabs.find((t) => t.tab === tab) : tab;\n    if (!tabEl) {\n        console.error(`tab with id: \"${tabEl}\" does not exist`);\n    }\n    return tabEl;\n};\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host(.ion-color) {\n  color: var(--ion-color-base);\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { createColorClasses } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class Text {\n    constructor() {\n        this.color = undefined;\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: '4b76333b1ea5cab134b9dc1f5670c0d5a253fc32', class: createColorClasses(this.color, {\n                [mode]: true,\n            }) }, h(\"slot\", { key: '3dee5f16bc58b3d92547d910bd4f441a00ce2039' })));\n    }\n    static get is() { return \"ion-text\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"text.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"text.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            }\n        };\n    }\n}\n"],"mappings":"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"}